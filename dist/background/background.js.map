{"version":3,"file":"background.js","sources":["../../src/background/background.ts"],"sourcesContent":["import { Bookmark, SearchEngine, Theme, StorageData, ChromeMessage, ChromeMessageResponse } from '../types/index.js';\r\n\r\n// 声明Chrome API类型（如果@types/chrome不可用）\r\ndeclare const chrome: any;\r\n\r\n// 监听扩展安装\r\nchrome.runtime.onInstalled.addListener((details: any): void => {\r\n  if (details.reason === 'install') {\r\n    // 首次安装时初始化默认设置\r\n    initDefaultSettings();\r\n  } else if (details.reason === 'update') {\r\n    // 扩展更新时可以执行的操作\r\n    const thisVersion: string = chrome.runtime.getManifest().version;\r\n    console.log(`更新到版本 ${thisVersion}`);\r\n  }\r\n});\r\n\r\n// 初始化默认设置\r\nfunction initDefaultSettings(): void {\r\n  // 默认书签\r\n  const defaultBookmarks: Bookmark[] = [\r\n    { title: '百度', url: 'https://www.baidu.com', icon: 'https://www.baidu.com/favicon.ico' },\r\n    { title: '微博', url: 'https://weibo.com', icon: 'https://weibo.com/favicon.ico' },\r\n    { title: '知乎', url: 'https://www.zhihu.com', icon: 'https://static.zhihu.com/heifetz/favicon.ico' },\r\n    { title: 'Bilibili', url: 'https://www.bilibili.com', icon: 'https://www.bilibili.com/favicon.ico' }\r\n  ];\r\n\r\n  // 默认搜索引擎\r\n  const defaultSearchEngine: SearchEngine = 'baidu';\r\n  \r\n  // 默认主题\r\n  const defaultTheme: Theme = 'light';\r\n  \r\n  // 保存默认设置\r\n  const defaultSettings: StorageData = {\r\n    bookmarks: defaultBookmarks,\r\n    searchEngine: defaultSearchEngine,\r\n    theme: defaultTheme\r\n  };\r\n\r\n  chrome.storage.sync.set(defaultSettings, (): void => {\r\n    console.log('默认设置已初始化');\r\n  });\r\n}\r\n\r\n// 监听来自内容脚本或弹出窗口的消息\r\nchrome.runtime.onMessage.addListener((\r\n  message: ChromeMessage, \r\n  sender: any, \r\n  sendResponse: (response: ChromeMessageResponse) => void\r\n): boolean => {\r\n  if (message.action === 'getSearchEngine') {\r\n    // 获取当前搜索引擎设置\r\n    chrome.storage.sync.get('searchEngine', (data: StorageData): void => {\r\n      sendResponse({\r\n        success: true,\r\n        data: {\r\n          searchEngine: data.searchEngine || 'baidu'\r\n        }\r\n      });\r\n    });\r\n    return true; // 异步响应需要返回true\r\n  }\r\n  \r\n  if (message.action === 'getTheme') {\r\n    // 获取当前主题设置\r\n    chrome.storage.sync.get('theme', (data: StorageData): void => {\r\n      sendResponse({\r\n        success: true,\r\n        data: {\r\n          theme: data.theme || 'light'\r\n        }\r\n      });\r\n    });\r\n    return true; // 异步响应需要返回true\r\n  }\r\n\r\n  // 如果没有匹配的action，返回错误\r\n  sendResponse({\r\n    success: false,\r\n    error: `未知的操作: ${message.action}`\r\n  });\r\n  \r\n  return false;\r\n}); "],"names":["details","initDefaultSettings","thisVersion","defaultSettings","message","sender","sendResponse","data"],"mappings":"AAMA,OAAO,QAAQ,YAAY,YAAaA,GAAuB,CAC7D,GAAIA,EAAQ,SAAW,UAErBC,EAAA,UACSD,EAAQ,SAAW,SAAU,CAEtC,MAAME,EAAsB,OAAO,QAAQ,YAAA,EAAc,QACzD,QAAQ,IAAI,SAASA,CAAW,EAAE,CACpC,CACF,CAAC,EAGD,SAASD,GAA4B,CAgBnC,MAAME,EAA+B,CACnC,UAfmC,CACnC,CAAE,MAAO,KAAM,IAAK,wBAAyB,KAAM,mCAAA,EACnD,CAAE,MAAO,KAAM,IAAK,oBAAqB,KAAM,+BAAA,EAC/C,CAAE,MAAO,KAAM,IAAK,wBAAyB,KAAM,8CAAA,EACnD,CAAE,MAAO,WAAY,IAAK,2BAA4B,KAAM,sCAAA,CAAuC,EAYnG,aARwC,QASxC,MAN0B,OAMnB,EAGT,OAAO,QAAQ,KAAK,IAAIA,EAAiB,IAAY,CACnD,QAAQ,IAAI,UAAU,CACxB,CAAC,CACH,CAGA,OAAO,QAAQ,UAAU,YAAY,CACnCC,EACAC,EACAC,IAEIF,EAAQ,SAAW,mBAErB,OAAO,QAAQ,KAAK,IAAI,eAAiBG,GAA4B,CACnED,EAAa,CACX,QAAS,GACT,KAAM,CACJ,aAAcC,EAAK,cAAgB,OAAA,CACrC,CACD,CACH,CAAC,EACM,IAGLH,EAAQ,SAAW,YAErB,OAAO,QAAQ,KAAK,IAAI,QAAUG,GAA4B,CAC5DD,EAAa,CACX,QAAS,GACT,KAAM,CACJ,MAAOC,EAAK,OAAS,OAAA,CACvB,CACD,CACH,CAAC,EACM,KAITD,EAAa,CACX,QAAS,GACT,MAAO,UAAUF,EAAQ,MAAM,EAAA,CAChC,EAEM,GACR"}