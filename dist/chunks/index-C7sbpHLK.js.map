{"version":3,"file":"index-C7sbpHLK.js","sources":["../../node_modules/universal-user-agent/index.js","../../node_modules/before-after-hook/lib/register.js","../../node_modules/before-after-hook/lib/add.js","../../node_modules/before-after-hook/lib/remove.js","../../node_modules/before-after-hook/index.js","../../node_modules/@octokit/endpoint/dist-bundle/index.js","../../node_modules/fast-content-type-parse/index.js","../../node_modules/@octokit/request-error/dist-src/index.js","../../node_modules/@octokit/request/dist-bundle/index.js","../../node_modules/@octokit/graphql/dist-bundle/index.js","../../node_modules/@octokit/auth-token/dist-bundle/index.js","../../node_modules/@octokit/core/dist-src/version.js","../../node_modules/@octokit/core/dist-src/index.js","../../node_modules/@octokit/plugin-request-log/dist-src/version.js","../../node_modules/@octokit/plugin-request-log/dist-src/index.js","../../node_modules/@octokit/plugin-paginate-rest/dist-bundle/index.js","../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js","../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js","../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js","../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js","../../node_modules/@octokit/rest/dist-src/version.js","../../node_modules/@octokit/rest/dist-src/index.js"],"sourcesContent":["export function getUserAgent() {\n  if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n    return navigator.userAgent;\n  }\n\n  if (typeof process === \"object\" && process.version !== undefined) {\n    return `Node.js/${process.version.substr(1)} (${process.platform}; ${\n      process.arch\n    })`;\n  }\n\n  return \"<environment undetectable>\";\n}\n","// @ts-check\n\nexport function register(state, name, method, options) {\n  if (typeof method !== \"function\") {\n    throw new Error(\"method for before hook must be a function\");\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce((callback, name) => {\n      return register.bind(null, state, name, callback, options);\n    }, method)();\n  }\n\n  return Promise.resolve().then(() => {\n    if (!state.registry[name]) {\n      return method(options);\n    }\n\n    return state.registry[name].reduce((method, registered) => {\n      return registered.hook.bind(null, method, options);\n    }, method)();\n  });\n}\n","// @ts-check\n\nexport function addHook(state, kind, name, hook) {\n  const orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = (method, options) => {\n      let result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then((result_) => {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(() => {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = (method, options) => {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch((error) => {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n","// @ts-check\n\nexport function removeHook(state, name, method) {\n  if (!state.registry[name]) {\n    return;\n  }\n\n  const index = state.registry[name]\n    .map((registered) => {\n      return registered.orig;\n    })\n    .indexOf(method);\n\n  if (index === -1) {\n    return;\n  }\n\n  state.registry[name].splice(index, 1);\n}\n","// @ts-check\n\nimport { register } from \"./lib/register.js\";\nimport { addHook } from \"./lib/add.js\";\nimport { removeHook } from \"./lib/remove.js\";\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nconst bind = Function.bind;\nconst bindable = bind.bind(bind);\n\nfunction bindApi(hook, state, name) {\n  const removeHookRef = bindable(removeHook, null).apply(\n    null,\n    name ? [state, name] : [state]\n  );\n  hook.api = { remove: removeHookRef };\n  hook.remove = removeHookRef;\n  [\"before\", \"error\", \"after\", \"wrap\"].forEach((kind) => {\n    const args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\n\nfunction Singular() {\n  const singularHookName = Symbol(\"Singular\");\n  const singularHookState = {\n    registry: {},\n  };\n  const singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\n\nfunction Collection() {\n  const state = {\n    registry: {},\n  };\n\n  const hook = register.bind(null, state);\n  bindApi(hook, state);\n\n  return hook;\n}\n\nexport default { Singular, Collection };\n","// pkg/dist-src/defaults.js\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/defaults.js\nvar userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;\nvar DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\"\n  }\n};\n\n// pkg/dist-src/util/lowercase-keys.js\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\n// pkg/dist-src/util/is-plain-object.js\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) return false;\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) return true;\n  const Ctor = Object.prototype.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor === \"function\" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n}\n\n// pkg/dist-src/util/merge-deep.js\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach((key) => {\n    if (isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, { [key]: options[key] });\n      else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, { [key]: options[key] });\n    }\n  });\n  return result;\n}\n\n// pkg/dist-src/util/remove-undefined-properties.js\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === void 0) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\n// pkg/dist-src/merge.js\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? { method, url } : { url: method }, options);\n  } else {\n    options = Object.assign({}, route);\n  }\n  options.headers = lowercaseKeys(options.headers);\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options);\n  if (options.url === \"/graphql\") {\n    if (defaults && defaults.mediaType.previews?.length) {\n      mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(\n        (preview) => !mergedOptions.mediaType.previews.includes(preview)\n      ).concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = (mergedOptions.mediaType.previews || []).map((preview) => preview.replace(/-preview/, \"\"));\n  }\n  return mergedOptions;\n}\n\n// pkg/dist-src/util/add-query-parameters.js\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n  if (names.length === 0) {\n    return url;\n  }\n  return url + separator + names.map((name) => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\n// pkg/dist-src/util/extract-url-variable-names.js\nvar urlVariableRegex = /\\{[^{}}]+\\}/g;\nfunction removeNonChars(variableName) {\n  return variableName.replace(/(?:^\\W+)|(?:(?<!\\W)\\W+$)/g, \"\").split(/,/);\n}\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n  if (!matches) {\n    return [];\n  }\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\n// pkg/dist-src/util/omit.js\nfunction omit(object, keysToOmit) {\n  const result = { __proto__: null };\n  for (const key of Object.keys(object)) {\n    if (keysToOmit.indexOf(key) === -1) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\n// pkg/dist-src/util/url-template.js\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n    return part;\n  }).join(\"\");\n}\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\nfunction isDefined(value) {\n  return value !== void 0 && value !== null;\n}\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key], result = [];\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n      result.push(\n        encodeValue(operator, value, isKeyOperator(operator) ? key : \"\")\n      );\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            result.push(\n              encodeValue(operator, value2, isKeyOperator(operator) ? key : \"\")\n            );\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            tmp.push(encodeValue(operator, value2));\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n  return result;\n}\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  template = template.replace(\n    /\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g,\n    function(_, expression, literal) {\n      if (expression) {\n        let operator = \"\";\n        const values = [];\n        if (operators.indexOf(expression.charAt(0)) !== -1) {\n          operator = expression.charAt(0);\n          expression = expression.substr(1);\n        }\n        expression.split(/,/g).forEach(function(variable) {\n          var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n        });\n        if (operator && operator !== \"+\") {\n          var separator = \",\";\n          if (operator === \"?\") {\n            separator = \"&\";\n          } else if (operator !== \"#\") {\n            separator = operator;\n          }\n          return (values.length !== 0 ? operator : \"\") + values.join(separator);\n        } else {\n          return values.join(\",\");\n        }\n      } else {\n        return encodeReserved(literal);\n      }\n    }\n  );\n  if (template === \"/\") {\n    return template;\n  } else {\n    return template.replace(/\\/$/, \"\");\n  }\n}\n\n// pkg/dist-src/parse.js\nfunction parse(options) {\n  let method = options.method.toUpperCase();\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"mediaType\"\n  ]);\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      headers.accept = headers.accept.split(/,/).map(\n        (format) => format.replace(\n          /application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/,\n          `application/vnd$1$2.${options.mediaType.format}`\n        )\n      ).join(\",\");\n    }\n    if (url.endsWith(\"/graphql\")) {\n      if (options.mediaType.previews?.length) {\n        const previewsFromAcceptHeader = headers.accept.match(/(?<![\\w-])[\\w-]+(?=-preview)/g) || [];\n        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {\n          const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n          return `application/vnd.github.${preview}-preview${format}`;\n        }).join(\",\");\n      }\n    }\n  }\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      }\n    }\n  }\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  }\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  }\n  return Object.assign(\n    { method, url, headers },\n    typeof body !== \"undefined\" ? { body } : null,\n    options.request ? { request: options.request } : null\n  );\n}\n\n// pkg/dist-src/endpoint-with-defaults.js\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS2 = merge(oldDefaults, newDefaults);\n  const endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);\n  return Object.assign(endpoint2, {\n    DEFAULTS: DEFAULTS2,\n    defaults: withDefaults.bind(null, DEFAULTS2),\n    merge: merge.bind(null, DEFAULTS2),\n    parse\n  });\n}\n\n// pkg/dist-src/index.js\nvar endpoint = withDefaults(null, DEFAULTS);\nexport {\n  endpoint\n};\n","'use strict'\n\nconst NullObject = function NullObject () { }\nNullObject.prototype = Object.create(null)\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nconst paramRE = /; *([!#$%&'*+.^\\w`|~-]+)=(\"(?:[\\v\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\v\\u0020-\\u00ff])*\"|[!#$%&'*+.^\\w`|~-]+) */gu\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nconst quotedPairRE = /\\\\([\\v\\u0020-\\u00ff])/gu\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nconst mediaTypeRE = /^[!#$%&'*+.^\\w|~-]+\\/[!#$%&'*+.^\\w|~-]+$/u\n\n// default ContentType to prevent repeated object creation\nconst defaultContentType = { type: '', parameters: new NullObject() }\nObject.freeze(defaultContentType.parameters)\nObject.freeze(defaultContentType)\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} header\n * @return {Object}\n * @public\n */\n\nfunction parse (header) {\n  if (typeof header !== 'string') {\n    throw new TypeError('argument header is required and must be a string')\n  }\n\n  let index = header.indexOf(';')\n  const type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (mediaTypeRE.test(type) === false) {\n    throw new TypeError('invalid media type')\n  }\n\n  const result = {\n    type: type.toLowerCase(),\n    parameters: new NullObject()\n  }\n\n  // parse parameters\n  if (index === -1) {\n    return result\n  }\n\n  let key\n  let match\n  let value\n\n  paramRE.lastIndex = index\n\n  while ((match = paramRE.exec(header))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .slice(1, value.length - 1)\n\n      quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'))\n    }\n\n    result.parameters[key] = value\n  }\n\n  if (index !== header.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return result\n}\n\nfunction safeParse (header) {\n  if (typeof header !== 'string') {\n    return defaultContentType\n  }\n\n  let index = header.indexOf(';')\n  const type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (mediaTypeRE.test(type) === false) {\n    return defaultContentType\n  }\n\n  const result = {\n    type: type.toLowerCase(),\n    parameters: new NullObject()\n  }\n\n  // parse parameters\n  if (index === -1) {\n    return result\n  }\n\n  let key\n  let match\n  let value\n\n  paramRE.lastIndex = index\n\n  while ((match = paramRE.exec(header))) {\n    if (match.index !== index) {\n      return defaultContentType\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .slice(1, value.length - 1)\n\n      quotedPairRE.test(value) && (value = value.replace(quotedPairRE, '$1'))\n    }\n\n    result.parameters[key] = value\n  }\n\n  if (index !== header.length) {\n    return defaultContentType\n  }\n\n  return result\n}\n\nmodule.exports.default = { parse, safeParse }\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.defaultContentType = defaultContentType\n","class RequestError extends Error {\n  name;\n  /**\n   * http status code\n   */\n  status;\n  /**\n   * Request options that lead to the error.\n   */\n  request;\n  /**\n   * Response object if a response was received\n   */\n  response;\n  constructor(message, statusCode, options) {\n    super(message);\n    this.name = \"HttpError\";\n    this.status = Number.parseInt(statusCode);\n    if (Number.isNaN(this.status)) {\n      this.status = 0;\n    }\n    if (\"response\" in options) {\n      this.response = options.response;\n    }\n    const requestCopy = Object.assign({}, options.request);\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(\n          /(?<! ) .*$/,\n          \" [REDACTED]\"\n        )\n      });\n    }\n    requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n  }\n}\nexport {\n  RequestError\n};\n","// pkg/dist-src/index.js\nimport { endpoint } from \"@octokit/endpoint\";\n\n// pkg/dist-src/defaults.js\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"10.0.3\";\n\n// pkg/dist-src/defaults.js\nvar defaults_default = {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`\n  }\n};\n\n// pkg/dist-src/fetch-wrapper.js\nimport { safeParse } from \"fast-content-type-parse\";\n\n// pkg/dist-src/is-plain-object.js\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) return false;\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) return true;\n  const Ctor = Object.prototype.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor === \"function\" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);\n}\n\n// pkg/dist-src/fetch-wrapper.js\nimport { RequestError } from \"@octokit/request-error\";\nasync function fetchWrapper(requestOptions) {\n  const fetch = requestOptions.request?.fetch || globalThis.fetch;\n  if (!fetch) {\n    throw new Error(\n      \"fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing\"\n    );\n  }\n  const log = requestOptions.request?.log || console;\n  const parseSuccessResponseBody = requestOptions.request?.parseSuccessResponseBody !== false;\n  const body = isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body) ? JSON.stringify(requestOptions.body) : requestOptions.body;\n  const requestHeaders = Object.fromEntries(\n    Object.entries(requestOptions.headers).map(([name, value]) => [\n      name,\n      String(value)\n    ])\n  );\n  let fetchResponse;\n  try {\n    fetchResponse = await fetch(requestOptions.url, {\n      method: requestOptions.method,\n      body,\n      redirect: requestOptions.request?.redirect,\n      headers: requestHeaders,\n      signal: requestOptions.request?.signal,\n      // duplex must be set if request.body is ReadableStream or Async Iterables.\n      // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.\n      ...requestOptions.body && { duplex: \"half\" }\n    });\n  } catch (error) {\n    let message = \"Unknown Error\";\n    if (error instanceof Error) {\n      if (error.name === \"AbortError\") {\n        error.status = 500;\n        throw error;\n      }\n      message = error.message;\n      if (error.name === \"TypeError\" && \"cause\" in error) {\n        if (error.cause instanceof Error) {\n          message = error.cause.message;\n        } else if (typeof error.cause === \"string\") {\n          message = error.cause;\n        }\n      }\n    }\n    const requestError = new RequestError(message, 500, {\n      request: requestOptions\n    });\n    requestError.cause = error;\n    throw requestError;\n  }\n  const status = fetchResponse.status;\n  const url = fetchResponse.url;\n  const responseHeaders = {};\n  for (const [key, value] of fetchResponse.headers) {\n    responseHeaders[key] = value;\n  }\n  const octokitResponse = {\n    url,\n    status,\n    headers: responseHeaders,\n    data: \"\"\n  };\n  if (\"deprecation\" in responseHeaders) {\n    const matches = responseHeaders.link && responseHeaders.link.match(/<([^<>]+)>; rel=\"deprecation\"/);\n    const deprecationLink = matches && matches.pop();\n    log.warn(\n      `[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${responseHeaders.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`\n    );\n  }\n  if (status === 204 || status === 205) {\n    return octokitResponse;\n  }\n  if (requestOptions.method === \"HEAD\") {\n    if (status < 400) {\n      return octokitResponse;\n    }\n    throw new RequestError(fetchResponse.statusText, status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  if (status === 304) {\n    octokitResponse.data = await getResponseData(fetchResponse);\n    throw new RequestError(\"Not modified\", status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  if (status >= 400) {\n    octokitResponse.data = await getResponseData(fetchResponse);\n    throw new RequestError(toErrorMessage(octokitResponse.data), status, {\n      response: octokitResponse,\n      request: requestOptions\n    });\n  }\n  octokitResponse.data = parseSuccessResponseBody ? await getResponseData(fetchResponse) : fetchResponse.body;\n  return octokitResponse;\n}\nasync function getResponseData(response) {\n  const contentType = response.headers.get(\"content-type\");\n  if (!contentType) {\n    return response.text().catch(() => \"\");\n  }\n  const mimetype = safeParse(contentType);\n  if (isJSONResponse(mimetype)) {\n    let text = \"\";\n    try {\n      text = await response.text();\n      return JSON.parse(text);\n    } catch (err) {\n      return text;\n    }\n  } else if (mimetype.type.startsWith(\"text/\") || mimetype.parameters.charset?.toLowerCase() === \"utf-8\") {\n    return response.text().catch(() => \"\");\n  } else {\n    return response.arrayBuffer().catch(() => new ArrayBuffer(0));\n  }\n}\nfunction isJSONResponse(mimetype) {\n  return mimetype.type === \"application/json\" || mimetype.type === \"application/scim+json\";\n}\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\") {\n    return data;\n  }\n  if (data instanceof ArrayBuffer) {\n    return \"Unknown error\";\n  }\n  if (\"message\" in data) {\n    const suffix = \"documentation_url\" in data ? ` - ${data.documentation_url}` : \"\";\n    return Array.isArray(data.errors) ? `${data.message}: ${data.errors.map((v) => JSON.stringify(v)).join(\", \")}${suffix}` : `${data.message}${suffix}`;\n  }\n  return `Unknown error: ${JSON.stringify(data)}`;\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint2 = oldEndpoint.defaults(newDefaults);\n  const newApi = function(route, parameters) {\n    const endpointOptions = endpoint2.merge(route, parameters);\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint2.parse(endpointOptions));\n    }\n    const request2 = (route2, parameters2) => {\n      return fetchWrapper(\n        endpoint2.parse(endpoint2.merge(route2, parameters2))\n      );\n    };\n    Object.assign(request2, {\n      endpoint: endpoint2,\n      defaults: withDefaults.bind(null, endpoint2)\n    });\n    return endpointOptions.request.hook(request2, endpointOptions);\n  };\n  return Object.assign(newApi, {\n    endpoint: endpoint2,\n    defaults: withDefaults.bind(null, endpoint2)\n  });\n}\n\n// pkg/dist-src/index.js\nvar request = withDefaults(endpoint, defaults_default);\nexport {\n  request\n};\n","// pkg/dist-src/index.js\nimport { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/with-defaults.js\nimport { request as Request2 } from \"@octokit/request\";\n\n// pkg/dist-src/graphql.js\nimport { request as Request } from \"@octokit/request\";\n\n// pkg/dist-src/error.js\nfunction _buildMessageForResponseErrors(data) {\n  return `Request failed due to following response errors:\n` + data.errors.map((e) => ` - ${e.message}`).join(\"\\n\");\n}\nvar GraphqlResponseError = class extends Error {\n  constructor(request2, headers, response) {\n    super(_buildMessageForResponseErrors(response));\n    this.request = request2;\n    this.headers = headers;\n    this.response = response;\n    this.errors = response.errors;\n    this.data = response.data;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n  name = \"GraphqlResponseError\";\n  errors;\n  data;\n};\n\n// pkg/dist-src/graphql.js\nvar NON_VARIABLE_OPTIONS = [\n  \"method\",\n  \"baseUrl\",\n  \"url\",\n  \"headers\",\n  \"request\",\n  \"query\",\n  \"mediaType\",\n  \"operationName\"\n];\nvar FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nvar GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request2, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(\n        new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`)\n      );\n    }\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(\n        new Error(\n          `[@octokit/graphql] \"${key}\" cannot be used as variable name`\n        )\n      );\n    }\n  }\n  const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n  const requestOptions = Object.keys(\n    parsedOptions\n  ).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n    if (!result.variables) {\n      result.variables = {};\n    }\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {});\n  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n  return request2(requestOptions).then((response) => {\n    if (response.data.errors) {\n      const headers = {};\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n      throw new GraphqlResponseError(\n        requestOptions,\n        headers,\n        response.data\n      );\n    }\n    return response.data.data;\n  });\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(request2, newDefaults) {\n  const newRequest = request2.defaults(newDefaults);\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: newRequest.endpoint\n  });\n}\n\n// pkg/dist-src/index.js\nvar graphql2 = withDefaults(request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\nexport {\n  GraphqlResponseError,\n  graphql2 as graphql,\n  withCustomRequest\n};\n","// pkg/dist-src/is-jwt.js\nvar b64url = \"(?:[a-zA-Z0-9_-]+)\";\nvar sep = \"\\\\.\";\nvar jwtRE = new RegExp(`^${b64url}${sep}${b64url}${sep}${b64url}$`);\nvar isJWT = jwtRE.test.bind(jwtRE);\n\n// pkg/dist-src/auth.js\nasync function auth(token) {\n  const isApp = isJWT(token);\n  const isInstallation = token.startsWith(\"v1.\") || token.startsWith(\"ghs_\");\n  const isUserToServer = token.startsWith(\"ghu_\");\n  const tokenType = isApp ? \"app\" : isInstallation ? \"installation\" : isUserToServer ? \"user-to-server\" : \"oauth\";\n  return {\n    type: \"token\",\n    token,\n    tokenType\n  };\n}\n\n// pkg/dist-src/with-authorization-prefix.js\nfunction withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n  return `token ${token}`;\n}\n\n// pkg/dist-src/hook.js\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(\n    route,\n    parameters\n  );\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\n\n// pkg/dist-src/index.js\nvar createTokenAuth = function createTokenAuth2(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n  if (typeof token !== \"string\") {\n    throw new Error(\n      \"[@octokit/auth-token] Token passed to createTokenAuth is not a string\"\n    );\n  }\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\nexport {\n  createTokenAuth\n};\n","const VERSION = \"7.0.3\";\nexport {\n  VERSION\n};\n","import { getUserAgent } from \"universal-user-agent\";\nimport Hook from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\nimport { VERSION } from \"./version.js\";\nconst noop = () => {\n};\nconst consoleWarn = console.warn.bind(console);\nconst consoleError = console.error.bind(console);\nfunction createLogger(logger = {}) {\n  if (typeof logger.debug !== \"function\") {\n    logger.debug = noop;\n  }\n  if (typeof logger.info !== \"function\") {\n    logger.info = noop;\n  }\n  if (typeof logger.warn !== \"function\") {\n    logger.warn = consoleWarn;\n  }\n  if (typeof logger.error !== \"function\") {\n    logger.error = consoleError;\n  }\n  return logger;\n}\nconst userAgentTrail = `octokit-core.js/${VERSION} ${getUserAgent()}`;\nclass Octokit {\n  static VERSION = VERSION;\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n        super(\n          Object.assign(\n            {},\n            defaults,\n            options,\n            options.userAgent && defaults.userAgent ? {\n              userAgent: `${options.userAgent} ${defaults.userAgent}`\n            } : null\n          )\n        );\n      }\n    };\n    return OctokitWithDefaults;\n  }\n  static plugins = [];\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n  static plugin(...newPlugins) {\n    const currentPlugins = this.plugins;\n    const NewOctokit = class extends this {\n      static plugins = currentPlugins.concat(\n        newPlugins.filter((plugin) => !currentPlugins.includes(plugin))\n      );\n    };\n    return NewOctokit;\n  }\n  constructor(options = {}) {\n    const hook = new Hook.Collection();\n    const requestDefaults = {\n      baseUrl: request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    };\n    requestDefaults.headers[\"user-agent\"] = options.userAgent ? `${options.userAgent} ${userAgentTrail}` : userAgentTrail;\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n    this.request = request.defaults(requestDefaults);\n    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = createLogger(options.log);\n    this.hook = hook;\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        const auth = createTokenAuth(options.auth);\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const { authStrategy, ...otherOptions } = options;\n      const auth = authStrategy(\n        Object.assign(\n          {\n            request: this.request,\n            log: this.log,\n            // we pass the current octokit instance as well as its constructor options\n            // to allow for authentication strategies that return a new octokit instance\n            // that shares the same internal state as the current one. The original\n            // requirement for this was the \"event-octokit\" authentication strategy\n            // of https://github.com/probot/octokit-auth-probot.\n            octokit: this,\n            octokitOptions: otherOptions\n          },\n          options.auth\n        )\n      );\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    }\n    const classConstructor = this.constructor;\n    for (let i = 0; i < classConstructor.plugins.length; ++i) {\n      Object.assign(this, classConstructor.plugins[i](this, options));\n    }\n  }\n  // assigned during constructor\n  request;\n  graphql;\n  log;\n  hook;\n  // TODO: type `octokit.auth` based on passed options.authStrategy\n  auth;\n}\nexport {\n  Octokit\n};\n","const VERSION = \"6.0.0\";\nexport {\n  VERSION\n};\n","import { VERSION } from \"./version.js\";\nfunction requestLog(octokit) {\n  octokit.hook.wrap(\"request\", (request, options) => {\n    octokit.log.debug(\"request\", options);\n    const start = Date.now();\n    const requestOptions = octokit.request.endpoint.parse(options);\n    const path = requestOptions.url.replace(options.baseUrl, \"\");\n    return request(options).then((response) => {\n      const requestId = response.headers[\"x-github-request-id\"];\n      octokit.log.info(\n        `${requestOptions.method} ${path} - ${response.status} with id ${requestId} in ${Date.now() - start}ms`\n      );\n      return response;\n    }).catch((error) => {\n      const requestId = error.response?.headers[\"x-github-request-id\"] || \"UNKNOWN\";\n      octokit.log.error(\n        `${requestOptions.method} ${path} - ${error.status} with id ${requestId} in ${Date.now() - start}ms`\n      );\n      throw error;\n    });\n  });\n}\nrequestLog.VERSION = VERSION;\nexport {\n  requestLog\n};\n","// pkg/dist-src/version.js\nvar VERSION = \"0.0.0-development\";\n\n// pkg/dist-src/normalize-paginated-list-response.js\nfunction normalizePaginatedListResponse(response) {\n  if (!response.data) {\n    return {\n      ...response,\n      data: []\n    };\n  }\n  const responseNeedsNormalization = (\"total_count\" in response.data || \"total_commits\" in response.data) && !(\"url\" in response.data);\n  if (!responseNeedsNormalization) return response;\n  const incompleteResults = response.data.incomplete_results;\n  const repositorySelection = response.data.repository_selection;\n  const totalCount = response.data.total_count;\n  const totalCommits = response.data.total_commits;\n  delete response.data.incomplete_results;\n  delete response.data.repository_selection;\n  delete response.data.total_count;\n  delete response.data.total_commits;\n  const namespaceKey = Object.keys(response.data)[0];\n  const data = response.data[namespaceKey];\n  response.data = data;\n  if (typeof incompleteResults !== \"undefined\") {\n    response.data.incomplete_results = incompleteResults;\n  }\n  if (typeof repositorySelection !== \"undefined\") {\n    response.data.repository_selection = repositorySelection;\n  }\n  response.data.total_count = totalCount;\n  response.data.total_commits = totalCommits;\n  return response;\n}\n\n// pkg/dist-src/iterator.js\nfunction iterator(octokit, route, parameters) {\n  const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n  const requestMethod = typeof route === \"function\" ? route : octokit.request;\n  const method = options.method;\n  const headers = options.headers;\n  let url = options.url;\n  return {\n    [Symbol.asyncIterator]: () => ({\n      async next() {\n        if (!url) return { done: true };\n        try {\n          const response = await requestMethod({ method, url, headers });\n          const normalizedResponse = normalizePaginatedListResponse(response);\n          url = ((normalizedResponse.headers.link || \"\").match(\n            /<([^<>]+)>;\\s*rel=\"next\"/\n          ) || [])[1];\n          if (!url && \"total_commits\" in normalizedResponse.data) {\n            const parsedUrl = new URL(normalizedResponse.url);\n            const params = parsedUrl.searchParams;\n            const page = parseInt(params.get(\"page\") || \"1\", 10);\n            const per_page = parseInt(params.get(\"per_page\") || \"250\", 10);\n            if (page * per_page < normalizedResponse.data.total_commits) {\n              params.set(\"page\", String(page + 1));\n              url = parsedUrl.toString();\n            }\n          }\n          return { value: normalizedResponse };\n        } catch (error) {\n          if (error.status !== 409) throw error;\n          url = \"\";\n          return {\n            value: {\n              status: 200,\n              headers: {},\n              data: []\n            }\n          };\n        }\n      }\n    })\n  };\n}\n\n// pkg/dist-src/paginate.js\nfunction paginate(octokit, route, parameters, mapFn) {\n  if (typeof parameters === \"function\") {\n    mapFn = parameters;\n    parameters = void 0;\n  }\n  return gather(\n    octokit,\n    [],\n    iterator(octokit, route, parameters)[Symbol.asyncIterator](),\n    mapFn\n  );\n}\nfunction gather(octokit, results, iterator2, mapFn) {\n  return iterator2.next().then((result) => {\n    if (result.done) {\n      return results;\n    }\n    let earlyExit = false;\n    function done() {\n      earlyExit = true;\n    }\n    results = results.concat(\n      mapFn ? mapFn(result.value, done) : result.value.data\n    );\n    if (earlyExit) {\n      return results;\n    }\n    return gather(octokit, results, iterator2, mapFn);\n  });\n}\n\n// pkg/dist-src/compose-paginate.js\nvar composePaginateRest = Object.assign(paginate, {\n  iterator\n});\n\n// pkg/dist-src/generated/paginating-endpoints.js\nvar paginatingEndpoints = [\n  \"GET /advisories\",\n  \"GET /app/hook/deliveries\",\n  \"GET /app/installation-requests\",\n  \"GET /app/installations\",\n  \"GET /assignments/{assignment_id}/accepted_assignments\",\n  \"GET /classrooms\",\n  \"GET /classrooms/{classroom_id}/assignments\",\n  \"GET /enterprises/{enterprise}/code-security/configurations\",\n  \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories\",\n  \"GET /enterprises/{enterprise}/dependabot/alerts\",\n  \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n  \"GET /events\",\n  \"GET /gists\",\n  \"GET /gists/public\",\n  \"GET /gists/starred\",\n  \"GET /gists/{gist_id}/comments\",\n  \"GET /gists/{gist_id}/commits\",\n  \"GET /gists/{gist_id}/forks\",\n  \"GET /installation/repositories\",\n  \"GET /issues\",\n  \"GET /licenses\",\n  \"GET /marketplace_listing/plans\",\n  \"GET /marketplace_listing/plans/{plan_id}/accounts\",\n  \"GET /marketplace_listing/stubbed/plans\",\n  \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n  \"GET /networks/{owner}/{repo}/events\",\n  \"GET /notifications\",\n  \"GET /organizations\",\n  \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n  \"GET /orgs/{org}/actions/hosted-runners\",\n  \"GET /orgs/{org}/actions/permissions/repositories\",\n  \"GET /orgs/{org}/actions/runner-groups\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\",\n  \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\",\n  \"GET /orgs/{org}/actions/runners\",\n  \"GET /orgs/{org}/actions/secrets\",\n  \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/actions/variables\",\n  \"GET /orgs/{org}/actions/variables/{name}/repositories\",\n  \"GET /orgs/{org}/attestations/{subject_digest}\",\n  \"GET /orgs/{org}/blocks\",\n  \"GET /orgs/{org}/campaigns\",\n  \"GET /orgs/{org}/code-scanning/alerts\",\n  \"GET /orgs/{org}/code-security/configurations\",\n  \"GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories\",\n  \"GET /orgs/{org}/codespaces\",\n  \"GET /orgs/{org}/codespaces/secrets\",\n  \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/copilot/billing/seats\",\n  \"GET /orgs/{org}/copilot/metrics\",\n  \"GET /orgs/{org}/dependabot/alerts\",\n  \"GET /orgs/{org}/dependabot/secrets\",\n  \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/events\",\n  \"GET /orgs/{org}/failed_invitations\",\n  \"GET /orgs/{org}/hooks\",\n  \"GET /orgs/{org}/hooks/{hook_id}/deliveries\",\n  \"GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}\",\n  \"GET /orgs/{org}/insights/api/subject-stats\",\n  \"GET /orgs/{org}/insights/api/user-stats/{user_id}\",\n  \"GET /orgs/{org}/installations\",\n  \"GET /orgs/{org}/invitations\",\n  \"GET /orgs/{org}/invitations/{invitation_id}/teams\",\n  \"GET /orgs/{org}/issues\",\n  \"GET /orgs/{org}/members\",\n  \"GET /orgs/{org}/members/{username}/codespaces\",\n  \"GET /orgs/{org}/migrations\",\n  \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n  \"GET /orgs/{org}/organization-roles/{role_id}/teams\",\n  \"GET /orgs/{org}/organization-roles/{role_id}/users\",\n  \"GET /orgs/{org}/outside_collaborators\",\n  \"GET /orgs/{org}/packages\",\n  \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n  \"GET /orgs/{org}/personal-access-token-requests\",\n  \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\",\n  \"GET /orgs/{org}/personal-access-tokens\",\n  \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\",\n  \"GET /orgs/{org}/private-registries\",\n  \"GET /orgs/{org}/projects\",\n  \"GET /orgs/{org}/properties/values\",\n  \"GET /orgs/{org}/public_members\",\n  \"GET /orgs/{org}/repos\",\n  \"GET /orgs/{org}/rulesets\",\n  \"GET /orgs/{org}/rulesets/rule-suites\",\n  \"GET /orgs/{org}/rulesets/{ruleset_id}/history\",\n  \"GET /orgs/{org}/secret-scanning/alerts\",\n  \"GET /orgs/{org}/security-advisories\",\n  \"GET /orgs/{org}/settings/network-configurations\",\n  \"GET /orgs/{org}/team/{team_slug}/copilot/metrics\",\n  \"GET /orgs/{org}/teams\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n  \"GET /orgs/{org}/teams/{team_slug}/members\",\n  \"GET /orgs/{org}/teams/{team_slug}/projects\",\n  \"GET /orgs/{org}/teams/{team_slug}/repos\",\n  \"GET /orgs/{org}/teams/{team_slug}/teams\",\n  \"GET /projects/columns/{column_id}/cards\",\n  \"GET /projects/{project_id}/collaborators\",\n  \"GET /projects/{project_id}/columns\",\n  \"GET /repos/{owner}/{repo}/actions/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/caches\",\n  \"GET /repos/{owner}/{repo}/actions/organization-secrets\",\n  \"GET /repos/{owner}/{repo}/actions/organization-variables\",\n  \"GET /repos/{owner}/{repo}/actions/runners\",\n  \"GET /repos/{owner}/{repo}/actions/runs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/secrets\",\n  \"GET /repos/{owner}/{repo}/actions/variables\",\n  \"GET /repos/{owner}/{repo}/actions/workflows\",\n  \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n  \"GET /repos/{owner}/{repo}/activity\",\n  \"GET /repos/{owner}/{repo}/assignees\",\n  \"GET /repos/{owner}/{repo}/attestations/{subject_digest}\",\n  \"GET /repos/{owner}/{repo}/branches\",\n  \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n  \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n  \"GET /repos/{owner}/{repo}/code-scanning/analyses\",\n  \"GET /repos/{owner}/{repo}/codespaces\",\n  \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n  \"GET /repos/{owner}/{repo}/codespaces/secrets\",\n  \"GET /repos/{owner}/{repo}/collaborators\",\n  \"GET /repos/{owner}/{repo}/comments\",\n  \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/commits\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/status\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n  \"GET /repos/{owner}/{repo}/compare/{basehead}\",\n  \"GET /repos/{owner}/{repo}/compare/{base}...{head}\",\n  \"GET /repos/{owner}/{repo}/contributors\",\n  \"GET /repos/{owner}/{repo}/dependabot/alerts\",\n  \"GET /repos/{owner}/{repo}/dependabot/secrets\",\n  \"GET /repos/{owner}/{repo}/deployments\",\n  \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n  \"GET /repos/{owner}/{repo}/environments\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables\",\n  \"GET /repos/{owner}/{repo}/events\",\n  \"GET /repos/{owner}/{repo}/forks\",\n  \"GET /repos/{owner}/{repo}/hooks\",\n  \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n  \"GET /repos/{owner}/{repo}/invitations\",\n  \"GET /repos/{owner}/{repo}/issues\",\n  \"GET /repos/{owner}/{repo}/issues/comments\",\n  \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n  \"GET /repos/{owner}/{repo}/keys\",\n  \"GET /repos/{owner}/{repo}/labels\",\n  \"GET /repos/{owner}/{repo}/milestones\",\n  \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n  \"GET /repos/{owner}/{repo}/notifications\",\n  \"GET /repos/{owner}/{repo}/pages/builds\",\n  \"GET /repos/{owner}/{repo}/projects\",\n  \"GET /repos/{owner}/{repo}/pulls\",\n  \"GET /repos/{owner}/{repo}/pulls/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n  \"GET /repos/{owner}/{repo}/releases\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/rules/branches/{branch}\",\n  \"GET /repos/{owner}/{repo}/rulesets\",\n  \"GET /repos/{owner}/{repo}/rulesets/rule-suites\",\n  \"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n  \"GET /repos/{owner}/{repo}/security-advisories\",\n  \"GET /repos/{owner}/{repo}/stargazers\",\n  \"GET /repos/{owner}/{repo}/subscribers\",\n  \"GET /repos/{owner}/{repo}/tags\",\n  \"GET /repos/{owner}/{repo}/teams\",\n  \"GET /repos/{owner}/{repo}/topics\",\n  \"GET /repositories\",\n  \"GET /search/code\",\n  \"GET /search/commits\",\n  \"GET /search/issues\",\n  \"GET /search/labels\",\n  \"GET /search/repositories\",\n  \"GET /search/topics\",\n  \"GET /search/users\",\n  \"GET /teams/{team_id}/discussions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\",\n  \"GET /teams/{team_id}/invitations\",\n  \"GET /teams/{team_id}/members\",\n  \"GET /teams/{team_id}/projects\",\n  \"GET /teams/{team_id}/repos\",\n  \"GET /teams/{team_id}/teams\",\n  \"GET /user/blocks\",\n  \"GET /user/codespaces\",\n  \"GET /user/codespaces/secrets\",\n  \"GET /user/emails\",\n  \"GET /user/followers\",\n  \"GET /user/following\",\n  \"GET /user/gpg_keys\",\n  \"GET /user/installations\",\n  \"GET /user/installations/{installation_id}/repositories\",\n  \"GET /user/issues\",\n  \"GET /user/keys\",\n  \"GET /user/marketplace_purchases\",\n  \"GET /user/marketplace_purchases/stubbed\",\n  \"GET /user/memberships/orgs\",\n  \"GET /user/migrations\",\n  \"GET /user/migrations/{migration_id}/repositories\",\n  \"GET /user/orgs\",\n  \"GET /user/packages\",\n  \"GET /user/packages/{package_type}/{package_name}/versions\",\n  \"GET /user/public_emails\",\n  \"GET /user/repos\",\n  \"GET /user/repository_invitations\",\n  \"GET /user/social_accounts\",\n  \"GET /user/ssh_signing_keys\",\n  \"GET /user/starred\",\n  \"GET /user/subscriptions\",\n  \"GET /user/teams\",\n  \"GET /users\",\n  \"GET /users/{username}/attestations/{subject_digest}\",\n  \"GET /users/{username}/events\",\n  \"GET /users/{username}/events/orgs/{org}\",\n  \"GET /users/{username}/events/public\",\n  \"GET /users/{username}/followers\",\n  \"GET /users/{username}/following\",\n  \"GET /users/{username}/gists\",\n  \"GET /users/{username}/gpg_keys\",\n  \"GET /users/{username}/keys\",\n  \"GET /users/{username}/orgs\",\n  \"GET /users/{username}/packages\",\n  \"GET /users/{username}/projects\",\n  \"GET /users/{username}/received_events\",\n  \"GET /users/{username}/received_events/public\",\n  \"GET /users/{username}/repos\",\n  \"GET /users/{username}/social_accounts\",\n  \"GET /users/{username}/ssh_signing_keys\",\n  \"GET /users/{username}/starred\",\n  \"GET /users/{username}/subscriptions\"\n];\n\n// pkg/dist-src/paginating-endpoints.js\nfunction isPaginatingEndpoint(arg) {\n  if (typeof arg === \"string\") {\n    return paginatingEndpoints.includes(arg);\n  } else {\n    return false;\n  }\n}\n\n// pkg/dist-src/index.js\nfunction paginateRest(octokit) {\n  return {\n    paginate: Object.assign(paginate.bind(null, octokit), {\n      iterator: iterator.bind(null, octokit)\n    })\n  };\n}\npaginateRest.VERSION = VERSION;\nexport {\n  composePaginateRest,\n  isPaginatingEndpoint,\n  paginateRest,\n  paginatingEndpoints\n};\n","const VERSION = \"16.0.0\";\nexport {\n  VERSION\n};\n//# sourceMappingURL=version.js.map\n","const Endpoints = {\n  actions: {\n    addCustomLabelsToSelfHostedRunnerForOrg: [\n      \"POST /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    addCustomLabelsToSelfHostedRunnerForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    addRepoAccessToSelfHostedRunnerGroupInOrg: [\n      \"PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\n    ],\n    approveWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"\n    ],\n    cancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"\n    ],\n    createEnvironmentVariable: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/variables\"\n    ],\n    createHostedRunnerForOrg: [\"POST /orgs/{org}/actions/hosted-runners\"],\n    createOrUpdateEnvironmentSecret: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\n    ],\n    createOrgVariable: [\"POST /orgs/{org}/actions/variables\"],\n    createRegistrationTokenForOrg: [\n      \"POST /orgs/{org}/actions/runners/registration-token\"\n    ],\n    createRegistrationTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/registration-token\"\n    ],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/remove-token\"\n    ],\n    createRepoVariable: [\"POST /repos/{owner}/{repo}/actions/variables\"],\n    createWorkflowDispatch: [\n      \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"\n    ],\n    deleteActionsCacheById: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\"\n    ],\n    deleteActionsCacheByKey: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\"\n    ],\n    deleteArtifact: [\n      \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"\n    ],\n    deleteEnvironmentSecret: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    deleteEnvironmentVariable: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\"\n    ],\n    deleteHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteOrgVariable: [\"DELETE /orgs/{org}/actions/variables/{name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\n    ],\n    deleteRepoVariable: [\n      \"DELETE /repos/{owner}/{repo}/actions/variables/{name}\"\n    ],\n    deleteSelfHostedRunnerFromOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}\"\n    ],\n    deleteSelfHostedRunnerFromRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"\n    ],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\n      \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\n    ],\n    disableSelectedRepositoryGithubActionsOrganization: [\n      \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"\n    ],\n    disableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"\n    ],\n    downloadArtifact: [\n      \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"\n    ],\n    downloadJobLogsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"\n    ],\n    downloadWorkflowRunAttemptLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\"\n    ],\n    downloadWorkflowRunLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\n    ],\n    enableSelectedRepositoryGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"\n    ],\n    enableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"\n    ],\n    forceCancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel\"\n    ],\n    generateRunnerJitconfigForOrg: [\n      \"POST /orgs/{org}/actions/runners/generate-jitconfig\"\n    ],\n    generateRunnerJitconfigForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig\"\n    ],\n    getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n    getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n    getActionsCacheUsageByRepoForOrg: [\n      \"GET /orgs/{org}/actions/cache/usage-by-repository\"\n    ],\n    getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n    getAllowedActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/selected-actions\"\n    ],\n    getAllowedActionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"\n    ],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getCustomOidcSubClaimForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/oidc/customization/sub\"\n    ],\n    getEnvironmentPublicKey: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key\"\n    ],\n    getEnvironmentSecret: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    getEnvironmentVariable: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\"\n    ],\n    getGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/workflow\"\n    ],\n    getGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/workflow\"\n    ],\n    getGithubActionsPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions\"\n    ],\n    getGithubActionsPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\"\n    ],\n    getHostedRunnerForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}\"\n    ],\n    getHostedRunnersGithubOwnedImagesForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/images/github-owned\"\n    ],\n    getHostedRunnersLimitsForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/limits\"\n    ],\n    getHostedRunnersMachineSpecsForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/machine-sizes\"\n    ],\n    getHostedRunnersPartnerImagesForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/images/partner\"\n    ],\n    getHostedRunnersPlatformsForOrg: [\n      \"GET /orgs/{org}/actions/hosted-runners/platforms\"\n    ],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getOrgVariable: [\"GET /orgs/{org}/actions/variables/{name}\"],\n    getPendingDeploymentsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\n    ],\n    getRepoPermissions: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\",\n      {},\n      { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] }\n    ],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getRepoVariable: [\"GET /repos/{owner}/{repo}/actions/variables/{name}\"],\n    getReviewsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"\n    ],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"\n    ],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowAccessToRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/access\"\n    ],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\"\n    ],\n    getWorkflowRunUsage: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"\n    ],\n    getWorkflowUsage: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"\n    ],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/secrets\"\n    ],\n    listEnvironmentVariables: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/variables\"\n    ],\n    listGithubHostedRunnersInGroupForOrg: [\n      \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners\"\n    ],\n    listHostedRunnersForOrg: [\"GET /orgs/{org}/actions/hosted-runners\"],\n    listJobsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"\n    ],\n    listJobsForWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\"\n    ],\n    listLabelsForSelfHostedRunnerForOrg: [\n      \"GET /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    listLabelsForSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listOrgVariables: [\"GET /orgs/{org}/actions/variables\"],\n    listRepoOrganizationSecrets: [\n      \"GET /repos/{owner}/{repo}/actions/organization-secrets\"\n    ],\n    listRepoOrganizationVariables: [\n      \"GET /repos/{owner}/{repo}/actions/organization-variables\"\n    ],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoVariables: [\"GET /repos/{owner}/{repo}/actions/variables\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/downloads\"\n    ],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"\n    ],\n    listSelectedReposForOrgVariable: [\n      \"GET /orgs/{org}/actions/variables/{name}/repositories\"\n    ],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/repositories\"\n    ],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"\n    ],\n    listWorkflowRuns: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"\n    ],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunJobForWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\"\n    ],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    reRunWorkflowFailedJobs: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\"\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    removeCustomLabelFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\"\n    ],\n    removeCustomLabelFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    removeSelectedRepoFromOrgVariable: [\n      \"DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\n    ],\n    reviewCustomGatesForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule\"\n    ],\n    reviewPendingDeploymentsForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\n    ],\n    setAllowedActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/selected-actions\"\n    ],\n    setAllowedActionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"\n    ],\n    setCustomLabelsForSelfHostedRunnerForOrg: [\n      \"PUT /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    setCustomLabelsForSelfHostedRunnerForRepo: [\n      \"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    setCustomOidcSubClaimForRepo: [\n      \"PUT /repos/{owner}/{repo}/actions/oidc/customization/sub\"\n    ],\n    setGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/workflow\"\n    ],\n    setGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/workflow\"\n    ],\n    setGithubActionsPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions\"\n    ],\n    setGithubActionsPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"\n    ],\n    setSelectedReposForOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories\"\n    ],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories\"\n    ],\n    setWorkflowAccessToRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/access\"\n    ],\n    updateEnvironmentVariable: [\n      \"PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}\"\n    ],\n    updateHostedRunnerForOrg: [\n      \"PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}\"\n    ],\n    updateOrgVariable: [\"PATCH /orgs/{org}/actions/variables/{name}\"],\n    updateRepoVariable: [\n      \"PATCH /repos/{owner}/{repo}/actions/variables/{name}\"\n    ]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\n      \"DELETE /notifications/threads/{thread_id}/subscription\"\n    ],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\n      \"GET /notifications/threads/{thread_id}/subscription\"\n    ],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\n      \"GET /users/{username}/events/orgs/{org}\"\n    ],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\n      \"GET /users/{username}/received_events/public\"\n    ],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/notifications\"\n    ],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsDone: [\"DELETE /notifications/threads/{thread_id}\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\n      \"PUT /notifications/threads/{thread_id}/subscription\"\n    ],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] }\n    ],\n    addRepoToInstallationForAuthenticatedUser: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\"\n    ],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\n      \"POST /app/installations/{installation_id}/access_tokens\"\n    ],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\n      \"GET /marketplace_listing/accounts/{account_id}\"\n    ],\n    getSubscriptionPlanForAccountStubbed: [\n      \"GET /marketplace_listing/stubbed/accounts/{account_id}\"\n    ],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\n      \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"\n    ],\n    listInstallationReposForAuthenticatedUser: [\n      \"GET /user/installations/{installation_id}/repositories\"\n    ],\n    listInstallationRequestsForAuthenticatedApp: [\n      \"GET /app/installation-requests\"\n    ],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\n      \"GET /user/marketplace_purchases/stubbed\"\n    ],\n    listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n    redeliverWebhookDelivery: [\n      \"POST /app/hook/deliveries/{delivery_id}/attempts\"\n    ],\n    removeRepoFromInstallation: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] }\n    ],\n    removeRepoFromInstallationForAuthenticatedUser: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"\n    ],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\n      \"DELETE /app/installations/{installation_id}/suspended\"\n    ],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\n      \"GET /users/{username}/settings/billing/actions\"\n    ],\n    getGithubBillingUsageReportOrg: [\n      \"GET /organizations/{org}/settings/billing/usage\"\n    ],\n    getGithubBillingUsageReportUser: [\n      \"GET /users/{username}/settings/billing/usage\"\n    ],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\n      \"GET /users/{username}/settings/billing/packages\"\n    ],\n    getSharedStorageBillingOrg: [\n      \"GET /orgs/{org}/settings/billing/shared-storage\"\n    ],\n    getSharedStorageBillingUser: [\n      \"GET /users/{username}/settings/billing/shared-storage\"\n    ]\n  },\n  campaigns: {\n    createCampaign: [\"POST /orgs/{org}/campaigns\"],\n    deleteCampaign: [\"DELETE /orgs/{org}/campaigns/{campaign_number}\"],\n    getCampaignSummary: [\"GET /orgs/{org}/campaigns/{campaign_number}\"],\n    listOrgCampaigns: [\"GET /orgs/{org}/campaigns\"],\n    updateCampaign: [\"PATCH /orgs/{org}/campaigns/{campaign_number}\"]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\n      \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"\n    ],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\n      \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"\n    ],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestRun: [\n      \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\"\n    ],\n    rerequestSuite: [\n      \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"\n    ],\n    setSuitesPreferences: [\n      \"PATCH /repos/{owner}/{repo}/check-suites/preferences\"\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n  },\n  codeScanning: {\n    commitAutofix: [\n      \"POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits\"\n    ],\n    createAutofix: [\n      \"POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix\"\n    ],\n    createVariantAnalysis: [\n      \"POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses\"\n    ],\n    deleteAnalysis: [\n      \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"\n    ],\n    deleteCodeqlDatabase: [\n      \"DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\"\n    ],\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n      {},\n      { renamedParameters: { alert_id: \"alert_number\" } }\n    ],\n    getAnalysis: [\n      \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"\n    ],\n    getAutofix: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix\"\n    ],\n    getCodeqlDatabase: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\"\n    ],\n    getDefaultSetup: [\"GET /repos/{owner}/{repo}/code-scanning/default-setup\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    getVariantAnalysis: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}\"\n    ],\n    getVariantAnalysisRepoTask: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}\"\n    ],\n    listAlertInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n      {},\n      { renamed: [\"codeScanning\", \"listAlertInstances\"] }\n    ],\n    listCodeqlDatabases: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\"\n    ],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"\n    ],\n    updateDefaultSetup: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/default-setup\"\n    ],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codeSecurity: {\n    attachConfiguration: [\n      \"POST /orgs/{org}/code-security/configurations/{configuration_id}/attach\"\n    ],\n    attachEnterpriseConfiguration: [\n      \"POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach\"\n    ],\n    createConfiguration: [\"POST /orgs/{org}/code-security/configurations\"],\n    createConfigurationForEnterprise: [\n      \"POST /enterprises/{enterprise}/code-security/configurations\"\n    ],\n    deleteConfiguration: [\n      \"DELETE /orgs/{org}/code-security/configurations/{configuration_id}\"\n    ],\n    deleteConfigurationForEnterprise: [\n      \"DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}\"\n    ],\n    detachConfiguration: [\n      \"DELETE /orgs/{org}/code-security/configurations/detach\"\n    ],\n    getConfiguration: [\n      \"GET /orgs/{org}/code-security/configurations/{configuration_id}\"\n    ],\n    getConfigurationForRepository: [\n      \"GET /repos/{owner}/{repo}/code-security-configuration\"\n    ],\n    getConfigurationsForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations\"\n    ],\n    getConfigurationsForOrg: [\"GET /orgs/{org}/code-security/configurations\"],\n    getDefaultConfigurations: [\n      \"GET /orgs/{org}/code-security/configurations/defaults\"\n    ],\n    getDefaultConfigurationsForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/defaults\"\n    ],\n    getRepositoriesForConfiguration: [\n      \"GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories\"\n    ],\n    getRepositoriesForEnterpriseConfiguration: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories\"\n    ],\n    getSingleConfigurationForEnterprise: [\n      \"GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}\"\n    ],\n    setConfigurationAsDefault: [\n      \"PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults\"\n    ],\n    setConfigurationAsDefaultForEnterprise: [\n      \"PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults\"\n    ],\n    updateConfiguration: [\n      \"PATCH /orgs/{org}/code-security/configurations/{configuration_id}\"\n    ],\n    updateEnterpriseConfiguration: [\n      \"PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}\"\n    ]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n    getConductCode: [\"GET /codes_of_conduct/{key}\"]\n  },\n  codespaces: {\n    addRepositoryForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    checkPermissionsForDevcontainer: [\n      \"GET /repos/{owner}/{repo}/codespaces/permissions_check\"\n    ],\n    codespaceMachinesForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/machines\"\n    ],\n    createForAuthenticatedUser: [\"POST /user/codespaces\"],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}\"\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    createOrUpdateSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}\"\n    ],\n    createWithPrForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\"\n    ],\n    createWithRepoForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/codespaces\"\n    ],\n    deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n    deleteFromOrganization: [\n      \"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    deleteSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}\"\n    ],\n    exportForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/exports\"\n    ],\n    getCodespacesForUserInOrg: [\n      \"GET /orgs/{org}/members/{username}/codespaces\"\n    ],\n    getExportDetailsForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/exports/{export_id}\"\n    ],\n    getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/codespaces/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    getPublicKeyForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/public-key\"\n    ],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\"\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    getSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}\"\n    ],\n    listDevcontainersInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/devcontainers\"\n    ],\n    listForAuthenticatedUser: [\"GET /user/codespaces\"],\n    listInOrganization: [\n      \"GET /orgs/{org}/codespaces\",\n      {},\n      { renamedParameters: { org_id: \"org\" } }\n    ],\n    listInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces\"\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/codespaces/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n    listRepositoriesForSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    preFlightWithRepoForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/new\"\n    ],\n    publishForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/publish\"\n    ],\n    removeRepositoryForSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    repoMachinesForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/machines\"\n    ],\n    setRepositoriesForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n    stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n    stopInOrganization: [\n      \"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\"\n    ],\n    updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"]\n  },\n  copilot: {\n    addCopilotSeatsForTeams: [\n      \"POST /orgs/{org}/copilot/billing/selected_teams\"\n    ],\n    addCopilotSeatsForUsers: [\n      \"POST /orgs/{org}/copilot/billing/selected_users\"\n    ],\n    cancelCopilotSeatAssignmentForTeams: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_teams\"\n    ],\n    cancelCopilotSeatAssignmentForUsers: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_users\"\n    ],\n    copilotMetricsForOrganization: [\"GET /orgs/{org}/copilot/metrics\"],\n    copilotMetricsForTeam: [\"GET /orgs/{org}/team/{team_slug}/copilot/metrics\"],\n    getCopilotOrganizationDetails: [\"GET /orgs/{org}/copilot/billing\"],\n    getCopilotSeatDetailsForUser: [\n      \"GET /orgs/{org}/members/{username}/copilot\"\n    ],\n    listCopilotSeats: [\"GET /orgs/{org}/copilot/billing/seats\"]\n  },\n  credentials: { revoke: [\"POST /credentials/revoke\"] },\n  dependabot: {\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}\"\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\"\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/dependabot/alerts\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/dependabot/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\n    listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"\n    ]\n  },\n  dependencyGraph: {\n    createRepositorySnapshot: [\n      \"POST /repos/{owner}/{repo}/dependency-graph/snapshots\"\n    ],\n    diffRange: [\n      \"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\"\n    ],\n    exportSbom: [\"GET /repos/{owner}/{repo}/dependency-graph/sbom\"]\n  },\n  emojis: { get: [\"GET /emojis\"] },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  hostedCompute: {\n    createNetworkConfigurationForOrg: [\n      \"POST /orgs/{org}/settings/network-configurations\"\n    ],\n    deleteNetworkConfigurationFromOrg: [\n      \"DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}\"\n    ],\n    getNetworkConfigurationForOrg: [\n      \"GET /orgs/{org}/settings/network-configurations/{network_configuration_id}\"\n    ],\n    getNetworkSettingsForOrg: [\n      \"GET /orgs/{org}/settings/network-settings/{network_settings_id}\"\n    ],\n    listNetworkConfigurationsForOrg: [\n      \"GET /orgs/{org}/settings/network-configurations\"\n    ],\n    updateNetworkConfigurationForOrg: [\n      \"PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}\"\n    ]\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\n      \"GET /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] }\n    ],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\n      \"DELETE /repos/{owner}/{repo}/interaction-limits\"\n    ],\n    removeRestrictionsForYourPublicRepos: [\n      \"DELETE /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] }\n    ],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\n      \"PUT /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] }\n    ]\n  },\n  issues: {\n    addAssignees: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\n    ],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    addSubIssue: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\"\n    ],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    checkUserCanBeAssignedToIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}\"\n    ],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"\n    ],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"\n    ],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\n      \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\"\n    ],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\n      \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"\n    ],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"\n    ],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    listSubIssues: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues\"\n    ],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"\n    ],\n    removeAssignees: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\n    ],\n    removeLabel: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"\n    ],\n    removeSubIssue: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue\"\n    ],\n    reprioritizeSubIssue: [\n      \"PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority\"\n    ],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\n      \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"\n    ]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\n      \"POST /markdown/raw\",\n      { headers: { \"content-type\": \"text/plain; charset=utf-8\" } }\n    ]\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getAllVersions: [\"GET /versions\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"]\n  },\n  migrations: {\n    deleteArchiveForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/archive\"\n    ],\n    deleteArchiveForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/archive\"\n    ],\n    downloadArchiveForOrg: [\n      \"GET /orgs/{org}/migrations/{migration_id}/archive\"\n    ],\n    getArchiveForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/archive\"\n    ],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n    listForAuthenticatedUser: [\"GET /user/migrations\"],\n    listForOrg: [\"GET /orgs/{org}/migrations\"],\n    listReposForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/repositories\"\n    ],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n    listReposForUser: [\n      \"GET /user/migrations/{migration_id}/repositories\",\n      {},\n      { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] }\n    ],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    unlockRepoForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\"\n    ],\n    unlockRepoForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\"\n    ]\n  },\n  oidc: {\n    getOidcCustomSubTemplateForOrg: [\n      \"GET /orgs/{org}/actions/oidc/customization/sub\"\n    ],\n    updateOidcCustomSubTemplateForOrg: [\n      \"PUT /orgs/{org}/actions/oidc/customization/sub\"\n    ]\n  },\n  orgs: {\n    addSecurityManagerTeam: [\n      \"PUT /orgs/{org}/security-managers/teams/{team_slug}\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team\"\n      }\n    ],\n    assignTeamToOrgRole: [\n      \"PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}\"\n    ],\n    assignUserToOrgRole: [\n      \"PUT /orgs/{org}/organization-roles/users/{username}/{role_id}\"\n    ],\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\n      \"PUT /orgs/{org}/outside_collaborators/{username}\"\n    ],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createIssueType: [\"POST /orgs/{org}/issue-types\"],\n    createOrUpdateCustomProperties: [\"PATCH /orgs/{org}/properties/schema\"],\n    createOrUpdateCustomPropertiesValuesForRepos: [\n      \"PATCH /orgs/{org}/properties/values\"\n    ],\n    createOrUpdateCustomProperty: [\n      \"PUT /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    delete: [\"DELETE /orgs/{org}\"],\n    deleteIssueType: [\"DELETE /orgs/{org}/issue-types/{issue_type_id}\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    enableOrDisableSecurityProductOnAllOrgRepos: [\n      \"POST /orgs/{org}/{security_product}/{enablement}\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization\"\n      }\n    ],\n    get: [\"GET /orgs/{org}\"],\n    getAllCustomProperties: [\"GET /orgs/{org}/properties/schema\"],\n    getCustomProperty: [\n      \"GET /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getOrgRole: [\"GET /orgs/{org}/organization-roles/{role_id}\"],\n    getOrgRulesetHistory: [\"GET /orgs/{org}/rulesets/{ruleset_id}/history\"],\n    getOrgRulesetVersion: [\n      \"GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}\"\n    ],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\n      \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\"\n    ],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listAttestations: [\"GET /orgs/{org}/attestations/{subject_digest}\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listCustomPropertiesValuesForRepos: [\"GET /orgs/{org}/properties/values\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listIssueTypes: [\"GET /orgs/{org}/issue-types\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOrgRoleTeams: [\"GET /orgs/{org}/organization-roles/{role_id}/teams\"],\n    listOrgRoleUsers: [\"GET /orgs/{org}/organization-roles/{role_id}/users\"],\n    listOrgRoles: [\"GET /orgs/{org}/organization-roles\"],\n    listOrganizationFineGrainedPermissions: [\n      \"GET /orgs/{org}/organization-fine-grained-permissions\"\n    ],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPatGrantRepositories: [\n      \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\"\n    ],\n    listPatGrantRequestRepositories: [\n      \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\"\n    ],\n    listPatGrantRequests: [\"GET /orgs/{org}/personal-access-token-requests\"],\n    listPatGrants: [\"GET /orgs/{org}/personal-access-tokens\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listSecurityManagerTeams: [\n      \"GET /orgs/{org}/security-managers\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams\"\n      }\n    ],\n    listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\n    ],\n    removeCustomProperty: [\n      \"DELETE /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\n      \"DELETE /orgs/{org}/outside_collaborators/{username}\"\n    ],\n    removePublicMembershipForAuthenticatedUser: [\n      \"DELETE /orgs/{org}/public_members/{username}\"\n    ],\n    removeSecurityManagerTeam: [\n      \"DELETE /orgs/{org}/security-managers/teams/{team_slug}\",\n      {},\n      {\n        deprecated: \"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team\"\n      }\n    ],\n    reviewPatGrantRequest: [\n      \"POST /orgs/{org}/personal-access-token-requests/{pat_request_id}\"\n    ],\n    reviewPatGrantRequestsInBulk: [\n      \"POST /orgs/{org}/personal-access-token-requests\"\n    ],\n    revokeAllOrgRolesTeam: [\n      \"DELETE /orgs/{org}/organization-roles/teams/{team_slug}\"\n    ],\n    revokeAllOrgRolesUser: [\n      \"DELETE /orgs/{org}/organization-roles/users/{username}\"\n    ],\n    revokeOrgRoleTeam: [\n      \"DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}\"\n    ],\n    revokeOrgRoleUser: [\n      \"DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}\"\n    ],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\n      \"PUT /orgs/{org}/public_members/{username}\"\n    ],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateIssueType: [\"PUT /orgs/{org}/issue-types/{issue_type_id}\"],\n    updateMembershipForAuthenticatedUser: [\n      \"PATCH /user/memberships/orgs/{org}\"\n    ],\n    updatePatAccess: [\"POST /orgs/{org}/personal-access-tokens/{pat_id}\"],\n    updatePatAccesses: [\"POST /orgs/{org}/personal-access-tokens\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageVersionForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    deletePackageVersionForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    deletePackageVersionForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n      {},\n      { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] }\n    ],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\",\n      {},\n      {\n        renamed: [\n          \"packages\",\n          \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"\n        ]\n      }\n    ],\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\"\n    ],\n    getAllPackageVersionsForPackageOwnedByOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"\n    ],\n    getAllPackageVersionsForPackageOwnedByUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions\"\n    ],\n    getPackageForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}\"\n    ],\n    getPackageForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}\"\n    ],\n    getPackageForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}\"\n    ],\n    getPackageVersionForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getPackageVersionForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getPackageVersionForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    listDockerMigrationConflictingPackagesForAuthenticatedUser: [\n      \"GET /user/docker/conflicts\"\n    ],\n    listDockerMigrationConflictingPackagesForOrganization: [\n      \"GET /orgs/{org}/docker/conflicts\"\n    ],\n    listDockerMigrationConflictingPackagesForUser: [\n      \"GET /users/{username}/docker/conflicts\"\n    ],\n    listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n    listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n    listPackagesForUser: [\"GET /users/{username}/packages\"],\n    restorePackageForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageVersionForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ],\n    restorePackageVersionForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ],\n    restorePackageVersionForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ]\n  },\n  privateRegistries: {\n    createOrgPrivateRegistry: [\"POST /orgs/{org}/private-registries\"],\n    deleteOrgPrivateRegistry: [\n      \"DELETE /orgs/{org}/private-registries/{secret_name}\"\n    ],\n    getOrgPrivateRegistry: [\"GET /orgs/{org}/private-registries/{secret_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/private-registries/public-key\"],\n    listOrgPrivateRegistries: [\"GET /orgs/{org}/private-registries\"],\n    updateOrgPrivateRegistry: [\n      \"PATCH /orgs/{org}/private-registries/{secret_name}\"\n    ]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"\n    ],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\n    ],\n    deletePendingReview: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    deleteReviewComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\n    ],\n    dismissReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    listReviewComments: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\n    ],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    requestReviewers: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    submitReview: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\"\n    ],\n    updateReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    updateReviewComment: [\n      \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\n    ]\n  },\n  rateLimit: { get: [\"GET /rate_limit\"] },\n  reactions: {\n    createForCommitComment: [\n      \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\n    ],\n    createForIssue: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\"\n    ],\n    createForIssueComment: [\n      \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\n    ],\n    createForPullRequestReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\n    ],\n    createForRelease: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\"\n    ],\n    createForTeamDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\n    ],\n    createForTeamDiscussionInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\n    ],\n    deleteForCommitComment: [\n      \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForIssue: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\"\n    ],\n    deleteForIssueComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForPullRequestComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForRelease: [\n      \"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\"\n    ],\n    deleteForTeamDiscussion: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\"\n    ],\n    deleteForTeamDiscussionComment: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\"\n    ],\n    listForCommitComment: [\n      \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\n    ],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n    listForIssueComment: [\n      \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\n    ],\n    listForPullRequestReviewComment: [\n      \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\n    ],\n    listForRelease: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\"\n    ],\n    listForTeamDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\n    ],\n    listForTeamDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\n    ]\n  },\n  repos: {\n    acceptInvitation: [\n      \"PATCH /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] }\n    ],\n    acceptInvitationForAuthenticatedUser: [\n      \"PATCH /user/repository_invitations/{invitation_id}\"\n    ],\n    addAppAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    addTeamAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    addUserAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    cancelPagesDeployment: [\n      \"POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel\"\n    ],\n    checkAutomatedSecurityFixes: [\n      \"GET /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkPrivateVulnerabilityReporting: [\n      \"GET /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    checkVulnerabilityAlerts: [\n      \"GET /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    compareCommitsWithBasehead: [\n      \"GET /repos/{owner}/{repo}/compare/{basehead}\"\n    ],\n    createAttestation: [\"POST /repos/{owner}/{repo}/attestations\"],\n    createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n    createCommitComment: [\n      \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\n    ],\n    createCommitSignatureProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentBranchPolicy: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\n    ],\n    createDeploymentProtectionRule: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\n    ],\n    createDeploymentStatus: [\n      \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\n    ],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateCustomPropertiesValues: [\n      \"PATCH /repos/{owner}/{repo}/properties/values\"\n    ],\n    createOrUpdateEnvironment: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createOrgRuleset: [\"POST /orgs/{org}/rulesets\"],\n    createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployments\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createRepoRuleset: [\"POST /repos/{owner}/{repo}/rulesets\"],\n    createUsingTemplate: [\n      \"POST /repos/{template_owner}/{template_repo}/generate\"\n    ],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\n      \"DELETE /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] }\n    ],\n    declineInvitationForAuthenticatedUser: [\n      \"DELETE /user/repository_invitations/{invitation_id}\"\n    ],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\n    ],\n    deleteAdminBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    deleteAnEnvironment: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    deleteBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\n      \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"\n    ],\n    deleteDeploymentBranchPolicy: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\n      \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"\n    ],\n    deleteOrgRuleset: [\"DELETE /orgs/{org}/rulesets/{ruleset_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n    deletePullRequestReviewProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\n      \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"\n    ],\n    deleteRepoRuleset: [\"DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\n      \"DELETE /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    disableDeploymentProtectionRule: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\n    ],\n    disablePrivateVulnerabilityReporting: [\n      \"DELETE /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    disableVulnerabilityAlerts: [\n      \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    downloadArchive: [\n      \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n      {},\n      { renamed: [\"repos\", \"downloadZipballArchive\"] }\n    ],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\n      \"PUT /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    enablePrivateVulnerabilityReporting: [\n      \"PUT /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    enableVulnerabilityAlerts: [\n      \"PUT /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    generateReleaseNotes: [\n      \"POST /repos/{owner}/{repo}/releases/generate-notes\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\n    ],\n    getAdminBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    getAllDeploymentProtectionRules: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\n    ],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"\n    ],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n    getAppsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"\n    ],\n    getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    getBranchRules: [\"GET /repos/{owner}/{repo}/rules/branches/{branch}\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\n      \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"\n    ],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getCustomDeploymentProtectionRule: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\n    ],\n    getCustomPropertiesValues: [\"GET /repos/{owner}/{repo}/properties/values\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentBranchPolicy: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    getDeploymentStatus: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"\n    ],\n    getEnvironment: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getOrgRuleSuite: [\"GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}\"],\n    getOrgRuleSuites: [\"GET /orgs/{org}/rulesets/rule-suites\"],\n    getOrgRuleset: [\"GET /orgs/{org}/rulesets/{ruleset_id}\"],\n    getOrgRulesets: [\"GET /orgs/{org}/rulesets\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getPagesDeployment: [\n      \"GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}\"\n    ],\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getRepoRuleSuite: [\n      \"GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}\"\n    ],\n    getRepoRuleSuites: [\"GET /repos/{owner}/{repo}/rulesets/rule-suites\"],\n    getRepoRuleset: [\"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    getRepoRulesetHistory: [\n      \"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history\"\n    ],\n    getRepoRulesetVersion: [\n      \"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}\"\n    ],\n    getRepoRulesets: [\"GET /repos/{owner}/{repo}/rulesets\"],\n    getStatusChecksProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    getTeamsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"\n    ],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"\n    ],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"\n    ],\n    getWebhookDelivery: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\"\n    ],\n    listActivities: [\"GET /repos/{owner}/{repo}/activity\"],\n    listAttestations: [\n      \"GET /repos/{owner}/{repo}/attestations/{subject_digest}\"\n    ],\n    listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\"\n    ],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\n    ],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\n      \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listCustomDeploymentRuleIntegrations: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\"\n    ],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentBranchPolicies: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\n    ],\n    listDeploymentStatuses: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\n    ],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\"\n    ],\n    listReleaseAssets: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"\n    ],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhookDeliveries: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\"\n    ],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\n    ],\n    removeAppAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    removeCollaborator: [\n      \"DELETE /repos/{owner}/{repo}/collaborators/{username}\"\n    ],\n    removeStatusCheckContexts: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    removeStatusCheckProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    removeTeamAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    removeUserAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    setAppAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    setStatusCheckContexts: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    setTeamAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    setUserAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateDeploymentBranchPolicy: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\n      \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"\n    ],\n    updateOrgRuleset: [\"PUT /orgs/{org}/rulesets/{ruleset_id}\"],\n    updatePullRequestReviewProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\n      \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"\n    ],\n    updateRepoRuleset: [\"PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    updateStatusCheckPotection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n      {},\n      { renamed: [\"repos\", \"updateStatusCheckProtection\"] }\n    ],\n    updateStatusCheckProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\n      \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"\n    ],\n    uploadReleaseAsset: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n      { baseUrl: \"https://uploads.github.com\" }\n    ]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\"],\n    issuesAndPullRequests: [\n      \"GET /search/issues\",\n      {},\n      {\n        deprecated: \"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests\"\n      }\n    ],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\"],\n    users: [\"GET /search/users\"]\n  },\n  secretScanning: {\n    createPushProtectionBypass: [\n      \"POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses\"\n    ],\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\n    ],\n    getScanHistory: [\"GET /repos/{owner}/{repo}/secret-scanning/scan-history\"],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/secret-scanning/alerts\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    listLocationsForAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\"\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\n    ]\n  },\n  securityAdvisories: {\n    createFork: [\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks\"\n    ],\n    createPrivateVulnerabilityReport: [\n      \"POST /repos/{owner}/{repo}/security-advisories/reports\"\n    ],\n    createRepositoryAdvisory: [\n      \"POST /repos/{owner}/{repo}/security-advisories\"\n    ],\n    createRepositoryAdvisoryCveRequest: [\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve\"\n    ],\n    getGlobalAdvisory: [\"GET /advisories/{ghsa_id}\"],\n    getRepositoryAdvisory: [\n      \"GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\n    ],\n    listGlobalAdvisories: [\"GET /advisories\"],\n    listOrgRepositoryAdvisories: [\"GET /orgs/{org}/security-advisories\"],\n    listRepositoryAdvisories: [\"GET /repos/{owner}/{repo}/security-advisories\"],\n    updateRepositoryAdvisory: [\n      \"PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\n    ]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    addOrUpdateRepoPermissionsInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    checkPermissionsForRepoInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\n    ],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    deleteDiscussionInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    getDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    getMembershipForUserInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\n    ],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/invitations\"\n    ],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    removeRepoInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    updateDiscussionCommentInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    updateDiscussionInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\n      \"POST /user/emails\",\n      {},\n      { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] }\n    ],\n    addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n    addSocialAccountForAuthenticatedUser: [\"POST /user/social_accounts\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\n      \"POST /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] }\n    ],\n    createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\n      \"POST /user/keys\",\n      {},\n      { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] }\n    ],\n    createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n    createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\n    deleteEmailForAuthenticated: [\n      \"DELETE /user/emails\",\n      {},\n      { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] }\n    ],\n    deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\n      \"DELETE /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] }\n    ],\n    deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\n      \"DELETE /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] }\n    ],\n    deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n    deleteSocialAccountForAuthenticatedUser: [\"DELETE /user/social_accounts\"],\n    deleteSshSigningKeyForAuthenticatedUser: [\n      \"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\"\n    ],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getById: [\"GET /user/{account_id}\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\n      \"GET /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] }\n    ],\n    getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\n      \"GET /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] }\n    ],\n    getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n    getSshSigningKeyForAuthenticatedUser: [\n      \"GET /user/ssh_signing_keys/{ssh_signing_key_id}\"\n    ],\n    list: [\"GET /users\"],\n    listAttestations: [\"GET /users/{username}/attestations/{subject_digest}\"],\n    listBlockedByAuthenticated: [\n      \"GET /user/blocks\",\n      {},\n      { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] }\n    ],\n    listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\n      \"GET /user/emails\",\n      {},\n      { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] }\n    ],\n    listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\n      \"GET /user/following\",\n      {},\n      { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] }\n    ],\n    listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\n      \"GET /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] }\n    ],\n    listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\n      \"GET /user/public_emails\",\n      {},\n      { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] }\n    ],\n    listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\n      \"GET /user/keys\",\n      {},\n      { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] }\n    ],\n    listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n    listSocialAccountsForAuthenticatedUser: [\"GET /user/social_accounts\"],\n    listSocialAccountsForUser: [\"GET /users/{username}/social_accounts\"],\n    listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\n    listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\n      \"PATCH /user/email/visibility\",\n      {},\n      { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] }\n    ],\n    setPrimaryEmailVisibilityForAuthenticatedUser: [\n      \"PATCH /user/email/visibility\"\n    ],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\nvar endpoints_default = Endpoints;\nexport {\n  endpoints_default as default\n};\n//# sourceMappingURL=endpoints.js.map\n","import ENDPOINTS from \"./generated/endpoints.js\";\nconst endpointMethodsMap = /* @__PURE__ */ new Map();\nfor (const [scope, endpoints] of Object.entries(ENDPOINTS)) {\n  for (const [methodName, endpoint] of Object.entries(endpoints)) {\n    const [route, defaults, decorations] = endpoint;\n    const [method, url] = route.split(/ /);\n    const endpointDefaults = Object.assign(\n      {\n        method,\n        url\n      },\n      defaults\n    );\n    if (!endpointMethodsMap.has(scope)) {\n      endpointMethodsMap.set(scope, /* @__PURE__ */ new Map());\n    }\n    endpointMethodsMap.get(scope).set(methodName, {\n      scope,\n      methodName,\n      endpointDefaults,\n      decorations\n    });\n  }\n}\nconst handler = {\n  has({ scope }, methodName) {\n    return endpointMethodsMap.get(scope).has(methodName);\n  },\n  getOwnPropertyDescriptor(target, methodName) {\n    return {\n      value: this.get(target, methodName),\n      // ensures method is in the cache\n      configurable: true,\n      writable: true,\n      enumerable: true\n    };\n  },\n  defineProperty(target, methodName, descriptor) {\n    Object.defineProperty(target.cache, methodName, descriptor);\n    return true;\n  },\n  deleteProperty(target, methodName) {\n    delete target.cache[methodName];\n    return true;\n  },\n  ownKeys({ scope }) {\n    return [...endpointMethodsMap.get(scope).keys()];\n  },\n  set(target, methodName, value) {\n    return target.cache[methodName] = value;\n  },\n  get({ octokit, scope, cache }, methodName) {\n    if (cache[methodName]) {\n      return cache[methodName];\n    }\n    const method = endpointMethodsMap.get(scope).get(methodName);\n    if (!method) {\n      return void 0;\n    }\n    const { endpointDefaults, decorations } = method;\n    if (decorations) {\n      cache[methodName] = decorate(\n        octokit,\n        scope,\n        methodName,\n        endpointDefaults,\n        decorations\n      );\n    } else {\n      cache[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n    return cache[methodName];\n  }\n};\nfunction endpointsToMethods(octokit) {\n  const newMethods = {};\n  for (const scope of endpointMethodsMap.keys()) {\n    newMethods[scope] = new Proxy({ octokit, scope, cache: {} }, handler);\n  }\n  return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  function withDecorations(...args) {\n    let options = requestWithDefaults.endpoint.merge(...args);\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: void 0\n      });\n      return requestWithDefaults(options);\n    }\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(\n        `octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`\n      );\n    }\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n    if (decorations.renamedParameters) {\n      const options2 = requestWithDefaults.endpoint.merge(...args);\n      for (const [name, alias] of Object.entries(\n        decorations.renamedParameters\n      )) {\n        if (name in options2) {\n          octokit.log.warn(\n            `\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`\n          );\n          if (!(alias in options2)) {\n            options2[alias] = options2[name];\n          }\n          delete options2[name];\n        }\n      }\n      return requestWithDefaults(options2);\n    }\n    return requestWithDefaults(...args);\n  }\n  return Object.assign(withDecorations, requestWithDefaults);\n}\nexport {\n  endpointsToMethods\n};\n//# sourceMappingURL=endpoints-to-methods.js.map\n","import { VERSION } from \"./version.js\";\nimport { endpointsToMethods } from \"./endpoints-to-methods.js\";\nfunction restEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    rest: api\n  };\n}\nrestEndpointMethods.VERSION = VERSION;\nfunction legacyRestEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    ...api,\n    rest: api\n  };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\nexport {\n  legacyRestEndpointMethods,\n  restEndpointMethods\n};\n//# sourceMappingURL=index.js.map\n","const VERSION = \"22.0.0\";\nexport {\n  VERSION\n};\n","import { Octokit as Core } from \"@octokit/core\";\nimport { requestLog } from \"@octokit/plugin-request-log\";\nimport {\n  paginateRest\n} from \"@octokit/plugin-paginate-rest\";\nimport { legacyRestEndpointMethods } from \"@octokit/plugin-rest-endpoint-methods\";\nimport { VERSION } from \"./version.js\";\nconst Octokit = Core.plugin(requestLog, legacyRestEndpointMethods, paginateRest).defaults(\n  {\n    userAgent: `octokit-rest.js/${VERSION}`\n  }\n);\nexport {\n  Octokit\n};\n"],"names":["getUserAgent","register","state","name","method","options","callback","registered","addHook","kind","hook","orig","result","result_","error","removeHook","index","bind","bindable","bindApi","removeHookRef","args","Collection","Hook","VERSION","userAgent","DEFAULTS","lowercaseKeys","object","newObj","key","isPlainObject","value","proto","Ctor","mergeDeep","defaults","removeUndefinedProperties","obj","merge","route","url","mergedOptions","preview","addQueryParameters","parameters","separator","names","urlVariableRegex","removeNonChars","variableName","extractUrlVariableNames","matches","a","b","omit","keysToOmit","encodeReserved","str","part","encodeUnreserved","c","encodeValue","operator","isDefined","isKeyOperator","getValues","context","modifier","value2","k","tmp","parseUrl","template","expand","operators","_","expression","literal","values","variable","parse","headers","body","urlVariableNames","omittedParameters","option","remainingParameters","format","previewsFromAcceptHeader","endpointWithDefaults","withDefaults","oldDefaults","newDefaults","DEFAULTS2","endpoint2","endpoint","NullObject","paramRE","quotedPairRE","mediaTypeRE","defaultContentType","header","type","match","safeParse","fastContentTypeParse","RequestError","message","statusCode","__publicField","requestCopy","defaults_default","fetchWrapper","requestOptions","fetch","log","parseSuccessResponseBody","requestHeaders","fetchResponse","requestError","status","responseHeaders","octokitResponse","deprecationLink","getResponseData","toErrorMessage","response","contentType","mimetype","isJSONResponse","text","data","suffix","v","oldEndpoint","endpointOptions","request2","route2","parameters2","request","_buildMessageForResponseErrors","e","GraphqlResponseError","NON_VARIABLE_OPTIONS","FORBIDDEN_VARIABLE_OPTIONS","GHES_V3_SUFFIX_REGEX","graphql","query","parsedOptions","baseUrl","newRequest","withCustomRequest","customRequest","b64url","sep","jwtRE","isJWT","auth","token","isApp","isInstallation","isUserToServer","withAuthorizationPrefix","createTokenAuth","noop","consoleWarn","consoleError","createLogger","logger","userAgentTrail","_a","Octokit$1","requestDefaults","authStrategy","otherOptions","classConstructor","i","newPlugins","currentPlugins","plugin","requestLog","octokit","start","path","requestId","normalizePaginatedListResponse","incompleteResults","repositorySelection","totalCount","totalCommits","namespaceKey","iterator","requestMethod","normalizedResponse","parsedUrl","params","page","per_page","paginate","mapFn","gather","results","iterator2","earlyExit","done","paginateRest","Endpoints","endpoints_default","endpointMethodsMap","scope","endpoints","ENDPOINTS","methodName","decorations","endpointDefaults","handler","target","descriptor","cache","decorate","endpointsToMethods","newMethods","requestWithDefaults","withDecorations","newScope","newMethodName","options2","alias","legacyRestEndpointMethods","api","Octokit","Core"],"mappings":"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pE,EACE,aAAc,CACZ,cAAe,CACb,gFACN,EACI,cAAe,CACb,wEACN,EACI,sBAAuB,CACrB,kEACN,EACI,eAAgB,CACd,oFACN,EACI,qBAAsB,CACpB,wEACN,EACI,SAAU,CACR,gEACA,CAAA,EACA,CAAE,kBAAmB,CAAE,SAAU,cAAc,CAAE,CACvD,EACI,YAAa,CACX,gEACN,EACI,WAAY,CACV,uEACN,EACI,kBAAmB,CACjB,qEACN,EACI,gBAAiB,CAAC,uDAAuD,EACzE,SAAU,CAAC,2DAA2D,EACtE,mBAAoB,CAClB,8FACN,EACI,2BAA4B,CAC1B,6HACN,EACI,mBAAoB,CAClB,yEACN,EACI,iBAAkB,CAAC,sCAAsC,EACzD,kBAAmB,CAAC,gDAAgD,EACpE,oBAAqB,CACnB,0EACA,CAAA,EACA,CAAE,QAAS,CAAC,eAAgB,oBAAoB,CAAC,CACvD,EACI,oBAAqB,CACnB,0DACN,EACI,mBAAoB,CAAC,kDAAkD,EACvE,YAAa,CACX,iEACN,EACI,mBAAoB,CAClB,yDACN,EACI,YAAa,CAAC,iDAAiD,CACnE,EACE,aAAc,CACZ,oBAAqB,CACnB,yEACN,EACI,8BAA+B,CAC7B,uFACN,EACI,oBAAqB,CAAC,+CAA+C,EACrE,iCAAkC,CAChC,6DACN,EACI,oBAAqB,CACnB,oEACN,EACI,iCAAkC,CAChC,kFACN,EACI,oBAAqB,CACnB,wDACN,EACI,iBAAkB,CAChB,iEACN,EACI,8BAA+B,CAC7B,uDACN,EACI,+BAAgC,CAC9B,4DACN,EACI,wBAAyB,CAAC,8CAA8C,EACxE,yBAA0B,CACxB,uDACN,EACI,sCAAuC,CACrC,qEACN,EACI,gCAAiC,CAC/B,8EACN,EACI,0CAA2C,CACzC,4FACN,EACI,oCAAqC,CACnC,+EACN,EACI,0BAA2B,CACzB,0EACN,EACI,uCAAwC,CACtC,wFACN,EACI,oBAAqB,CACnB,mEACN,EACI,8BAA+B,CAC7B,iFACN,CACA,EACE,eAAgB,CACd,qBAAsB,CAAC,uBAAuB,EAC9C,eAAgB,CAAC,6BAA6B,CAClD,EACE,WAAY,CAC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3C,4BAA6B,CAC3B,8EACN,EACI,aAAc,CAAC,wDAAwD,EACvE,oBAAqB,CACnB,yDACN,EACI,oBAAqB,CACnB,sEACN,EACI,oBAAqB,CACnB,0DACN,EACI,cAAe,CACb,8EACN,EACI,IAAK,CAAC,+CAA+C,EACrD,UAAW,CACT,mEACN,EACI,iBAAkB,CAAC,uDAAuD,EAC1E,KAAM,CAAC,iCAAiC,EACxC,sBAAuB,CACrB,4EACN,EACI,YAAa,CAAC,uDAAuD,EACrE,UAAW,CAAC,qDAAqD,EACjE,uBAAwB,CACtB,mEACN,EACI,mBAAoB,CAClB,wDACN,EACI,0BAA2B,CAAC,0CAA0C,EACtE,YAAa,CAAC,uDAAuD,EACrE,MAAO,CAAC,qDAAqD,EAC7D,yBAA0B,CACxB,sEACN,EACI,iBAAkB,CAChB,oEACN,EACI,aAAc,CACZ,2EACN,EACI,OAAQ,CAAC,iDAAiD,EAC1D,aAAc,CACZ,6DACN,EACI,aAAc,CACZ,mEACN,EACI,oBAAqB,CACnB,yDACN,CACA,EACE,UAAW,CAAE,IAAK,CAAC,iBAAiB,CAAC,EACrC,UAAW,CACT,uBAAwB,CACtB,4DACN,EACI,eAAgB,CACd,4DACN,EACI,sBAAuB,CACrB,mEACN,EACI,kCAAmC,CACjC,kEACN,EACI,iBAAkB,CAChB,4DACN,EACI,oCAAqC,CACnC,wGACN,EACI,6BAA8B,CAC5B,8EACN,EACI,uBAAwB,CACtB,4EACN,EACI,eAAgB,CACd,4EACN,EACI,sBAAuB,CACrB,mFACN,EACI,4BAA6B,CAC3B,kFACN,EACI,iBAAkB,CAChB,4EACN,EACI,wBAAyB,CACvB,8FACN,EACI,+BAAgC,CAC9B,wHACN,EACI,qBAAsB,CACpB,2DACN,EACI,aAAc,CAAC,2DAA2D,EAC1E,oBAAqB,CACnB,kEACN,EACI,gCAAiC,CAC/B,iEACN,EACI,eAAgB,CACd,2DACN,EACI,kCAAmC,CACjC,uGACN,EACI,2BAA4B,CAC1B,6EACN,CACA,EACE,MAAO,CACL,iBAAkB,CAChB,qDACA,CAAA,EACA,CAAE,QAAS,CAAC,QAAS,sCAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}