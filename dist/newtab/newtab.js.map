{"version":3,"file":"newtab.js","sources":["../../src/newtab/newtab.ts"],"sourcesContent":["// 导入Octokit\r\nimport { Octokit } from '@octokit/rest';\r\n\r\n// 本地类型定义（避免import导致的export问题）\r\ninterface Bookmark {\r\n  title: string;\r\n  url: string;\r\n  icon?: string;\r\n  description?: string;\r\n}\r\n\r\ninterface Workspace {\r\n  id: string;\r\n  name: string;\r\n  bookmarks: Bookmark[];\r\n  icon?: string;\r\n}\r\n\r\ninterface Workspaces {\r\n  [key: string]: Workspace;\r\n}\r\n\r\ntype SearchEngine = 'baidu' | 'google' | 'bing';\r\n\r\ninterface SearchEngineConfig {\r\n  name: string;\r\n  url: string;\r\n  placeholder: string;\r\n}\r\n\r\ninterface AnimeBackground {\r\n  url: string;\r\n  name?: string;\r\n}\r\n\r\n// GitHub同步配置接口\r\ninterface GitHubSyncConfig {\r\n  token: string;\r\n  gistId?: string;\r\n  enabled: boolean;\r\n}\r\n\r\n// 同步状态类型\r\ntype SyncStatus = 'idle' | 'syncing' | 'success' | 'error';\r\n\r\n// 同步配置数据接口\r\ninterface SyncData {\r\n  bookmarks: Bookmark[];\r\n  searchEngine: SearchEngine;\r\n  theme: string;\r\n  workspaces: Workspaces;\r\n  currentWorkspace: string;\r\n  lastSync?: string;\r\n}\r\n\r\n// 配置数据接口\r\ninterface ConfigData {\r\n  workspaces: Workspaces;\r\n  currentWorkspace: string;\r\n  settings?: Partial<AppSettings>;\r\n  exportTime: string;\r\n  version: string;\r\n}\r\n\r\n// 全局变量\r\nlet workspaces: Workspaces = {};\r\nlet currentWorkspace: string = 'default';\r\n\r\n// DOM元素类型断言辅助函数\r\nfunction getElement<T extends HTMLElement>(id: string): T | null {\r\n  return document.getElementById(id) as T;\r\n}\r\n\r\nfunction getElementBySelector<T extends HTMLElement>(selector: string): T | null {\r\n  return document.querySelector(selector) as T;\r\n}\r\n\r\n// 搜索引擎配置\r\nconst searchEngines: Record<SearchEngine, SearchEngineConfig> = {\r\n  baidu: {\r\n    name: '百度',\r\n    url: 'https://www.baidu.com/s?wd=',\r\n    placeholder: '百度一下，你就知道'\r\n  },\r\n  google: {\r\n    name: 'Google',\r\n    url: 'https://www.google.com/search?q=',\r\n    placeholder: 'Search Google'\r\n  },\r\n  bing: {\r\n    name: 'Bing',\r\n    url: 'https://www.bing.com/search?q=',\r\n    placeholder: 'Search Bing'\r\n  }\r\n};\r\n\r\n// 动漫背景图片列表\r\nconst animeBackgrounds: AnimeBackground[] = [\r\n  { url: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=1920&h=1080&fit=crop', name: '星空夜景' },\r\n  { url: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1920&h=1080&fit=crop', name: '山脉风光' },\r\n  { url: 'https://images.unsplash.com/photo-1519904981063-b0cf448d479e?w=1920&h=1080&fit=crop', name: '城市夜景' },\r\n  { url: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1920&h=1080&fit=crop', name: '自然风景' },\r\n  { url: 'https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=1920&h=1080&fit=crop', name: '森林小径' },\r\n  { url: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1920&h=1080&fit=crop', name: '海洋波浪' },\r\n  { url: 'https://images.unsplash.com/photo-1518837695005-2083093ee35b?w=1920&h=1080&fit=crop', name: '樱花盛开' },\r\n  { url: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1920&h=1080&fit=crop', name: '雪山景色' }\r\n];\r\n\r\ndocument.addEventListener('DOMContentLoaded', async (): Promise<void> => {\r\n  console.log('页面加载完成，开始初始化...');\r\n  \r\n  try {\r\n    // 初始化时钟和日期\r\n    updateClock();\r\n    setInterval(updateClock, 1000);\r\n    console.log('时钟初始化完成');\r\n    \r\n    // 初始化搜索\r\n    initSearch();\r\n    console.log('搜索初始化完成');\r\n    \r\n    // 初始化侧边栏\r\n    initSidebar();\r\n    console.log('侧边栏初始化完成');\r\n    \r\n    // 初始化模态框\r\n    initModals();\r\n    console.log('模态框初始化完成');\r\n    \r\n    // 初始化GitHub同步\r\n    initGitHubSync();\r\n    console.log('GitHub同步初始化完成');\r\n    \r\n    // 初始化底边栏图标（异步）\r\n    initBottomBarIcons();\r\n    console.log('底边栏图标初始化开始');\r\n    \r\n    // 初始化工作区（这会触发书签初始化）\r\n    initWorkspaces();\r\n    console.log('工作区初始化完成');\r\n    \r\n    // 初始化动漫背景\r\n    initAnimeBackground();\r\n    console.log('动漫背景初始化完成');\r\n    \r\n  } catch (error) {\r\n    console.error('初始化过程中发生错误:', error);\r\n  }\r\n});\r\n\r\n// 更新时钟和日期\r\nfunction updateClock(): void {\r\n  const now = new Date();\r\n  \r\n  // 更新时钟\r\n  const hours = String(now.getHours()).padStart(2, '0');\r\n  const minutes = String(now.getMinutes()).padStart(2, '0');\r\n  const seconds = String(now.getSeconds()).padStart(2, '0');\r\n  \r\n  const clockElement = getElement('clock');\r\n  if (clockElement) {\r\n    clockElement.textContent = `${hours}:${minutes}:${seconds}`;\r\n  }\r\n  \r\n  // 更新日期\r\n  const options: Intl.DateTimeFormatOptions = { \r\n    weekday: 'long', \r\n    year: 'numeric', \r\n    month: 'long', \r\n    day: 'numeric' \r\n  };\r\n  \r\n  const dateElement = getElement('date');\r\n  if (dateElement) {\r\n    dateElement.textContent = now.toLocaleDateString('zh-CN', options);\r\n  }\r\n}\r\n\r\n// 初始化搜索功能\r\nfunction initSearch(): void {\r\n  const searchInput = getElement<HTMLInputElement>('search-input');\r\n  const searchForm = getElement<HTMLFormElement>('search-form');\r\n  \r\n  if (!searchInput || !searchForm) {\r\n    console.error('搜索元素未找到');\r\n    return;\r\n  }\r\n\r\n  // 加载搜索引擎设置\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.get('searchEngine', (data: { searchEngine?: SearchEngine }): void => {\r\n      const engine = data.searchEngine || 'baidu';\r\n      const config = searchEngines[engine];\r\n      searchInput.placeholder = config.placeholder;\r\n    });\r\n  }\r\n\r\n  // 搜索表单提交事件\r\n  searchForm.addEventListener('submit', (e: Event): void => {\r\n    e.preventDefault();\r\n    const query = searchInput.value.trim();\r\n    if (query) {\r\n      performSearch(query);\r\n    }\r\n  });\r\n}\r\n\r\n// 执行搜索\r\nfunction performSearch(query: string): void {\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.get('searchEngine', (data: { searchEngine?: SearchEngine }): void => {\r\n      const engine = data.searchEngine || 'baidu';\r\n      const config = searchEngines[engine];\r\n      const searchUrl = config.url + encodeURIComponent(query);\r\n      window.open(searchUrl, '_blank');\r\n    });\r\n  } else {\r\n    // 默认使用百度搜索\r\n    const searchUrl = searchEngines.baidu.url + encodeURIComponent(query);\r\n    window.open(searchUrl, '_blank');\r\n  }\r\n}\r\n\r\n// 初始化工作区\r\nfunction initWorkspaces(): void {\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.get(['workspaces', 'currentWorkspace'], (data: { workspaces?: Workspaces; currentWorkspace?: string }): void => {\r\n      workspaces = data.workspaces || getDefaultWorkspaces();\r\n      currentWorkspace = data.currentWorkspace || 'default';\r\n      \r\n      completeWorkspaceInit();\r\n    });\r\n  } else {\r\n    // 如果没有Chrome存储，使用默认工作区\r\n    workspaces = getDefaultWorkspaces();\r\n    currentWorkspace = 'default';\r\n    completeWorkspaceInit();\r\n  }\r\n}\r\n\r\n// 完成工作区初始化\r\nasync function completeWorkspaceInit(): Promise<void> {\r\n  updateWorkspaceList();\r\n  await initBookmarks();\r\n}\r\n\r\n// 获取默认工作区\r\nfunction getDefaultWorkspaces(): Workspaces {\r\n  return {\r\n    default: {\r\n      id: 'default',\r\n      name: '默认',\r\n      bookmarks: [],\r\n      icon: '🏠'\r\n    },\r\n    work: {\r\n      id: 'work',\r\n      name: '工作',\r\n      bookmarks: [],\r\n      icon: '💼'\r\n    },\r\n    study: {\r\n      id: 'study',\r\n      name: '学习',\r\n      bookmarks: [],\r\n      icon: '📚'\r\n    },\r\n    entertainment: {\r\n      id: 'entertainment',\r\n      name: '娱乐',\r\n      bookmarks: [],\r\n      icon: '🎮'\r\n    }\r\n  };\r\n}\r\n\r\n// 更新工作区列表\r\nfunction updateWorkspaceList(): void {\r\n  const workspaceList = getElement('workspace-list');\r\n  if (!workspaceList) {\r\n    console.error('workspace-list 元素未找到');\r\n    return;\r\n  }\r\n  \r\n  workspaceList.innerHTML = '';\r\n  \r\n  Object.values(workspaces).forEach((workspace: Workspace): void => {\r\n    const workspaceItem = document.createElement('div');\r\n    workspaceItem.className = `workspace-item ${workspace.id === currentWorkspace ? 'active' : ''}`;\r\n    workspaceItem.dataset['workspace'] = workspace.id;\r\n    \r\n    const icon = document.createElement('div');\r\n    icon.className = 'workspace-icon';\r\n    icon.textContent = workspace.icon || '📁';\r\n    \r\n    const name = document.createElement('span');\r\n    name.textContent = workspace.name;\r\n    \r\n    workspaceItem.appendChild(icon);\r\n    workspaceItem.appendChild(name);\r\n    \r\n    // 左键点击切换工作区\r\n    workspaceItem.addEventListener('click', (): void => {\r\n      console.log('点击工作区:', workspace.id);\r\n      switchWorkspace(workspace.id);\r\n    });\r\n    \r\n    // 右键菜单功能\r\n    workspaceItem.addEventListener('contextmenu', (e: MouseEvent): void => {\r\n      e.preventDefault();\r\n      showWorkspaceContextMenu(e, workspace, workspaceItem);\r\n    });\r\n    \r\n    workspaceList.appendChild(workspaceItem);\r\n  });\r\n  \r\n  console.log('工作区列表已更新，当前工作区:', currentWorkspace);\r\n}\r\n\r\n// 切换工作区\r\nasync function switchWorkspace(workspaceId: string): Promise<void> {\r\n  if (!workspaces[workspaceId]) {\r\n    console.error('工作区不存在:', workspaceId);\r\n    return;\r\n  }\r\n  \r\n  currentWorkspace = workspaceId;\r\n  \r\n  // 保存当前工作区到存储\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.set({ currentWorkspace });\r\n  }\r\n  \r\n  // 更新UI\r\n  updateWorkspaceList();\r\n  await initBookmarks();\r\n}\r\n\r\n// 显示工作区右键菜单\r\nfunction showWorkspaceContextMenu(e: MouseEvent, workspace: Workspace, workspaceElement: HTMLElement): void {\r\n  // 移除已存在的右键菜单\r\n  const existingMenu = document.querySelector('.workspace-context-menu');\r\n  if (existingMenu) {\r\n    existingMenu.remove();\r\n  }\r\n  \r\n  // 创建右键菜单\r\n  const contextMenu = document.createElement('div');\r\n  contextMenu.className = 'workspace-context-menu';\r\n  contextMenu.style.position = 'fixed';\r\n  contextMenu.style.left = `${e.clientX}px`;\r\n  contextMenu.style.top = `${e.clientY}px`;\r\n  contextMenu.style.background = 'white';\r\n  contextMenu.style.border = '1px solid #ddd';\r\n  contextMenu.style.borderRadius = '6px';\r\n  contextMenu.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\r\n  contextMenu.style.zIndex = '10000';\r\n  contextMenu.style.minWidth = '120px';\r\n  contextMenu.style.overflow = 'hidden';\r\n  \r\n  // 修改选项\r\n  const editOption = document.createElement('div');\r\n  editOption.className = 'context-menu-item';\r\n  editOption.textContent = '修改';\r\n  editOption.style.padding = '8px 12px';\r\n  editOption.style.cursor = 'pointer';\r\n  editOption.style.fontSize = '14px';\r\n  editOption.style.borderBottom = '1px solid #eee';\r\n  editOption.addEventListener('mouseenter', (): void => {\r\n    editOption.style.background = '#f5f5f5';\r\n  });\r\n  editOption.addEventListener('mouseleave', (): void => {\r\n    editOption.style.background = 'white';\r\n  });\r\n  editOption.addEventListener('click', (): void => {\r\n    editWorkspace(workspace);\r\n    contextMenu.remove();\r\n  });\r\n  \r\n  // 删除选项（默认工作区不能删除）\r\n  if (workspace.id !== 'default') {\r\n    const deleteOption = document.createElement('div');\r\n    deleteOption.className = 'context-menu-item';\r\n    deleteOption.textContent = '删除';\r\n    deleteOption.style.padding = '8px 12px';\r\n    deleteOption.style.cursor = 'pointer';\r\n    deleteOption.style.fontSize = '14px';\r\n    deleteOption.style.color = '#dc3545';\r\n    deleteOption.addEventListener('mouseenter', (): void => {\r\n      deleteOption.style.background = '#f5f5f5';\r\n    });\r\n    deleteOption.addEventListener('mouseleave', (): void => {\r\n      deleteOption.style.background = 'white';\r\n    });\r\n    deleteOption.addEventListener('click', (): void => {\r\n      deleteWorkspace(workspace);\r\n      contextMenu.remove();\r\n    });\r\n    \r\n    contextMenu.appendChild(editOption);\r\n    contextMenu.appendChild(deleteOption);\r\n  } else {\r\n    // 默认工作区只显示修改选项\r\n    contextMenu.appendChild(editOption);\r\n  }\r\n  \r\n  document.body.appendChild(contextMenu);\r\n  \r\n  // 点击其他地方关闭菜单\r\n  const closeMenu = (event: MouseEvent): void => {\r\n    if (!contextMenu.contains(event.target as Node)) {\r\n      contextMenu.remove();\r\n      document.removeEventListener('click', closeMenu);\r\n    }\r\n  };\r\n  \r\n  // 延迟添加点击事件，避免立即触发\r\n  setTimeout(() => {\r\n    document.addEventListener('click', closeMenu);\r\n  }, 0);\r\n}\r\n\r\n// 编辑工作区\r\nfunction editWorkspace(workspace: Workspace): void {\r\n  const addWorkspaceModal = getElement('add-workspace-modal');\r\n  const workspaceNameInput = getElement<HTMLInputElement>('workspace-name');\r\n  \r\n  if (!addWorkspaceModal || !workspaceNameInput) {\r\n    console.error('工作区编辑元素未找到');\r\n    return;\r\n  }\r\n  \r\n  // 填充当前工作区数据\r\n  workspaceNameInput.value = workspace.name;\r\n  \r\n  // 选择当前图标\r\n  const iconOptions = document.querySelectorAll('.icon-option');\r\n  iconOptions.forEach((option: Element): void => {\r\n    option.classList.remove('selected');\r\n    const iconOption = option as HTMLElement;\r\n    if (iconOption.dataset['icon'] === workspace.icon) {\r\n      option.classList.add('selected');\r\n    }\r\n  });\r\n  \r\n  // 标记为编辑模式\r\n  addWorkspaceModal.setAttribute('data-edit-mode', 'true');\r\n  addWorkspaceModal.setAttribute('data-edit-workspace', JSON.stringify(workspace));\r\n  \r\n  // 更改标题\r\n  const modalTitle = addWorkspaceModal.querySelector('h3');\r\n  if (modalTitle) {\r\n    modalTitle.textContent = '修改工作区';\r\n  }\r\n  \r\n  // 显示模态框\r\n  addWorkspaceModal.classList.add('active');\r\n}\r\n\r\n// 删除工作区\r\nfunction deleteWorkspace(workspace: Workspace): void {\r\n  if (workspace.id === 'default') {\r\n    alert('默认工作区不能删除');\r\n    return;\r\n  }\r\n  \r\n  if (!confirm(`确定要删除工作区\"${workspace.name}\"吗？\\n删除后该工作区的所有书签也会被删除。`)) {\r\n    return;\r\n  }\r\n  \r\n  // 如果删除的是当前工作区，切换到默认工作区\r\n  if (workspace.id === currentWorkspace) {\r\n    currentWorkspace = 'default';\r\n  }\r\n  \r\n  // 从工作区列表中删除\r\n  delete workspaces[workspace.id];\r\n  \r\n  // 保存到存储\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.set({ workspaces, currentWorkspace }, (): void => {\r\n      console.log('工作区已删除:', workspace.name);\r\n      updateWorkspaceList();\r\n      initBookmarks();\r\n    });\r\n  } else {\r\n    // 本地测试环境\r\n    console.log('工作区已删除:', workspace.name);\r\n    updateWorkspaceList();\r\n    initBookmarks();\r\n  }\r\n}\r\n\r\n// 修改initBookmarks函数为异步版本，使用智能图标获取\r\nasync function initBookmarks(): Promise<void> {\r\n  const bookmarksContainer = getElement('bookmarks');\r\n  if (!bookmarksContainer) {\r\n    console.error('书签容器元素未找到');\r\n    return;\r\n  }\r\n  \r\n  bookmarksContainer.innerHTML = '';\r\n  \r\n  // 检查工作区数据是否已加载\r\n  if (!workspaces || !currentWorkspace) {\r\n    console.log('工作区数据尚未加载，跳过书签初始化');\r\n    return;\r\n  }\r\n  \r\n  // 确保当前工作区存在\r\n  const currentWorkspaceData = workspaces[currentWorkspace];\r\n  if (!currentWorkspaceData) {\r\n    console.error('当前工作区不存在:', currentWorkspace);\r\n    return;\r\n  }\r\n  \r\n  // 获取当前工作区的书签\r\n  if (currentWorkspaceData.bookmarks && currentWorkspaceData.bookmarks.length > 0) {\r\n    const bookmarks = currentWorkspaceData.bookmarks;\r\n    \r\n    // 渲染书签 - 立即显示，异步获取图标\r\n    for (const bookmark of bookmarks) {\r\n      createBookmarkElementWithLogo(bookmark).then((bookmarkElement) => {\r\n        bookmarksContainer.appendChild(bookmarkElement);\r\n      });\r\n    }\r\n  } else {\r\n    // 如果当前工作区没有书签，显示默认书签（仅限默认工作区）\r\n    if (currentWorkspace === 'default') {\r\n      const defaultBookmarks: Bookmark[] = [\r\n        { title: '百度', url: 'https://www.baidu.com' },\r\n        { title: '微博', url: 'https://weibo.com' },\r\n        { title: '知乎', url: 'https://www.zhihu.com' },\r\n        { title: 'Bilibili', url: 'https://www.bilibili.com' },\r\n        { title: '腾讯视频', url: 'https://v.qq.com' },\r\n        { title: '淘宝', url: 'https://www.taobao.com' }\r\n      ];\r\n      \r\n      // 保存默认书签到当前工作区\r\n      const workspace = workspaces[currentWorkspace];\r\n      if (workspace) {\r\n        workspace.bookmarks = defaultBookmarks;\r\n        \r\n        // 保存到存储（如果可用）\r\n        if (typeof chrome !== 'undefined' && chrome.storage) {\r\n          chrome.storage.sync.set({ workspaces });\r\n        }\r\n        \r\n        // 渲染书签 - 立即显示，异步获取图标\r\n        for (const bookmark of defaultBookmarks) {\r\n          createBookmarkElementWithLogo(bookmark).then((bookmarkElement) => {\r\n            bookmarksContainer.appendChild(bookmarkElement);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // 添加\"添加书签\"按钮到最后\r\n  const addButton = createAddBookmarkButton();\r\n  \r\n  // 计算当前书签数量，为添加按钮设置合适的动画延迟\r\n  const bookmarkCount = bookmarksContainer.children.length;\r\n  const delay = (bookmarkCount + 1) * 0.1;\r\n  addButton.style.animationDelay = `${delay}s`;\r\n  \r\n  bookmarksContainer.appendChild(addButton);\r\n}\r\n\r\n// 显示书签右键菜单\r\nfunction showBookmarkContextMenu(e: MouseEvent, bookmark: Bookmark, bookmarkElement: HTMLElement): void {\r\n  // 移除已存在的右键菜单\r\n  const existingMenu = document.querySelector('.bookmark-context-menu');\r\n  if (existingMenu) {\r\n    existingMenu.remove();\r\n  }\r\n  \r\n  // 创建右键菜单\r\n  const contextMenu = document.createElement('div');\r\n  contextMenu.className = 'bookmark-context-menu';\r\n  contextMenu.style.position = 'fixed';\r\n  contextMenu.style.left = `${e.clientX}px`;\r\n  contextMenu.style.top = `${e.clientY}px`;\r\n  contextMenu.style.background = 'white';\r\n  contextMenu.style.border = '1px solid #ddd';\r\n  contextMenu.style.borderRadius = '6px';\r\n  contextMenu.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\r\n  contextMenu.style.zIndex = '10000';\r\n  contextMenu.style.minWidth = '120px';\r\n  contextMenu.style.overflow = 'hidden';\r\n  \r\n  // 修改选项\r\n  const editOption = document.createElement('div');\r\n  editOption.className = 'context-menu-item';\r\n  editOption.textContent = '修改';\r\n  editOption.style.padding = '8px 12px';\r\n  editOption.style.cursor = 'pointer';\r\n  editOption.style.fontSize = '14px';\r\n  editOption.style.borderBottom = '1px solid #eee';\r\n  editOption.addEventListener('mouseenter', (): void => {\r\n    editOption.style.background = '#f5f5f5';\r\n  });\r\n  editOption.addEventListener('mouseleave', (): void => {\r\n    editOption.style.background = 'white';\r\n  });\r\n  editOption.addEventListener('click', (): void => {\r\n    editBookmark(bookmark);\r\n    contextMenu.remove();\r\n  });\r\n  \r\n  // 删除选项\r\n  const deleteOption = document.createElement('div');\r\n  deleteOption.className = 'context-menu-item';\r\n  deleteOption.textContent = '删除';\r\n  deleteOption.style.padding = '8px 12px';\r\n  deleteOption.style.cursor = 'pointer';\r\n  deleteOption.style.fontSize = '14px';\r\n  deleteOption.style.color = '#dc3545';\r\n  deleteOption.addEventListener('mouseenter', (): void => {\r\n    deleteOption.style.background = '#f5f5f5';\r\n  });\r\n  deleteOption.addEventListener('mouseleave', (): void => {\r\n    deleteOption.style.background = 'white';\r\n  });\r\n  deleteOption.addEventListener('click', (): void => {\r\n    deleteBookmark(bookmark, bookmarkElement);\r\n    contextMenu.remove();\r\n  });\r\n  \r\n  contextMenu.appendChild(editOption);\r\n  contextMenu.appendChild(deleteOption);\r\n  document.body.appendChild(contextMenu);\r\n  \r\n  // 点击其他地方关闭菜单\r\n  const closeMenu = (event: MouseEvent): void => {\r\n    if (!contextMenu.contains(event.target as Node)) {\r\n      contextMenu.remove();\r\n      document.removeEventListener('click', closeMenu);\r\n    }\r\n  };\r\n  \r\n  // 延迟添加点击事件，避免立即触发\r\n  setTimeout(() => {\r\n    document.addEventListener('click', closeMenu);\r\n  }, 0);\r\n}\r\n\r\n// 编辑书签\r\nfunction editBookmark(bookmark: Bookmark): void {\r\n  const addBookmarkModal = getElement('add-bookmark-modal');\r\n  const titleInput = getElement<HTMLInputElement>('bookmark-title');\r\n  const urlInput = getElement<HTMLInputElement>('bookmark-url');\r\n  const descriptionInput = getElement<HTMLTextAreaElement>('bookmark-description');\r\n  \r\n  if (!addBookmarkModal || !titleInput || !urlInput) {\r\n    console.error('书签编辑元素未找到');\r\n    return;\r\n  }\r\n  \r\n  // 填充当前书签数据\r\n  titleInput.value = bookmark.title;\r\n  urlInput.value = bookmark.url;\r\n  if (descriptionInput && bookmark.description) {\r\n    descriptionInput.value = bookmark.description;\r\n  }\r\n  \r\n  // 标记为编辑模式\r\n  addBookmarkModal.setAttribute('data-edit-mode', 'true');\r\n  addBookmarkModal.setAttribute('data-edit-bookmark', JSON.stringify(bookmark));\r\n  \r\n  // 显示模态框\r\n  addBookmarkModal.classList.add('active');\r\n}\r\n\r\n// 删除书签\r\nfunction deleteBookmark(bookmark: Bookmark, bookmarkElement: HTMLElement): void {\r\n  if (!confirm(`确定要删除书签\"${bookmark.title}\"吗？`)) {\r\n    return;\r\n  }\r\n  \r\n  // 从当前工作区中删除书签\r\n  const currentWorkspaceData = workspaces[currentWorkspace];\r\n  if (currentWorkspaceData && currentWorkspaceData.bookmarks) {\r\n    const bookmarkIndex = currentWorkspaceData.bookmarks.findIndex(\r\n      (b: Bookmark) => b.title === bookmark.title && b.url === bookmark.url\r\n    );\r\n    \r\n    if (bookmarkIndex !== -1) {\r\n      currentWorkspaceData.bookmarks.splice(bookmarkIndex, 1);\r\n      \r\n      // 保存到存储\r\n      if (typeof chrome !== 'undefined' && chrome.storage) {\r\n        chrome.storage.sync.set({ workspaces }, (): void => {\r\n          console.log('书签已删除:', bookmark.title);\r\n        });\r\n      }\r\n      \r\n      // 从DOM中移除元素\r\n      bookmarkElement.remove();\r\n    }\r\n  }\r\n}\r\n\r\n// 简化的图标获取函数 - 只使用favicon\r\nasync function getWebsiteFavicon(url: string): Promise<string> {\r\n  const domain = new URL(url).hostname;\r\n  \r\n  // 定义favicon路径，按优先级排序\r\n  const faviconPaths = [\r\n    // 高分辨率favicon\r\n    `https://${domain}/favicon-32x32.png`,\r\n    `https://${domain}/favicon-96x96.png`,\r\n    `https://${domain}/favicon-192x192.png`,\r\n    \r\n    // Apple touch icon (通常质量较好)\r\n    `https://${domain}/apple-touch-icon.png`,\r\n    `https://${domain}/apple-touch-icon-180x180.png`,\r\n    \r\n    // Google favicon服务 (备用)\r\n    `https://www.google.com/s2/favicons?domain=${domain}&sz=32`,\r\n    \r\n    // 标准favicon (最后备用)\r\n    `https://${domain}/favicon.ico`\r\n  ];\r\n  \r\n  // 尝试加载每个路径\r\n  for (const faviconPath of faviconPaths) {\r\n    try {\r\n      const isValid = await checkImageExists(faviconPath);\r\n      if (isValid) {\r\n        return faviconPath;\r\n      }\r\n    } catch (error) {\r\n      // 继续尝试下一个路径\r\n      continue;\r\n    }\r\n  }\r\n  \r\n  // 如果所有路径都失败，返回空字符串，将使用文字\r\n  return '';\r\n}\r\n\r\n// 检查图片是否存在且可加载\r\nfunction checkImageExists(url: string): Promise<boolean> {\r\n  return new Promise((resolve) => {\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      // 检查图片尺寸，过小的图片可能是占位符\r\n      if (img.width >= 16 && img.height >= 16) {\r\n        resolve(true);\r\n      } else {\r\n        resolve(false);\r\n      }\r\n    };\r\n    img.onerror = () => resolve(false);\r\n    img.src = url;\r\n    \r\n    // 设置超时，避免长时间等待\r\n    setTimeout(() => resolve(false), 3000);\r\n  });\r\n}\r\n\r\n// 创建书签元素 - 优化版本，先显示文字，异步获取favicon\r\nasync function createBookmarkElementWithLogo(bookmark: Bookmark): Promise<HTMLElement> {\r\n  const bookmarkItem = document.createElement('a');\r\n  bookmarkItem.href = bookmark.url;\r\n  bookmarkItem.className = 'bookmark-item';\r\n  \r\n  // 如果有描述，添加到title属性中\r\n  if (bookmark.description) {\r\n    bookmarkItem.title = `${bookmark.title}\\n${bookmark.description}`;\r\n  } else {\r\n    bookmarkItem.title = bookmark.title;\r\n  }\r\n  \r\n  const iconContainer = document.createElement('div');\r\n  iconContainer.className = 'bookmark-icon';\r\n  \r\n  // 先显示文字版本\r\n  function showTextIcon(): void {\r\n    iconContainer.innerHTML = '';\r\n    iconContainer.style.background = '#6c757d';\r\n    iconContainer.style.color = 'white';\r\n    iconContainer.style.display = 'flex';\r\n    iconContainer.style.alignItems = 'center';\r\n    iconContainer.style.justifyContent = 'center';\r\n    iconContainer.style.fontSize = '1.2rem';\r\n    iconContainer.style.fontWeight = 'bold';\r\n    iconContainer.textContent = bookmark.title.charAt(0).toUpperCase();\r\n  }\r\n  \r\n  // 显示图标版本\r\n  function showImageIcon(iconUrl: string): void {\r\n    const iconImg = document.createElement('img');\r\n    iconImg.src = iconUrl;\r\n    iconImg.alt = bookmark.title;\r\n    iconImg.style.width = '100%';\r\n    iconImg.style.height = '100%';\r\n    iconImg.style.objectFit = 'cover';\r\n    iconImg.onerror = (): void => {\r\n      // 图标加载失败时，回退到文字\r\n      showTextIcon();\r\n    };\r\n    \r\n    // 清除文字样式，显示图片\r\n    iconContainer.innerHTML = '';\r\n    iconContainer.style.background = '';\r\n    iconContainer.style.color = '';\r\n    iconContainer.style.fontSize = '';\r\n    iconContainer.style.fontWeight = '';\r\n    iconContainer.appendChild(iconImg);\r\n  }\r\n  \r\n  // 立即显示文字版本\r\n  showTextIcon();\r\n  \r\n  const titleElement = document.createElement('div');\r\n  titleElement.className = 'bookmark-title';\r\n  titleElement.textContent = bookmark.title;\r\n  \r\n  bookmarkItem.appendChild(iconContainer);\r\n  bookmarkItem.appendChild(titleElement);\r\n  \r\n  // 添加右键菜单事件\r\n  bookmarkItem.addEventListener('contextmenu', (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    showBookmarkContextMenu(e, bookmark, bookmarkItem);\r\n  });\r\n  \r\n  // 异步获取favicon并替换\r\n  (async (): Promise<void> => {\r\n    try {\r\n      let iconUrl = '';\r\n      \r\n      // 如果已有图标URL，先验证是否有效\r\n      if (bookmark.icon) {\r\n        const isValid = await checkImageExists(bookmark.icon);\r\n        if (isValid) {\r\n          iconUrl = bookmark.icon;\r\n        }\r\n      }\r\n      \r\n      // 如果没有有效图标，尝试获取favicon\r\n      if (!iconUrl) {\r\n        iconUrl = await getWebsiteFavicon(bookmark.url);\r\n      }\r\n      \r\n      // 如果获取到有效图标，替换文字版本\r\n      if (iconUrl) {\r\n        showImageIcon(iconUrl);\r\n      }\r\n    } catch (error) {\r\n      console.warn('获取书签图标失败:', bookmark.title, error);\r\n      // 保持文字版本\r\n    }\r\n  })();\r\n  \r\n  return bookmarkItem;\r\n}\r\n\r\n// 修改原有的createBookmarkElement函数，简化为只使用favicon或文字\r\nfunction createBookmarkElement(bookmark: Bookmark): HTMLElement {\r\n  const bookmarkItem = document.createElement('a');\r\n  bookmarkItem.href = bookmark.url;\r\n  bookmarkItem.className = 'bookmark-item';\r\n  \r\n  // 如果有描述，添加到title属性中\r\n  if (bookmark.description) {\r\n    bookmarkItem.title = `${bookmark.title}\\n${bookmark.description}`;\r\n  } else {\r\n    bookmarkItem.title = bookmark.title;\r\n  }\r\n  \r\n  const iconContainer = document.createElement('div');\r\n  iconContainer.className = 'bookmark-icon';\r\n  \r\n  // 如果有图标URL，使用图片；否则使用文字\r\n  if (bookmark.icon) {\r\n    const iconImg = document.createElement('img');\r\n    iconImg.src = bookmark.icon;\r\n    iconImg.alt = bookmark.title;\r\n    iconImg.onerror = (): void => {\r\n      // 图标加载失败时，使用文字\r\n      iconContainer.innerHTML = '';\r\n      iconContainer.style.background = '#6c757d';\r\n      iconContainer.style.color = 'white';\r\n      iconContainer.style.display = 'flex';\r\n      iconContainer.style.alignItems = 'center';\r\n      iconContainer.style.justifyContent = 'center';\r\n      iconContainer.style.fontSize = '1.2rem';\r\n      iconContainer.style.fontWeight = 'bold';\r\n      iconContainer.textContent = bookmark.title.charAt(0).toUpperCase();\r\n    };\r\n    iconContainer.appendChild(iconImg);\r\n  } else {\r\n    // 使用文字\r\n    iconContainer.style.background = '#6c757d';\r\n    iconContainer.style.color = 'white';\r\n    iconContainer.style.display = 'flex';\r\n    iconContainer.style.alignItems = 'center';\r\n    iconContainer.style.justifyContent = 'center';\r\n    iconContainer.style.fontSize = '1.2rem';\r\n    iconContainer.style.fontWeight = 'bold';\r\n    iconContainer.textContent = bookmark.title.charAt(0).toUpperCase();\r\n  }\r\n  \r\n  const titleElement = document.createElement('div');\r\n  titleElement.className = 'bookmark-title';\r\n  titleElement.textContent = bookmark.title;\r\n  \r\n  bookmarkItem.appendChild(iconContainer);\r\n  bookmarkItem.appendChild(titleElement);\r\n  \r\n  // 添加右键菜单事件\r\n  bookmarkItem.addEventListener('contextmenu', (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    showBookmarkContextMenu(e, bookmark, bookmarkItem);\r\n  });\r\n  \r\n  return bookmarkItem;\r\n}\r\n\r\n// 创建添加书签按钮\r\nfunction createAddBookmarkButton(): HTMLElement {\r\n  const addBookmarkItem = document.createElement('div');\r\n  addBookmarkItem.className = 'add-bookmark-item';\r\n  addBookmarkItem.id = 'add-bookmark';\r\n  \r\n  const iconContainer = document.createElement('div');\r\n  iconContainer.className = 'add-bookmark-icon';\r\n  iconContainer.textContent = '+';\r\n  \r\n  const titleElement = document.createElement('div');\r\n  titleElement.className = 'add-bookmark-title';\r\n  titleElement.textContent = '添加链接';\r\n  \r\n  addBookmarkItem.appendChild(iconContainer);\r\n  addBookmarkItem.appendChild(titleElement);\r\n  \r\n  // 添加点击事件\r\n  addBookmarkItem.addEventListener('click', (): void => {\r\n    const addBookmarkModal = getElement('add-bookmark-modal');\r\n    if (addBookmarkModal) {\r\n      addBookmarkModal.classList.add('active');\r\n    }\r\n  });\r\n  \r\n  return addBookmarkItem;\r\n}\r\n\r\n// 初始化侧边栏\r\nfunction initSidebar(): void {\r\n  // 侧边栏相关功能实现\r\n  console.log('侧边栏初始化');\r\n}\r\n\r\n// 初始化模态框\r\nfunction initModals(): void {\r\n  const addWorkspaceBtn = getElement('add-workspace');\r\n  const addWorkspaceModal = getElement('add-workspace-modal');\r\n  const addWorkspaceForm = getElement<HTMLFormElement>('add-workspace-form');\r\n  const cancelWorkspaceBtn = getElement('cancel-workspace');\r\n  \r\n  // 书签相关元素\r\n  const addBookmarkModal = getElement('add-bookmark-modal');\r\n  const addBookmarkForm = getElement<HTMLFormElement>('add-bookmark-form');\r\n  const cancelBookmarkBtn = getElement('cancel-bookmark');\r\n  \r\n  // 添加工作区按钮点击事件\r\n  if (addWorkspaceBtn && addWorkspaceModal) {\r\n    addWorkspaceBtn.addEventListener('click', (): void => {\r\n      console.log('点击添加工作区按钮');\r\n      addWorkspaceModal.classList.add('active');\r\n    });\r\n  }\r\n  \r\n  // 取消添加工作区按钮\r\n  if (cancelWorkspaceBtn && addWorkspaceModal && addWorkspaceForm) {\r\n    cancelWorkspaceBtn.addEventListener('click', (): void => {\r\n      addWorkspaceModal.classList.remove('active');\r\n      addWorkspaceForm.reset();\r\n      clearIconSelection();\r\n      // 清除编辑模式标记\r\n      addWorkspaceModal.removeAttribute('data-edit-mode');\r\n      addWorkspaceModal.removeAttribute('data-edit-workspace');\r\n      // 恢复标题\r\n      const modalTitle = addWorkspaceModal.querySelector('h3');\r\n      if (modalTitle) {\r\n        modalTitle.textContent = '添加新工作区';\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 点击模态框外部关闭\r\n  if (addWorkspaceModal && addWorkspaceForm) {\r\n    addWorkspaceModal.addEventListener('click', (e: Event): void => {\r\n      if (e.target === addWorkspaceModal) {\r\n        addWorkspaceModal.classList.remove('active');\r\n        addWorkspaceForm.reset();\r\n        clearIconSelection();\r\n        // 清除编辑模式标记\r\n        addWorkspaceModal.removeAttribute('data-edit-mode');\r\n        addWorkspaceModal.removeAttribute('data-edit-workspace');\r\n        // 恢复标题\r\n        const modalTitle = addWorkspaceModal.querySelector('h3');\r\n        if (modalTitle) {\r\n          modalTitle.textContent = '添加新工作区';\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 图标选择功能\r\n  const iconOptions = document.querySelectorAll('.icon-option');\r\n  iconOptions.forEach((option: Element): void => {\r\n    option.addEventListener('click', (): void => {\r\n      iconOptions.forEach((opt: Element): void => opt.classList.remove('selected'));\r\n      option.classList.add('selected');\r\n    });\r\n  });\r\n  \r\n  // 添加工作区表单提交\r\n  if (addWorkspaceForm) {\r\n    addWorkspaceForm.addEventListener('submit', (e: Event): void => {\r\n      e.preventDefault();\r\n      \r\n      const workspaceNameInput = getElement<HTMLInputElement>('workspace-name');\r\n      const selectedIcon = document.querySelector('.icon-option.selected') as HTMLElement;\r\n      \r\n      if (!workspaceNameInput || !selectedIcon || !addWorkspaceModal) {\r\n        alert('请填写工作区名称并选择图标');\r\n        return;\r\n      }\r\n      \r\n      const workspaceName = workspaceNameInput.value.trim();\r\n      \r\n      if (!workspaceName) {\r\n        alert('请填写工作区名称');\r\n        return;\r\n      }\r\n      \r\n      const workspaceIcon = selectedIcon.dataset['icon'] || '📁';\r\n      \r\n      // 检查是否为编辑模式\r\n      const isEditMode = addWorkspaceModal.getAttribute('data-edit-mode') === 'true';\r\n      const editWorkspaceData = addWorkspaceModal.getAttribute('data-edit-workspace');\r\n      \r\n      if (isEditMode && editWorkspaceData) {\r\n        // 编辑模式：更新现有工作区\r\n        try {\r\n          const originalWorkspace: Workspace = JSON.parse(editWorkspaceData);\r\n          \r\n          if (workspaces[originalWorkspace.id]) {\r\n            // 更新工作区数据\r\n            const workspace = workspaces[originalWorkspace.id];\r\n            if (workspace) {\r\n              workspace.name = workspaceName;\r\n              workspace.icon = workspaceIcon;\r\n            }\r\n            \r\n            console.log('工作区已更新:', workspaceName);\r\n          } else {\r\n            alert('找不到要编辑的工作区');\r\n            return;\r\n          }\r\n        } catch (error) {\r\n          console.error('解析编辑工作区数据失败:', error);\r\n          alert('编辑工作区数据错误');\r\n          return;\r\n        }\r\n      } else {\r\n        // 添加模式：创建新工作区\r\n        const workspaceId = 'workspace_' + Date.now();\r\n        \r\n        workspaces[workspaceId] = {\r\n          id: workspaceId,\r\n          name: workspaceName,\r\n          icon: workspaceIcon,\r\n          bookmarks: []\r\n        };\r\n        \r\n        console.log('新工作区已添加:', workspaceName);\r\n      }\r\n      \r\n      // 保存到存储\r\n      if (typeof chrome !== 'undefined' && chrome.storage) {\r\n        chrome.storage.sync.set({ workspaces }, (): void => {\r\n          updateWorkspaceList();\r\n          addWorkspaceModal.classList.remove('active');\r\n          addWorkspaceForm.reset();\r\n          clearIconSelection();\r\n          // 清除编辑模式标记\r\n          addWorkspaceModal.removeAttribute('data-edit-mode');\r\n          addWorkspaceModal.removeAttribute('data-edit-workspace');\r\n          // 恢复标题\r\n          const modalTitle = addWorkspaceModal.querySelector('h3');\r\n          if (modalTitle) {\r\n            modalTitle.textContent = '添加新工作区';\r\n          }\r\n        });\r\n      } else {\r\n        // 本地测试环境\r\n        updateWorkspaceList();\r\n        addWorkspaceModal.classList.remove('active');\r\n        addWorkspaceForm.reset();\r\n        clearIconSelection();\r\n        // 清除编辑模式标记\r\n        addWorkspaceModal.removeAttribute('data-edit-mode');\r\n        addWorkspaceModal.removeAttribute('data-edit-workspace');\r\n        // 恢复标题\r\n        const modalTitle = addWorkspaceModal.querySelector('h3');\r\n        if (modalTitle) {\r\n          modalTitle.textContent = '添加新工作区';\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 书签模态框功能\r\n  if (cancelBookmarkBtn && addBookmarkModal && addBookmarkForm) {\r\n    cancelBookmarkBtn.addEventListener('click', (): void => {\r\n      addBookmarkModal.classList.remove('active');\r\n      addBookmarkForm.reset();\r\n      // 清除编辑模式标记\r\n      addBookmarkModal.removeAttribute('data-edit-mode');\r\n      addBookmarkModal.removeAttribute('data-edit-bookmark');\r\n    });\r\n  }\r\n  \r\n  // 点击书签模态框外部关闭\r\n  if (addBookmarkModal && addBookmarkForm) {\r\n    addBookmarkModal.addEventListener('click', (e: Event): void => {\r\n      if (e.target === addBookmarkModal) {\r\n        addBookmarkModal.classList.remove('active');\r\n        addBookmarkForm.reset();\r\n        // 清除编辑模式标记\r\n        addBookmarkModal.removeAttribute('data-edit-mode');\r\n        addBookmarkModal.removeAttribute('data-edit-bookmark');\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 添加书签表单提交\r\n  if (addBookmarkForm) {\r\n    addBookmarkForm.addEventListener('submit', (e: Event): void => {\r\n      e.preventDefault();\r\n      \r\n      const titleInput = getElement<HTMLInputElement>('bookmark-title');\r\n      const urlInput = getElement<HTMLInputElement>('bookmark-url');\r\n      const descriptionInput = getElement<HTMLTextAreaElement>('bookmark-description');\r\n      \r\n      if (!titleInput || !urlInput || !addBookmarkModal) {\r\n        alert('请填写完整的书签信息');\r\n        return;\r\n      }\r\n      \r\n      const title = titleInput.value.trim();\r\n      const url = urlInput.value.trim();\r\n      const description = descriptionInput?.value.trim() || '';\r\n      \r\n      if (!title || !url) {\r\n        alert('请填写书签标题和URL');\r\n        return;\r\n      }\r\n      \r\n      // 检查是否为编辑模式\r\n      const isEditMode = addBookmarkModal.getAttribute('data-edit-mode') === 'true';\r\n      const editBookmarkData = addBookmarkModal.getAttribute('data-edit-bookmark');\r\n      \r\n      const currentWorkspaceData = workspaces[currentWorkspace];\r\n      if (!currentWorkspaceData) {\r\n        alert('当前工作区不存在');\r\n        return;\r\n      }\r\n      \r\n      if (isEditMode && editBookmarkData) {\r\n        // 编辑模式：更新现有书签\r\n        try {\r\n          const originalBookmark: Bookmark = JSON.parse(editBookmarkData);\r\n          const bookmarkIndex = currentWorkspaceData.bookmarks.findIndex(\r\n            (b: Bookmark) => b.title === originalBookmark.title && b.url === originalBookmark.url\r\n          );\r\n          \r\n          if (bookmarkIndex !== -1) {\r\n            // 更新书签数据\r\n            currentWorkspaceData.bookmarks[bookmarkIndex] = {\r\n              title,\r\n              url,\r\n              ...(description && { description })\r\n            };\r\n            \r\n            console.log('书签已更新:', title);\r\n          } else {\r\n            alert('找不到要编辑的书签');\r\n            return;\r\n          }\r\n        } catch (error) {\r\n          console.error('解析编辑书签数据失败:', error);\r\n          alert('编辑书签数据错误');\r\n          return;\r\n        }\r\n      } else {\r\n        // 添加模式：创建新书签\r\n        const newBookmark: Bookmark = {\r\n          title,\r\n          url,\r\n          ...(description && { description })\r\n        };\r\n        \r\n        currentWorkspaceData.bookmarks.push(newBookmark);\r\n        console.log('新书签已添加:', title);\r\n      }\r\n      \r\n      // 保存到存储\r\n      if (typeof chrome !== 'undefined' && chrome.storage) {\r\n        chrome.storage.sync.set({ workspaces }, async (): Promise<void> => {\r\n          await initBookmarks();\r\n          addBookmarkModal.classList.remove('active');\r\n          addBookmarkForm.reset();\r\n          // 清除编辑模式标记\r\n          addBookmarkModal.removeAttribute('data-edit-mode');\r\n          addBookmarkModal.removeAttribute('data-edit-bookmark');\r\n        });\r\n      } else {\r\n        // 本地测试环境\r\n        (async (): Promise<void> => {\r\n          await initBookmarks();\r\n          addBookmarkModal.classList.remove('active');\r\n          addBookmarkForm.reset();\r\n          // 清除编辑模式标记\r\n          addBookmarkModal.removeAttribute('data-edit-mode');\r\n          addBookmarkModal.removeAttribute('data-edit-bookmark');\r\n        })();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 设置界面相关元素\r\n  const settingsBtn = getElement('settings-btn');\r\n  const settingsModal = getElement('settings-modal');\r\n  const cancelSettingsBtn = getElement('cancel-settings');\r\n  const saveSettingsBtn = getElement('save-settings');\r\n  const resetSettingsBtn = getElement('reset-settings');\r\n  const closeSettingsBtn = getElement('close-settings');\r\n  \r\n  // 设置按钮点击事件\r\n  if (settingsBtn && settingsModal) {\r\n    settingsBtn.addEventListener('click', (): void => {\r\n      console.log('点击设置按钮');\r\n      loadSettingsData();\r\n      settingsModal.classList.add('active');\r\n    });\r\n  }\r\n  \r\n  // 关闭设置按钮\r\n  if (closeSettingsBtn && settingsModal) {\r\n    closeSettingsBtn.addEventListener('click', (): void => {\r\n      settingsModal.classList.remove('active');\r\n    });\r\n  }\r\n  \r\n  // 取消设置按钮\r\n  if (cancelSettingsBtn && settingsModal) {\r\n    cancelSettingsBtn.addEventListener('click', (): void => {\r\n      settingsModal.classList.remove('active');\r\n    });\r\n  }\r\n  \r\n  // 点击设置模态框外部关闭\r\n  if (settingsModal) {\r\n    settingsModal.addEventListener('click', (e: Event): void => {\r\n      if (e.target === settingsModal) {\r\n        settingsModal.classList.remove('active');\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 阻止模态框内容的点击事件冒泡\r\n  const settingsModalContent = settingsModal?.querySelector('.settings-modal-content');\r\n  if (settingsModalContent) {\r\n    settingsModalContent.addEventListener('click', (e: Event): void => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n  \r\n  // 标签页切换功能\r\n  const tabBtns = document.querySelectorAll('.tab-btn');\r\n  const tabContents = document.querySelectorAll('.tab-content');\r\n  \r\n  tabBtns.forEach((btn: Element): void => {\r\n    btn.addEventListener('click', (): void => {\r\n      const tabBtn = btn as HTMLElement;\r\n      const targetTab = tabBtn.dataset['tab'];\r\n      \r\n      if (!targetTab) return;\r\n      \r\n      // 移除所有活动状态\r\n      tabBtns.forEach((b: Element): void => b.classList.remove('active'));\r\n      tabContents.forEach((c: Element): void => c.classList.remove('active'));\r\n      \r\n      // 激活当前标签\r\n      tabBtn.classList.add('active');\r\n      const targetContent = document.getElementById(`${targetTab}-tab`);\r\n      if (targetContent) {\r\n        targetContent.classList.add('active');\r\n      }\r\n    });\r\n  });\r\n  \r\n  // 主题选择功能\r\n  const themeOptions = document.querySelectorAll('.theme-option');\r\n  themeOptions.forEach((option: Element): void => {\r\n    option.addEventListener('click', (): void => {\r\n      themeOptions.forEach((opt: Element): void => opt.classList.remove('active'));\r\n      option.classList.add('active');\r\n    });\r\n  });\r\n  \r\n  // 保存设置按钮\r\n  if (saveSettingsBtn && settingsModal) {\r\n    saveSettingsBtn.addEventListener('click', (): void => {\r\n      saveSettingsData();\r\n      settingsModal.classList.remove('active');\r\n    });\r\n  }\r\n  \r\n  // 重置设置按钮\r\n  if (resetSettingsBtn) {\r\n    resetSettingsBtn.addEventListener('click', (): void => {\r\n      if (confirm('确定要重置所有设置吗？这将恢复默认设置。')) {\r\n        resetSettingsData();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 配置管理相关元素\r\n  const exportConfigBtn = getElement('export-config');\r\n  const importConfigBtn = getElement('import-config');\r\n  const importFileInput = getElement<HTMLInputElement>('import-file');\r\n  \r\n  // 导出配置按钮\r\n  if (exportConfigBtn) {\r\n    exportConfigBtn.addEventListener('click', (): void => {\r\n      exportConfiguration();\r\n    });\r\n  }\r\n  \r\n  // 导入配置按钮\r\n  if (importConfigBtn && importFileInput) {\r\n    importConfigBtn.addEventListener('click', (): void => {\r\n      importFileInput.click();\r\n    });\r\n    \r\n    importFileInput.addEventListener('change', (e: Event): void => {\r\n      const target = e.target as HTMLInputElement;\r\n      const file = target.files?.[0];\r\n      if (file) {\r\n        importConfiguration(file);\r\n        target.value = ''; // 清空文件选择\r\n      }\r\n    });\r\n  }\r\n  \r\n  console.log('模态框初始化完成');\r\n}\r\n\r\n// 清除图标选择\r\nfunction clearIconSelection(): void {\r\n  const iconOptions = document.querySelectorAll('.icon-option');\r\n  iconOptions.forEach((option: Element): void => {\r\n    option.classList.remove('selected');\r\n  });\r\n}\r\n\r\n// 初始化底边栏图标\r\nfunction initBottomBarIcons(): void {\r\n  console.log('底边栏图标初始化');\r\n  \r\n  // 定义底边栏快速链接\r\n  const quickLinks = [\r\n    { title: '百度', url: 'https://www.baidu.com', emoji: '🔍' },\r\n    { title: '微博', url: 'https://weibo.com', emoji: '📱' },\r\n    { title: '知乎', url: 'https://www.zhihu.com', emoji: '💭' },\r\n    { title: 'Bilibili', url: 'https://www.bilibili.com', emoji: '📺' },\r\n    { title: 'GitHub', url: 'https://github.com', emoji: '💻' },\r\n    { title: '淘宝', url: 'https://www.taobao.com', emoji: '🛒' },\r\n    { title: '网易云音乐', url: 'https://music.163.com', emoji: '🎵' },\r\n    { title: 'QQ邮箱', url: 'https://mail.qq.com', emoji: '📧' }\r\n  ];\r\n  \r\n  const fixedLinksContainer = document.querySelector('.fixed-links');\r\n  if (!fixedLinksContainer) {\r\n    console.error('固定链接容器未找到');\r\n    return;\r\n  }\r\n  \r\n  // 清空现有内容\r\n  fixedLinksContainer.innerHTML = '';\r\n  \r\n  // 为每个快速链接创建元素\r\n  for (const link of quickLinks) {\r\n    createQuickLinkElement(link).then((linkElement) => {\r\n      fixedLinksContainer.appendChild(linkElement);\r\n    });\r\n  }\r\n}\r\n\r\n// 创建快速链接元素 - 优化版本，先显示文字，异步获取favicon\r\nasync function createQuickLinkElement(link: { title: string; url: string; emoji: string }): Promise<HTMLElement> {\r\n  const linkElement = document.createElement('a');\r\n  linkElement.href = link.url;\r\n  linkElement.className = 'fixed-link';\r\n  linkElement.title = link.title;\r\n  linkElement.setAttribute('data-emoji', link.emoji);\r\n  \r\n  // 先显示文字版本\r\n  function showTextIcon(): void {\r\n    linkElement.innerHTML = '';\r\n    linkElement.textContent = link.title.charAt(0).toUpperCase();\r\n    linkElement.style.fontSize = '1.8rem';\r\n    linkElement.style.color = 'white';\r\n    linkElement.style.textShadow = '0 2px 4px rgba(0, 0, 0, 0.3)';\r\n    linkElement.style.display = 'flex';\r\n    linkElement.style.alignItems = 'center';\r\n    linkElement.style.justifyContent = 'center';\r\n    linkElement.style.fontWeight = 'bold';\r\n  }\r\n  \r\n  // 显示图标版本\r\n  function showImageIcon(faviconUrl: string): void {\r\n    const img = document.createElement('img');\r\n    img.src = faviconUrl;\r\n    img.alt = link.title;\r\n    img.style.width = '100%';\r\n    img.style.height = '100%';\r\n    img.style.objectFit = 'cover';\r\n    \r\n    // 图片加载失败时回退到文字\r\n    img.onerror = (): void => {\r\n      showTextIcon();\r\n    };\r\n    \r\n    // 清除文字样式，显示图片\r\n    linkElement.innerHTML = '';\r\n    linkElement.style.fontSize = '';\r\n    linkElement.style.color = '';\r\n    linkElement.style.textShadow = '';\r\n    linkElement.style.fontWeight = '';\r\n    linkElement.appendChild(img);\r\n  }\r\n  \r\n  // 立即显示文字版本\r\n  showTextIcon();\r\n  \r\n  // 异步获取favicon并替换\r\n  (async (): Promise<void> => {\r\n    try {\r\n      const faviconUrl = await getWebsiteFavicon(link.url);\r\n      \r\n      // 如果获取到有效图标，替换文字版本\r\n      if (faviconUrl) {\r\n        showImageIcon(faviconUrl);\r\n      }\r\n    } catch (error) {\r\n      console.warn('获取快速链接图标失败:', link.title, error);\r\n      // 保持文字版本\r\n    }\r\n  })();\r\n  \r\n  return linkElement;\r\n}\r\n\r\n// 初始化动漫背景\r\nfunction initAnimeBackground(): void {\r\n  let currentBackgroundIndex = 0;\r\n  let backgroundChangeInterval: number;\r\n  \r\n  // 获取背景元素\r\n  const bg1 = getElement('anime-bg-1');\r\n  const bg2 = getElement('anime-bg-2');\r\n  const bgSwitchBtn = getElement('bg-switch-btn');\r\n  \r\n  if (!bg1 || !bg2) {\r\n    console.error('背景元素未找到');\r\n    return;\r\n  }\r\n  \r\n  // 从存储中加载当前背景索引和自动切换设置\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.get(['currentBackgroundIndex', 'autoChangeBackground'], (data: { currentBackgroundIndex?: number; autoChangeBackground?: boolean }): void => {\r\n      currentBackgroundIndex = data.currentBackgroundIndex || 0;\r\n      const autoChange = data.autoChangeBackground !== false; // 默认开启自动切换\r\n      \r\n      // 设置初始背景\r\n      setBackground(currentBackgroundIndex);\r\n      \r\n      // 如果开启自动切换，启动定时器\r\n      if (autoChange) {\r\n        startAutoChange();\r\n      }\r\n    });\r\n  } else {\r\n    // 本地测试环境\r\n    setBackground(0);\r\n    startAutoChange();\r\n  }\r\n  \r\n  // 背景切换按钮点击事件\r\n  if (bgSwitchBtn) {\r\n    bgSwitchBtn.addEventListener('click', (): void => {\r\n      switchToNextBackground();\r\n    });\r\n  }\r\n  \r\n  // 设置背景图片\r\n  function setBackground(index: number): void {\r\n    if (index >= 0 && index < animeBackgrounds.length) {\r\n      const background = animeBackgrounds[index];\r\n      \r\n      if (!background) {\r\n        console.error('背景数据不存在，索引:', index);\r\n        return;\r\n      }\r\n      \r\n      // 预加载图片\r\n      const img = new Image();\r\n      img.onload = (): void => {\r\n        // 图片加载完成后设置背景\r\n        if (bg1 && bg2) {\r\n          const activeBg = bg1.style.opacity === '0' ? bg1 : bg2;\r\n          const inactiveBg = activeBg === bg1 ? bg2 : bg1;\r\n          \r\n          // 设置新背景\r\n          activeBg.style.backgroundImage = `url(${background.url})`;\r\n          activeBg.style.opacity = '1';\r\n          \r\n          // 淡出旧背景\r\n          inactiveBg.style.opacity = '0';\r\n        }\r\n        \r\n        console.log('背景已切换到:', background.name);\r\n      };\r\n      \r\n      img.onerror = (): void => {\r\n        console.error('背景图片加载失败:', background.url);\r\n        // 如果图片加载失败，尝试下一张\r\n        switchToNextBackground();\r\n      };\r\n      \r\n      img.src = background.url;\r\n    }\r\n  }\r\n  \r\n  // 切换到下一张背景\r\n  function switchToNextBackground(): void {\r\n    currentBackgroundIndex = (currentBackgroundIndex + 1) % animeBackgrounds.length;\r\n    setBackground(currentBackgroundIndex);\r\n    \r\n    // 保存当前背景索引\r\n    if (typeof chrome !== 'undefined' && chrome.storage) {\r\n      chrome.storage.sync.set({ currentBackgroundIndex });\r\n    }\r\n    \r\n    // 重置自动切换定时器\r\n    if (backgroundChangeInterval) {\r\n      clearInterval(backgroundChangeInterval);\r\n      startAutoChange();\r\n    }\r\n  }\r\n  \r\n  // 开始自动切换\r\n  function startAutoChange(): void {\r\n    // 每30秒自动切换背景\r\n    backgroundChangeInterval = window.setInterval((): void => {\r\n      switchToNextBackground();\r\n    }, 30000);\r\n  }\r\n  \r\n  // 停止自动切换\r\n  function stopAutoChange(): void {\r\n    if (backgroundChangeInterval) {\r\n      clearInterval(backgroundChangeInterval);\r\n    }\r\n  }\r\n  \r\n  // 页面失去焦点时停止自动切换，获得焦点时恢复\r\n  document.addEventListener('visibilitychange', (): void => {\r\n    if (document.hidden) {\r\n      stopAutoChange();\r\n    } else {\r\n      startAutoChange();\r\n    }\r\n  });\r\n  \r\n  console.log('动漫背景初始化完成，共', animeBackgrounds.length, '张背景图片');\r\n}\r\n\r\n// 设置相关接口\r\ninterface AppSettings {\r\n  autoChangeBackground: boolean;\r\n  backgroundInterval: number;\r\n  showClock: boolean;\r\n  showDate: boolean;\r\n  theme: 'auto' | 'light' | 'dark';\r\n  searchEngine: SearchEngine;\r\n  searchSuggestions: boolean;\r\n  openInNewTab: boolean;\r\n}\r\n\r\n// 加载设置数据\r\nfunction loadSettingsData(): void {\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.get([\r\n      'autoChangeBackground',\r\n      'backgroundInterval', \r\n      'showClock',\r\n      'showDate',\r\n      'theme',\r\n      'searchEngine',\r\n      'searchSuggestions',\r\n      'openInNewTab'\r\n    ], (data: Partial<AppSettings>): void => {\r\n      // 常规设置\r\n      const autoChangeCheckbox = getElement<HTMLInputElement>('auto-change-background');\r\n      if (autoChangeCheckbox) {\r\n        autoChangeCheckbox.checked = data.autoChangeBackground !== false;\r\n      }\r\n      \r\n      const backgroundIntervalInput = getElement<HTMLInputElement>('background-interval');\r\n      if (backgroundIntervalInput) {\r\n        backgroundIntervalInput.value = String(data.backgroundInterval || 30);\r\n      }\r\n      \r\n      const showClockCheckbox = getElement<HTMLInputElement>('show-clock');\r\n      if (showClockCheckbox) {\r\n        showClockCheckbox.checked = data.showClock !== false;\r\n      }\r\n      \r\n      const showDateCheckbox = getElement<HTMLInputElement>('show-date');\r\n      if (showDateCheckbox) {\r\n        showDateCheckbox.checked = data.showDate !== false;\r\n      }\r\n      \r\n      // 外观设置\r\n      const theme = data.theme || 'auto';\r\n      const themeOptions = document.querySelectorAll('.theme-option');\r\n      themeOptions.forEach((option: Element): void => {\r\n        const themeOption = option as HTMLElement;\r\n        option.classList.remove('active');\r\n        if (themeOption.dataset['theme'] === theme) {\r\n          option.classList.add('active');\r\n        }\r\n      });\r\n      \r\n      // 搜索设置\r\n      const searchEngine = data.searchEngine || 'baidu';\r\n      const searchEngineRadios = document.querySelectorAll<HTMLInputElement>('input[name=\"search-engine\"]');\r\n      searchEngineRadios.forEach((radio: HTMLInputElement): void => {\r\n        radio.checked = radio.value === searchEngine;\r\n      });\r\n      \r\n      const searchSuggestionsCheckbox = getElement<HTMLInputElement>('search-suggestions');\r\n      if (searchSuggestionsCheckbox) {\r\n        searchSuggestionsCheckbox.checked = data.searchSuggestions !== false;\r\n      }\r\n      \r\n      const openInNewTabCheckbox = getElement<HTMLInputElement>('open-in-new-tab');\r\n      if (openInNewTabCheckbox) {\r\n        openInNewTabCheckbox.checked = data.openInNewTab !== false;\r\n      }\r\n      \r\n    });\r\n  } else {\r\n    // 本地测试环境，使用默认值\r\n    console.log('本地测试环境，使用默认设置');\r\n  }\r\n}\r\n\r\n// 保存设置数据\r\nfunction saveSettingsData(): void {\r\n  // 收集所有设置数据\r\n  const autoChangeCheckbox = getElement<HTMLInputElement>('auto-change-background');\r\n  const backgroundIntervalInput = getElement<HTMLInputElement>('background-interval');\r\n  const showClockCheckbox = getElement<HTMLInputElement>('show-clock');\r\n  const showDateCheckbox = getElement<HTMLInputElement>('show-date');\r\n  const searchSuggestionsCheckbox = getElement<HTMLInputElement>('search-suggestions');\r\n  const openInNewTabCheckbox = getElement<HTMLInputElement>('open-in-new-tab');\r\n  \r\n  // 获取选中的主题\r\n  const selectedTheme = document.querySelector('.theme-option.active') as HTMLElement;\r\n  const theme = selectedTheme?.dataset['theme'] || 'auto';\r\n  \r\n  // 获取选中的搜索引擎\r\n  const selectedSearchEngine = document.querySelector<HTMLInputElement>('input[name=\"search-engine\"]:checked');\r\n  const searchEngine = selectedSearchEngine?.value || 'baidu';\r\n  \r\n  const settings: Partial<AppSettings> = {\r\n    autoChangeBackground: autoChangeCheckbox?.checked !== false,\r\n    backgroundInterval: parseInt(backgroundIntervalInput?.value || '30'),\r\n    showClock: showClockCheckbox?.checked !== false,\r\n    showDate: showDateCheckbox?.checked !== false,\r\n    theme: theme as 'auto' | 'light' | 'dark',\r\n    searchEngine: searchEngine as SearchEngine,\r\n    searchSuggestions: searchSuggestionsCheckbox?.checked !== false,\r\n    openInNewTab: openInNewTabCheckbox?.checked !== false\r\n  };\r\n  \r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.set(settings, (): void => {\r\n      console.log('设置已保存:', settings);\r\n      alert('设置已保存！');\r\n      \r\n      // 应用一些立即生效的设置\r\n      applySettings(settings);\r\n    });\r\n  } else {\r\n    // 本地测试环境\r\n    console.log('本地测试环境，设置已保存:', settings);\r\n    alert('设置已保存！');\r\n    applySettings(settings);\r\n  }\r\n}\r\n\r\n// 重置设置数据\r\nfunction resetSettingsData(): void {\r\n  const defaultSettings: AppSettings = {\r\n    autoChangeBackground: true,\r\n    backgroundInterval: 30,\r\n    showClock: true,\r\n    showDate: true,\r\n    theme: 'auto',\r\n    searchEngine: 'baidu',\r\n    searchSuggestions: true,\r\n    openInNewTab: true\r\n  };\r\n  \r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.set(defaultSettings, (): void => {\r\n      console.log('设置已重置为默认值');\r\n      alert('设置已重置为默认值！');\r\n      \r\n      // 重新加载设置界面\r\n      loadSettingsData();\r\n      \r\n      // 应用默认设置\r\n      applySettings(defaultSettings);\r\n    });\r\n  } else {\r\n    // 本地测试环境\r\n    console.log('本地测试环境，设置已重置为默认值');\r\n    alert('设置已重置为默认值！');\r\n    loadSettingsData();\r\n    applySettings(defaultSettings);\r\n  }\r\n}\r\n\r\n// 应用设置（立即生效的设置）\r\nfunction applySettings(settings: Partial<AppSettings>): void {\r\n  // 应用时钟显示设置\r\n  const clockElement = getElement('clock');\r\n  const dateElement = getElement('date');\r\n  \r\n  if (clockElement) {\r\n    clockElement.style.display = settings.showClock === false ? 'none' : 'block';\r\n  }\r\n  \r\n  if (dateElement) {\r\n    dateElement.style.display = settings.showDate === false ? 'none' : 'block';\r\n  }\r\n  \r\n  // 应用搜索引擎设置\r\n  if (settings.searchEngine) {\r\n    const searchInput = getElement<HTMLInputElement>('search-input');\r\n    if (searchInput) {\r\n      const config = searchEngines[settings.searchEngine];\r\n      searchInput.placeholder = config.placeholder;\r\n    }\r\n  }\r\n  \r\n  console.log('设置已应用:', settings);\r\n}\r\n\r\n// 导出配置\r\nfunction exportConfiguration(): void {\r\n  try {\r\n    // 收集当前配置数据\r\n    const configData: ConfigData = {\r\n      workspaces: workspaces,\r\n      currentWorkspace: currentWorkspace,\r\n      exportTime: new Date().toISOString(),\r\n      version: '1.0.0'\r\n    };\r\n    \r\n    // 如果有Chrome存储，也导出设置\r\n    if (typeof chrome !== 'undefined' && chrome.storage) {\r\n      chrome.storage.sync.get([\r\n        'autoChangeBackground',\r\n        'backgroundInterval',\r\n        'showClock',\r\n        'showDate',\r\n        'theme',\r\n        'searchEngine',\r\n        'searchSuggestions',\r\n        'openInNewTab'\r\n      ], (settings: Partial<AppSettings>): void => {\r\n        configData.settings = settings;\r\n        downloadConfigFile(configData);\r\n      });\r\n    } else {\r\n      downloadConfigFile(configData);\r\n    }\r\n  } catch (error) {\r\n    console.error('导出配置失败:', error);\r\n    alert('导出配置失败，请重试。');\r\n  }\r\n}\r\n\r\n// 下载配置文件\r\nfunction downloadConfigFile(configData: ConfigData): void {\r\n  const jsonString = JSON.stringify(configData, null, 2);\r\n  const blob = new Blob([jsonString], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  \r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `mytab-config-${new Date().toISOString().split('T')[0]}.json`;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n  \r\n  console.log('配置已导出');\r\n  alert('配置导出成功！');\r\n}\r\n\r\n// 导入配置\r\nfunction importConfiguration(file: File): void {\r\n  const reader = new FileReader();\r\n  \r\n  reader.onload = (e: ProgressEvent<FileReader>): void => {\r\n    try {\r\n      const content = e.target?.result as string;\r\n      const configData: ConfigData = JSON.parse(content);\r\n      \r\n      // 验证配置数据格式\r\n      if (!validateConfigData(configData)) {\r\n        alert('配置文件格式不正确，请选择有效的配置文件。');\r\n        return;\r\n      }\r\n      \r\n      // 获取导入模式\r\n      const importMode = getSelectedImportMode();\r\n      \r\n      // 确认导入\r\n      const confirmMessage = importMode === 'replace' \r\n        ? '确定要覆盖当前配置吗？这将删除所有现有的工作区和书签。'\r\n        : '确定要合并配置吗？重复的书签将被自动去除。';\r\n        \r\n      if (!confirm(confirmMessage)) {\r\n        return;\r\n      }\r\n      \r\n      // 执行导入\r\n      if (importMode === 'replace') {\r\n        replaceConfiguration(configData);\r\n      } else {\r\n        mergeConfiguration(configData);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('导入配置失败:', error);\r\n      alert('配置文件解析失败，请检查文件格式。');\r\n    }\r\n  };\r\n  \r\n  reader.readAsText(file);\r\n}\r\n\r\n// 验证配置数据格式\r\nfunction validateConfigData(data: any): data is ConfigData {\r\n  return (\r\n    data &&\r\n    typeof data === 'object' &&\r\n    data.workspaces &&\r\n    typeof data.workspaces === 'object' &&\r\n    typeof data.currentWorkspace === 'string' &&\r\n    typeof data.version === 'string'\r\n  );\r\n}\r\n\r\n// 获取选中的导入模式\r\nfunction getSelectedImportMode(): 'replace' | 'merge' {\r\n  const selectedMode = document.querySelector<HTMLInputElement>('input[name=\"import-mode\"]:checked');\r\n  return selectedMode?.value as 'replace' | 'merge' || 'replace';\r\n}\r\n\r\n// 覆盖配置\r\nfunction replaceConfiguration(configData: ConfigData): void {\r\n  // 直接替换工作区数据\r\n  workspaces = configData.workspaces;\r\n  currentWorkspace = configData.currentWorkspace;\r\n  \r\n  // 确保当前工作区存在\r\n  if (!workspaces[currentWorkspace]) {\r\n    currentWorkspace = Object.keys(workspaces)[0] || 'default';\r\n  }\r\n  \r\n  // 保存到存储\r\n  saveConfigurationToStorage(configData, (): void => {\r\n    // 更新UI\r\n      updateWorkspaceList();\r\n  initBookmarks();\r\n    \r\n    alert('配置导入成功！页面将刷新以应用新配置。');\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1000);\r\n  });\r\n}\r\n\r\n// 合并配置\r\nfunction mergeConfiguration(configData: ConfigData): void {\r\n  // 合并工作区\r\n  Object.keys(configData.workspaces).forEach((workspaceId: string): void => {\r\n    const importedWorkspace = configData.workspaces[workspaceId];\r\n    \r\n    // 检查导入的工作区是否存在\r\n    if (!importedWorkspace) {\r\n      return;\r\n    }\r\n    \r\n    if (workspaces[workspaceId]) {\r\n      // 工作区已存在，合并书签\r\n      const existingBookmarks = workspaces[workspaceId].bookmarks;\r\n      const importedBookmarks = importedWorkspace.bookmarks;\r\n      \r\n      // 去重合并书签（基于URL）\r\n      const mergedBookmarks = [...existingBookmarks];\r\n      const existingUrls = new Set(existingBookmarks.map(b => b.url));\r\n      \r\n      importedBookmarks.forEach((bookmark: Bookmark): void => {\r\n        if (!existingUrls.has(bookmark.url)) {\r\n          mergedBookmarks.push(bookmark);\r\n        }\r\n      });\r\n      \r\n      workspaces[workspaceId].bookmarks = mergedBookmarks;\r\n    } else {\r\n      // 工作区不存在，直接添加\r\n      workspaces[workspaceId] = { ...importedWorkspace };\r\n    }\r\n  });\r\n  \r\n  // 保存到存储\r\n  saveConfigurationToStorage(configData, (): void => {\r\n    // 更新UI\r\n      updateWorkspaceList();\r\n  initBookmarks();\r\n    \r\n    alert('配置合并成功！');\r\n  });\r\n}\r\n\r\n// 保存配置到存储\r\nfunction saveConfigurationToStorage(configData: ConfigData, callback: () => void): void {\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    const dataToSave: any = {\r\n      workspaces: workspaces,\r\n      currentWorkspace: currentWorkspace\r\n    };\r\n    \r\n    // 如果有设置数据，也保存设置\r\n    if (configData.settings) {\r\n      Object.assign(dataToSave, configData.settings);\r\n    }\r\n    \r\n    chrome.storage.sync.set(dataToSave, callback);\r\n  } else {\r\n    // 本地测试环境\r\n    console.log('本地测试环境，配置已保存');\r\n    callback();\r\n  }\r\n}\r\n\r\n// GitHub同步功能\r\nlet currentSyncStatus: SyncStatus = 'idle';\r\n\r\n// 初始化GitHub同步功能\r\nfunction initGitHubSync(): void {\r\n  const syncEnabledEl = getElement<HTMLInputElement>('github-sync-enabled');\r\n  const testConnectionBtn = getElement<HTMLButtonElement>('test-connection');\r\n  const syncNowBtn = getElement<HTMLButtonElement>('sync-now');\r\n  \r\n  if (syncEnabledEl) {\r\n    syncEnabledEl.addEventListener('change', toggleGitHubSync);\r\n    loadGitHubSyncSettings();\r\n  }\r\n  \r\n  if (testConnectionBtn) {\r\n    testConnectionBtn.addEventListener('click', testGitHubConnection);\r\n  }\r\n  \r\n  if (syncNowBtn) {\r\n    syncNowBtn.addEventListener('click', syncNow);\r\n  }\r\n}\r\n\r\n// 切换GitHub同步开关\r\nfunction toggleGitHubSync(): void {\r\n  const syncEnabledEl = getElement<HTMLInputElement>('github-sync-enabled');\r\n  const syncConfigEl = getElement<HTMLElement>('github-sync-config');\r\n  \r\n  if (!syncEnabledEl || !syncConfigEl) return;\r\n  \r\n  const syncEnabled = syncEnabledEl.checked;\r\n  \r\n  if (syncEnabled) {\r\n    syncConfigEl.style.display = 'block';\r\n    loadGitHubSyncSettings();\r\n  } else {\r\n    syncConfigEl.style.display = 'none';\r\n    // 保存禁用状态\r\n    if (typeof chrome !== 'undefined' && chrome.storage) {\r\n      chrome.storage.sync.set({ \r\n        githubSync: { enabled: false } \r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// 加载GitHub同步设置\r\nfunction loadGitHubSyncSettings(): void {\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.get(['githubSync'], (data: any) => {\r\n      const syncConfig = data.githubSync;\r\n      if (syncConfig) {\r\n        const syncEnabledEl = getElement<HTMLInputElement>('github-sync-enabled');\r\n        const githubTokenEl = getElement<HTMLInputElement>('github-token');\r\n        const syncConfigEl = getElement<HTMLElement>('github-sync-config');\r\n        \r\n        if (syncEnabledEl) syncEnabledEl.checked = syncConfig.enabled;\r\n        if (githubTokenEl) githubTokenEl.value = syncConfig.token || '';\r\n        \r\n        if (syncConfig.enabled && syncConfigEl) {\r\n          syncConfigEl.style.display = 'block';\r\n          updateSyncStatus('idle', '已启用GitHub同步');\r\n        } else if (syncConfigEl) {\r\n          syncConfigEl.style.display = 'none';\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// 测试GitHub连接\r\nasync function testGitHubConnection(): Promise<void> {\r\n  const tokenInput = getElement<HTMLInputElement>('github-token');\r\n  if (!tokenInput) return;\r\n  \r\n  const token = tokenInput.value.trim();\r\n  \r\n  if (!token) {\r\n    updateSyncStatus('error', '请输入GitHub Token');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    updateSyncStatus('syncing', '正在测试连接...');\r\n    \r\n    // 创建Octokit实例\r\n    const octokit = new Octokit({\r\n      auth: token,\r\n    });\r\n    \r\n    // 测试连接\r\n    const response = await octokit.rest.users.getAuthenticated();\r\n    updateSyncStatus('success', `连接成功，用户: ${response.data.login}`);\r\n    \r\n    // 保存token\r\n    if (typeof chrome !== 'undefined' && chrome.storage) {\r\n      chrome.storage.sync.set({\r\n        githubSync: { token, enabled: true }\r\n      });\r\n    }\r\n    \r\n  } catch (error: any) {\r\n    updateSyncStatus('error', `连接失败: ${error.message}`);\r\n  }\r\n}\r\n\r\n// 立即同步\r\nasync function syncNow(): Promise<void> {\r\n  const tokenInput = getElement<HTMLInputElement>('github-token');\r\n  if (!tokenInput) return;\r\n  \r\n  const token = tokenInput.value.trim();\r\n  \r\n  if (!token) {\r\n    updateSyncStatus('error', '请先设置GitHub Token');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    updateSyncStatus('syncing', '正在同步...');\r\n    \r\n    // 获取当前本地设置\r\n    const localData = await getCurrentSettings();\r\n    \r\n    // 获取或创建gist\r\n    const gistId = await getOrCreateGist(token);\r\n\r\n    if (!gistId) {\r\n      updateSyncStatus('error', '创建gist失败');\r\n      return;\r\n    }\r\n\r\n    \r\n    // 同步数据\r\n    await syncWithGist(token, gistId, localData);\r\n    \r\n    \r\n    updateSyncStatus('success', '同步完成');\r\n    \r\n  } catch (error: any) {\r\n    updateSyncStatus('error', `同步失败: ${error.message}`);\r\n  }\r\n}\r\n\r\n// 获取当前设置\r\nasync function getCurrentSettings(): Promise<SyncData> {\r\n  return new Promise((resolve) => {\r\n    if (typeof chrome !== 'undefined' && chrome.storage) {\r\n      chrome.storage.sync.get(['bookmarks', 'searchEngine', 'theme', 'workspaces', 'currentWorkspace'], (data: any) => {\r\n        resolve({\r\n          bookmarks: data.bookmarks || [],\r\n          searchEngine: data.searchEngine || 'baidu',\r\n          theme: data.theme || 'light',\r\n          workspaces: data.workspaces || workspaces,\r\n          currentWorkspace: data.currentWorkspace || currentWorkspace,\r\n          lastSync: new Date().toISOString()\r\n        });\r\n      });\r\n    } else {\r\n      // 本地测试环境\r\n      resolve({\r\n        bookmarks: [],\r\n        searchEngine: 'baidu',\r\n        theme: 'light',\r\n        workspaces: workspaces,\r\n        currentWorkspace: currentWorkspace,\r\n        lastSync: new Date().toISOString()\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// 获取或创建gist\r\nasync function getOrCreateGist(token: string): Promise<string | null> {\r\n  const octokit = new Octokit({\r\n    auth: token,\r\n  });\r\n  \r\n  // 获取用户的所有gists\r\n  const response = await octokit.rest.gists.list();\r\n  const gists = response.data;\r\n  \r\n  // 查找名为mytab的gist\r\n  const existingGist = gists.find((gist: any) => \r\n    gist.files && 'mytab-config.json' in gist.files\r\n  );\r\n  \r\n  if (existingGist) {\r\n    return existingGist.id;\r\n  }\r\n  \r\n  // 创建新的gist\r\n  const createResponse = await octokit.rest.gists.create({\r\n    description: 'MyTab Extension Configuration',\r\n    public: false,\r\n    files: {\r\n      'mytab-config.json': {\r\n        content: JSON.stringify({\r\n          bookmarks: [],\r\n          searchEngine: 'baidu',\r\n          theme: 'light',\r\n          workspaces: {},\r\n          currentWorkspace: 'default'\r\n        }, null, 2)\r\n      }\r\n    }\r\n  });\r\n  \r\n  return createResponse.data.id || null;\r\n}\r\n\r\n// 与gist同步\r\nasync function syncWithGist(token: string, gistId: string, localData: SyncData): Promise<void> {\r\n  const octokit = new Octokit({\r\n    auth: token,\r\n  });\r\n  \r\n  // 获取gist内容\r\n  const gistResponse = await octokit.rest.gists.get({\r\n    gist_id: gistId\r\n  });\r\n  \r\n  const gistContent = gistResponse.data.files!['mytab-config.json']?.content;\r\n  let remoteData: SyncData;\r\n  \r\n  if (gistContent) {\r\n    remoteData = JSON.parse(gistContent);\r\n  } else {\r\n    remoteData = localData;\r\n  }\r\n  \r\n  // 合并本地和远程数据\r\n  const mergedData = mergeData(localData, remoteData);\r\n  \r\n  // 更新本地存储\r\n  if (typeof chrome !== 'undefined' && chrome.storage) {\r\n    chrome.storage.sync.set({\r\n      bookmarks: mergedData.bookmarks,\r\n      searchEngine: mergedData.searchEngine,\r\n      theme: mergedData.theme,\r\n      workspaces: mergedData.workspaces,\r\n      currentWorkspace: mergedData.currentWorkspace,\r\n      githubSync: { \r\n        token, \r\n        enabled: true, \r\n        gistId \r\n      }\r\n    });\r\n  }\r\n  \r\n  // 更新全局变量\r\n  workspaces = mergedData.workspaces;\r\n  currentWorkspace = mergedData.currentWorkspace;\r\n  \r\n  // 更新gist\r\n  await octokit.rest.gists.update({\r\n    gist_id: gistId,\r\n    files: {\r\n      'mytab-config.json': {\r\n        content: JSON.stringify(mergedData, null, 2)\r\n      }\r\n    }\r\n  });\r\n  \r\n  // 重新渲染界面\r\n  await completeWorkspaceInit();\r\n  await initBookmarks();\r\n  updateLastSyncTime();\r\n}\r\n\r\n// 合并数据\r\nfunction mergeData(localData: SyncData, remoteData: SyncData): SyncData {\r\n  // 简单的合并策略：使用最新的时间戳\r\n  const localTime = new Date(localData.lastSync || '1970-01-01').getTime();\r\n  const remoteTime = new Date(remoteData.lastSync || '1970-01-01').getTime();\r\n  \r\n  if (localTime > remoteTime) {\r\n    return { ...localData, lastSync: new Date().toISOString() };\r\n  } else {\r\n    return { ...remoteData, lastSync: new Date().toISOString() };\r\n  }\r\n}\r\n\r\n// 更新同步状态\r\nfunction updateSyncStatus(status: SyncStatus, message: string): void {\r\n  currentSyncStatus = status;\r\n  const statusElement = getElement<HTMLElement>('sync-status-text');\r\n  if (statusElement) {\r\n    statusElement.textContent = message;\r\n    statusElement.className = `sync-status-${status}`;\r\n  }\r\n  \r\n  // 更新按钮状态\r\n  const testButton = getElement<HTMLButtonElement>('test-connection');\r\n  const syncButton = getElement<HTMLButtonElement>('sync-now');\r\n  \r\n  if (status === 'syncing') {\r\n    if (testButton) testButton.disabled = true;\r\n    if (syncButton) syncButton.disabled = true;\r\n  } else {\r\n    if (testButton) testButton.disabled = false;\r\n    if (syncButton) syncButton.disabled = false;\r\n  }\r\n}\r\n\r\n// 更新最后同步时间\r\nfunction updateLastSyncTime(): void {\r\n  const lastSyncElement = getElement<HTMLElement>('last-sync-time');\r\n  if (lastSyncElement) {\r\n    const now = new Date();\r\n    lastSyncElement.textContent = `最后同步: ${now.toLocaleString('zh-CN')}`;\r\n  }\r\n} "],"names":["workspaces","currentWorkspace","getElement","id","searchEngines","animeBackgrounds","updateClock","initSearch","initSidebar","initModals","initGitHubSync","initBottomBarIcons","initWorkspaces","initAnimeBackground","error","now","hours","minutes","seconds","clockElement","options","dateElement","searchInput","searchForm","data","engine","config","e","query","performSearch","searchUrl","getDefaultWorkspaces","completeWorkspaceInit","updateWorkspaceList","initBookmarks","workspaceList","workspace","workspaceItem","icon","name","switchWorkspace","showWorkspaceContextMenu","workspaceId","workspaceElement","existingMenu","contextMenu","editOption","editWorkspace","deleteOption","deleteWorkspace","closeMenu","event","addWorkspaceModal","workspaceNameInput","option","modalTitle","bookmarksContainer","currentWorkspaceData","bookmarks","bookmark","createBookmarkElementWithLogo","bookmarkElement","defaultBookmarks","addButton","createAddBookmarkButton","delay","showBookmarkContextMenu","editBookmark","deleteBookmark","addBookmarkModal","titleInput","urlInput","descriptionInput","bookmarkIndex","b","getWebsiteFavicon","url","domain","faviconPaths","faviconPath","checkImageExists","resolve","img","bookmarkItem","iconContainer","showTextIcon","showImageIcon","iconUrl","iconImg","titleElement","addBookmarkItem","addWorkspaceBtn","addWorkspaceForm","cancelWorkspaceBtn","addBookmarkForm","cancelBookmarkBtn","clearIconSelection","iconOptions","opt","selectedIcon","workspaceName","workspaceIcon","isEditMode","editWorkspaceData","originalWorkspace","title","description","editBookmarkData","originalBookmark","newBookmark","settingsBtn","settingsModal","cancelSettingsBtn","saveSettingsBtn","resetSettingsBtn","closeSettingsBtn","loadSettingsData","settingsModalContent","tabBtns","tabContents","btn","tabBtn","targetTab","c","targetContent","themeOptions","saveSettingsData","resetSettingsData","exportConfigBtn","importConfigBtn","importFileInput","exportConfiguration","target","file","importConfiguration","quickLinks","fixedLinksContainer","link","createQuickLinkElement","linkElement","faviconUrl","currentBackgroundIndex","backgroundChangeInterval","bg1","bg2","bgSwitchBtn","autoChange","setBackground","startAutoChange","switchToNextBackground","index","background","activeBg","inactiveBg","stopAutoChange","autoChangeCheckbox","backgroundIntervalInput","showClockCheckbox","showDateCheckbox","theme","themeOption","searchEngine","radio","searchSuggestionsCheckbox","openInNewTabCheckbox","settings","applySettings","defaultSettings","configData","downloadConfigFile","jsonString","blob","a","reader","content","validateConfigData","importMode","getSelectedImportMode","replaceConfiguration","mergeConfiguration","saveConfigurationToStorage","importedWorkspace","existingBookmarks","importedBookmarks","mergedBookmarks","existingUrls","callback","dataToSave","syncEnabledEl","testConnectionBtn","syncNowBtn","toggleGitHubSync","loadGitHubSyncSettings","testGitHubConnection","syncNow","syncConfigEl","syncConfig","githubTokenEl","updateSyncStatus","tokenInput","token","response","Octokit","localData","getCurrentSettings","gistId","getOrCreateGist","syncWithGist","octokit","existingGist","gist","gistContent","remoteData","mergedData","mergeData","updateLastSyncTime","localTime","remoteTime","status","message","statusElement","testButton","syncButton","lastSyncElement"],"mappings":"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"}