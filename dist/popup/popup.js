import{O as g}from"../chunks/index-C7sbpHLK.js";function o(t){const e=document.getElementById(t);if(!e)throw new Error(`Element with id '${t}' not found`);return e}function k(t){const e=document.querySelector(t);if(!e)throw new Error(`Element with selector '${t}' not found`);return e}document.addEventListener("DOMContentLoaded",()=>{b(),o("add-bookmark").addEventListener("click",y),o("cancel-add-bookmark").addEventListener("click",h),o("add-bookmark-form").addEventListener("submit",f),o("save-settings").addEventListener("click",E),o("github-sync-enabled").addEventListener("change",w),o("test-connection").addEventListener("click",C),o("sync-now").addEventListener("click",L);const t=document.querySelectorAll(".theme-option");t.forEach(e=>{e.addEventListener("click",()=>{t.forEach(n=>n.classList.remove("active")),e.classList.add("active")})})});function b(){chrome.storage.sync.get(["bookmarks","searchEngine","theme","githubSync"],t=>{if(t.bookmarks&&u(t.bookmarks),t.searchEngine){const e=document.querySelector(`input[name="search-engine"][value="${t.searchEngine}"]`);e&&(e.checked=!0)}if(t.theme){const e=document.querySelector(`.theme-option[data-theme="${t.theme}"]`);e&&(document.querySelectorAll(".theme-option").forEach(n=>n.classList.remove("active")),e.classList.add("active"))}else{const e=document.querySelector('.theme-option[data-theme="light"]');e&&e.classList.add("active")}if(t.githubSync){const e=o("github-sync-enabled"),n=o("github-sync-config"),c=o("github-token");e.checked=t.githubSync.enabled,c.value=t.githubSync.token||"",t.githubSync.enabled?(n.style.display="block",l("idle","已启用GitHub同步")):n.style.display="none"}})}function u(t){const e=o("bookmark-list");e.innerHTML="",t.forEach((n,c)=>{const s=document.createElement("div");s.className="bookmark-item";const r=document.createElement("div");r.className="bookmark-info";const i=document.createElement("img");i.className="bookmark-icon",i.src=n.icon||`https://www.google.com/s2/favicons?domain=${n.url}`,i.alt="";const a=document.createElement("span");a.className="bookmark-title",a.textContent=n.title,r.appendChild(i),r.appendChild(a);const d=document.createElement("div");d.className="bookmark-actions";const m=document.createElement("button");m.className="bookmark-action",m.textContent="删除",m.addEventListener("click",()=>p(c)),d.appendChild(m),s.appendChild(r),s.appendChild(d),e.appendChild(s)})}function y(){o("add-bookmark-dialog").classList.add("active")}function h(){o("add-bookmark-dialog").classList.remove("active"),o("add-bookmark-form").reset()}function f(t){t.preventDefault();const e=o("bookmark-title"),n=o("bookmark-url"),c=e.value.trim();let s=n.value.trim();!s.startsWith("http://")&&!s.startsWith("https://")&&(s="https://"+s),chrome.storage.sync.get("bookmarks",r=>{const i=r.bookmarks||[],a={title:c,url:s,icon:`https://www.google.com/s2/favicons?domain=${s}`};i.push(a),chrome.storage.sync.set({bookmarks:i},()=>{u(i),h()})})}function p(t){chrome.storage.sync.get("bookmarks",e=>{const n=e.bookmarks||[];n.splice(t,1),chrome.storage.sync.set({bookmarks:n},()=>{u(n)})})}function E(){const e=k('input[name="search-engine"]:checked').value,c=k(".theme-option.active").dataset.theme;chrome.storage.sync.set({searchEngine:e,theme:c},()=>{const s=o("save-settings"),r=s.textContent||"保存设置";s.textContent="已保存",s.disabled=!0,setTimeout(()=>{s.textContent=r,s.disabled=!1},1500)})}let S="idle";function w(){const t=o("github-sync-enabled").checked,e=o("github-sync-config");t?(e.style.display="block",v()):(e.style.display="none",chrome.storage.sync.set({githubSync:{enabled:!1}}))}function v(){chrome.storage.sync.get(["githubSync"],t=>{const e=t.githubSync;e&&(o("github-sync-enabled").checked=e.enabled,o("github-token").value=e.token||"",e.enabled&&(o("github-sync-config").style.display="block"))})}async function C(){const e=o("github-token").value.trim();if(!e){l("error","请输入GitHub Token");return}try{l("syncing","正在测试连接...");const c=await new g({auth:e}).rest.users.getAuthenticated();l("success",`连接成功，用户: ${c.data.login}`),chrome.storage.sync.set({githubSync:{token:e,enabled:!0}})}catch(n){l("error",`连接失败: ${n.message}`)}}async function L(){const t=o("github-token").value.trim();if(!t){l("error","请先设置GitHub Token");return}try{l("syncing","正在同步...");const e=await B(),n=await T(t);await I(t,n,e),l("success","同步完成")}catch(e){l("error",`同步失败: ${e.message}`)}}function B(){return new Promise(t=>{chrome.storage.sync.get(["bookmarks","searchEngine","theme","workspaces","currentWorkspace"],e=>{t({bookmarks:e.bookmarks||[],searchEngine:e.searchEngine||"baidu",theme:e.theme||"light",workspaces:e.workspaces||{},currentWorkspace:e.currentWorkspace||"default",lastSync:new Date().toISOString()})})})}async function T(t){const e=new g({auth:t}),s=(await e.rest.gists.list()).data.find(i=>i.files&&"mytab-config.json"in i.files);return s?s.id:(await e.rest.gists.create({description:"MyTab Extension Configuration",public:!1,files:{"mytab-config.json":{content:JSON.stringify({bookmarks:[],searchEngine:"baidu",theme:"light",workspaces:{},currentWorkspace:"default"},null,2)}}})).data.id}async function I(t,e,n){const c=new g({auth:t}),r=(await c.rest.gists.get({gist_id:e})).data.files["mytab-config.json"]?.content;let i;r?i=JSON.parse(r):i=n;const a=N(n,i);chrome.storage.sync.set({bookmarks:a.bookmarks,searchEngine:a.searchEngine,theme:a.theme,workspaces:a.workspaces,currentWorkspace:a.currentWorkspace,githubSync:{token:t,enabled:!0,gistId:e}}),await c.rest.gists.update({gist_id:e,files:{"mytab-config.json":{content:JSON.stringify(a,null,2)}}}),u(a.bookmarks),x()}function N(t,e){const n=new Date(t.lastSync||"1970-01-01").getTime(),c=new Date(e.lastSync||"1970-01-01").getTime();return n>c?{...t,lastSync:new Date().toISOString()}:{...e,lastSync:new Date().toISOString()}}function l(t,e){S=t;const n=o("sync-status-text");n.textContent=e,n.className=`sync-status-${t}`;const c=o("test-connection"),s=o("sync-now");t==="syncing"?(c.disabled=!0,s.disabled=!0):(c.disabled=!1,s.disabled=!1)}function x(){const t=o("last-sync-time"),e=new Date;t.textContent=`最后同步: ${e.toLocaleString("zh-CN")}`}
//# sourceMappingURL=popup.js.map
