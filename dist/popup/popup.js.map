{"version":3,"file":"popup.js","sources":["../../src/popup/popup.ts"],"sourcesContent":["import { Bookmark, SearchEngine, Theme, StorageData, GitHubSyncConfig, SyncData, SyncStatus } from '../types/index.js';\r\nimport { Octokit } from '@octokit/rest';\r\n\r\n// 声明Chrome API类型\r\ndeclare const chrome: any;\r\n\r\n// DOM元素类型断言辅助函数\r\nfunction getElement<T extends HTMLElement>(id: string): T {\r\n  const element = document.getElementById(id) as T;\r\n  if (!element) {\r\n    throw new Error(`Element with id '${id}' not found`);\r\n  }\r\n  return element;\r\n}\r\n\r\nfunction getElementBySelector<T extends HTMLElement>(selector: string): T {\r\n  const element = document.querySelector(selector) as T;\r\n  if (!element) {\r\n    throw new Error(`Element with selector '${selector}' not found`);\r\n  }\r\n  return element;\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', (): void => {\r\n  // 加载设置\r\n  loadSettings();\r\n  \r\n  // 事件监听器\r\n  getElement('add-bookmark').addEventListener('click', showAddBookmarkDialog);\r\n  getElement('cancel-add-bookmark').addEventListener('click', hideAddBookmarkDialog);\r\n  getElement<HTMLFormElement>('add-bookmark-form').addEventListener('submit', handleAddBookmark);\r\n  getElement('save-settings').addEventListener('click', saveSettings);\r\n  \r\n  // GitHub同步相关事件监听器\r\n  getElement<HTMLInputElement>('github-sync-enabled').addEventListener('change', toggleGitHubSync);\r\n  getElement('test-connection').addEventListener('click', testGitHubConnection);\r\n  getElement('sync-now').addEventListener('click', syncNow);\r\n  \r\n  // 主题选择器事件监听\r\n  const themeButtons = document.querySelectorAll<HTMLElement>('.theme-option');\r\n  themeButtons.forEach((button: HTMLElement): void => {\r\n    button.addEventListener('click', (): void => {\r\n      themeButtons.forEach((btn: HTMLElement): void => btn.classList.remove('active'));\r\n      button.classList.add('active');\r\n    });\r\n  });\r\n});\r\n\r\n// 加载设置\r\nfunction loadSettings(): void {\r\n  chrome.storage.sync.get(['bookmarks', 'searchEngine', 'theme', 'githubSync'], (data: StorageData): void => {\r\n    // 加载书签\r\n    if (data.bookmarks) {\r\n      renderBookmarks(data.bookmarks);\r\n    }\r\n    \r\n    // 加载搜索引擎设置\r\n    if (data.searchEngine) {\r\n      const searchEngineInput = document.querySelector<HTMLInputElement>(`input[name=\"search-engine\"][value=\"${data.searchEngine}\"]`);\r\n      if (searchEngineInput) {\r\n        searchEngineInput.checked = true;\r\n      }\r\n    }\r\n    \r\n    // 加载主题设置\r\n    if (data.theme) {\r\n      const themeButton = document.querySelector<HTMLElement>(`.theme-option[data-theme=\"${data.theme}\"]`);\r\n      if (themeButton) {\r\n        document.querySelectorAll<HTMLElement>('.theme-option').forEach((btn: HTMLElement): void => btn.classList.remove('active'));\r\n        themeButton.classList.add('active');\r\n      }\r\n    } else {\r\n      // 默认主题\r\n      const defaultThemeButton = document.querySelector<HTMLElement>('.theme-option[data-theme=\"light\"]');\r\n      if (defaultThemeButton) {\r\n        defaultThemeButton.classList.add('active');\r\n      }\r\n    }\r\n    \r\n    // 加载GitHub同步设置\r\n    if (data.githubSync) {\r\n      const syncEnabled = getElement<HTMLInputElement>('github-sync-enabled');\r\n      const syncConfig = getElement('github-sync-config');\r\n      const githubToken = getElement<HTMLInputElement>('github-token');\r\n      \r\n      syncEnabled.checked = data.githubSync.enabled;\r\n      githubToken.value = data.githubSync.token || '';\r\n      \r\n      if (data.githubSync.enabled) {\r\n        syncConfig.style.display = 'block';\r\n        updateSyncStatus('idle', '已启用GitHub同步');\r\n      } else {\r\n        syncConfig.style.display = 'none';\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 渲染书签列表\r\nfunction renderBookmarks(bookmarks: Bookmark[]): void {\r\n  const bookmarkList = getElement('bookmark-list');\r\n  bookmarkList.innerHTML = '';\r\n  \r\n  bookmarks.forEach((bookmark: Bookmark, index: number): void => {\r\n    const bookmarkItem = document.createElement('div');\r\n    bookmarkItem.className = 'bookmark-item';\r\n    \r\n    const bookmarkInfo = document.createElement('div');\r\n    bookmarkInfo.className = 'bookmark-info';\r\n    \r\n    const favicon = document.createElement('img');\r\n    favicon.className = 'bookmark-icon';\r\n    favicon.src = bookmark.icon || `https://www.google.com/s2/favicons?domain=${bookmark.url}`;\r\n    favicon.alt = '';\r\n    \r\n    const title = document.createElement('span');\r\n    title.className = 'bookmark-title';\r\n    title.textContent = bookmark.title;\r\n    \r\n    bookmarkInfo.appendChild(favicon);\r\n    bookmarkInfo.appendChild(title);\r\n    \r\n    const bookmarkActions = document.createElement('div');\r\n    bookmarkActions.className = 'bookmark-actions';\r\n    \r\n    const deleteButton = document.createElement('button');\r\n    deleteButton.className = 'bookmark-action';\r\n    deleteButton.textContent = '删除';\r\n    deleteButton.addEventListener('click', (): void => deleteBookmark(index));\r\n    \r\n    bookmarkActions.appendChild(deleteButton);\r\n    \r\n    bookmarkItem.appendChild(bookmarkInfo);\r\n    bookmarkItem.appendChild(bookmarkActions);\r\n    \r\n    bookmarkList.appendChild(bookmarkItem);\r\n  });\r\n}\r\n\r\n// 显示添加书签对话框\r\nfunction showAddBookmarkDialog(): void {\r\n  const dialog = getElement('add-bookmark-dialog');\r\n  dialog.classList.add('active');\r\n}\r\n\r\n// 隐藏添加书签对话框\r\nfunction hideAddBookmarkDialog(): void {\r\n  const dialog = getElement('add-bookmark-dialog');\r\n  dialog.classList.remove('active');\r\n  getElement<HTMLFormElement>('add-bookmark-form').reset();\r\n}\r\n\r\n// 处理添加书签\r\nfunction handleAddBookmark(e: Event): void {\r\n  e.preventDefault();\r\n  \r\n  const titleInput = getElement<HTMLInputElement>('bookmark-title');\r\n  const urlInput = getElement<HTMLInputElement>('bookmark-url');\r\n  \r\n  const title = titleInput.value.trim();\r\n  let url = urlInput.value.trim();\r\n  \r\n  // 确保URL格式正确\r\n  if (!url.startsWith('http://') && !url.startsWith('https://')) {\r\n    url = 'https://' + url;\r\n  }\r\n  \r\n  chrome.storage.sync.get('bookmarks', (data: StorageData): void => {\r\n    const bookmarks: Bookmark[] = data.bookmarks || [];\r\n    \r\n    // 添加新书签\r\n    const newBookmark: Bookmark = {\r\n      title,\r\n      url,\r\n      icon: `https://www.google.com/s2/favicons?domain=${url}`\r\n    };\r\n    \r\n    bookmarks.push(newBookmark);\r\n    \r\n    // 保存到存储\r\n    chrome.storage.sync.set({ bookmarks }, (): void => {\r\n      renderBookmarks(bookmarks);\r\n      hideAddBookmarkDialog();\r\n    });\r\n  });\r\n}\r\n\r\n// 删除书签\r\nfunction deleteBookmark(index: number): void {\r\n  chrome.storage.sync.get('bookmarks', (data: StorageData): void => {\r\n    const bookmarks: Bookmark[] = data.bookmarks || [];\r\n    \r\n    // 删除指定索引的书签\r\n    bookmarks.splice(index, 1);\r\n    \r\n    // 保存到存储\r\n    chrome.storage.sync.set({ bookmarks }, (): void => {\r\n      renderBookmarks(bookmarks);\r\n    });\r\n  });\r\n}\r\n\r\n// 保存设置\r\nfunction saveSettings(): void {\r\n  // 获取搜索引擎设置\r\n  const searchEngineInput = getElementBySelector<HTMLInputElement>('input[name=\"search-engine\"]:checked');\r\n  const searchEngine = searchEngineInput.value as SearchEngine;\r\n  \r\n  // 获取主题设置\r\n  const themeElement = getElementBySelector<HTMLElement>('.theme-option.active');\r\n  const theme = themeElement.dataset['theme'] as Theme;\r\n  \r\n  // 保存设置\r\n  chrome.storage.sync.set({ searchEngine, theme }, (): void => {\r\n    // 显示保存成功提示\r\n    const saveButton = getElement<HTMLButtonElement>('save-settings');\r\n    const originalText = saveButton.textContent || '保存设置';\r\n    saveButton.textContent = '已保存';\r\n    saveButton.disabled = true;\r\n    \r\n    setTimeout((): void => {\r\n      saveButton.textContent = originalText;\r\n      saveButton.disabled = false;\r\n    }, 1500);\r\n  });\r\n}\r\n\r\n// GitHub同步相关函数\r\nlet currentSyncStatus: SyncStatus = 'idle';\r\n\r\n// 切换GitHub同步开关\r\nfunction toggleGitHubSync(): void {\r\n  const syncEnabled = getElement<HTMLInputElement>('github-sync-enabled').checked;\r\n  const syncConfig = getElement('github-sync-config');\r\n  \r\n  if (syncEnabled) {\r\n    syncConfig.style.display = 'block';\r\n    loadGitHubSyncSettings();\r\n  } else {\r\n    syncConfig.style.display = 'none';\r\n    // 保存禁用状态\r\n    chrome.storage.sync.set({ \r\n      githubSync: { enabled: false } \r\n    });\r\n  }\r\n}\r\n\r\n// 加载GitHub同步设置\r\nfunction loadGitHubSyncSettings(): void {\r\n  chrome.storage.sync.get(['githubSync'], (data: StorageData): void => {\r\n    const syncConfig = data.githubSync;\r\n    if (syncConfig) {\r\n      getElement<HTMLInputElement>('github-sync-enabled').checked = syncConfig.enabled;\r\n      getElement<HTMLInputElement>('github-token').value = syncConfig.token || '';\r\n      \r\n      if (syncConfig.enabled) {\r\n        getElement('github-sync-config').style.display = 'block';\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 测试GitHub连接\r\nasync function testGitHubConnection(): Promise<void> {\r\n  const tokenInput = getElement<HTMLInputElement>('github-token');\r\n  const token = tokenInput.value.trim();\r\n  \r\n  if (!token) {\r\n    updateSyncStatus('error', '请输入GitHub Token');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    updateSyncStatus('syncing', '正在测试连接...');\r\n    \r\n    // 创建Octokit实例\r\n    const octokit = new Octokit({\r\n      auth: token,\r\n    });\r\n    \r\n    // 测试连接\r\n    const response = await octokit.rest.users.getAuthenticated();\r\n    updateSyncStatus('success', `连接成功，用户: ${response.data.login}`);\r\n    \r\n    // 保存token\r\n    chrome.storage.sync.set({\r\n      githubSync: { token, enabled: true }\r\n    });\r\n    \r\n  } catch (error: any) {\r\n    updateSyncStatus('error', `连接失败: ${error.message}`);\r\n  }\r\n}\r\n\r\n// 立即同步\r\nasync function syncNow(): Promise<void> {\r\n  const token = getElement<HTMLInputElement>('github-token').value.trim();\r\n  \r\n  if (!token) {\r\n    updateSyncStatus('error', '请先设置GitHub Token');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    updateSyncStatus('syncing', '正在同步...');\r\n    \r\n    // 获取当前本地设置\r\n    const localData = await getCurrentSettings();\r\n    \r\n    // 获取或创建gist\r\n    const gistId = await getOrCreateGist(token);\r\n    \r\n    // 同步数据\r\n    await syncWithGist(token, gistId, localData);\r\n    \r\n    updateSyncStatus('success', '同步完成');\r\n    \r\n  } catch (error: any) {\r\n    updateSyncStatus('error', `同步失败: ${error.message}`);\r\n  }\r\n}\r\n\r\n// 获取当前设置\r\nfunction getCurrentSettings(): Promise<SyncData> {\r\n  return new Promise((resolve) => {\r\n    chrome.storage.sync.get(['bookmarks', 'searchEngine', 'theme', 'workspaces', 'currentWorkspace'], (data: StorageData) => {\r\n      resolve({\r\n        bookmarks: data.bookmarks || [],\r\n        searchEngine: data.searchEngine || 'baidu',\r\n        theme: data.theme || 'light',\r\n        workspaces: data.workspaces || {},\r\n        currentWorkspace: data.currentWorkspace || 'default',\r\n        lastSync: new Date().toISOString()\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n// 获取或创建gist\r\nasync function getOrCreateGist(token: string): Promise<string> {\r\n  const octokit = new Octokit({\r\n    auth: token,\r\n  });\r\n  \r\n  // 获取用户的所有gists\r\n  const response = await octokit.rest.gists.list();\r\n  const gists = response.data;\r\n  \r\n  // 查找名为mytab的gist\r\n  const existingGist = gists.find((gist: any) => \r\n    gist.files && 'mytab-config.json' in gist.files\r\n  );\r\n  \r\n  if (existingGist) {\r\n    return existingGist.id;\r\n  }\r\n  \r\n  // 创建新的gist\r\n  const createResponse = await octokit.rest.gists.create({\r\n    description: 'MyTab Extension Configuration',\r\n    public: false,\r\n    files: {\r\n      'mytab-config.json': {\r\n        content: JSON.stringify({\r\n          bookmarks: [],\r\n          searchEngine: 'baidu',\r\n          theme: 'light',\r\n          workspaces: {},\r\n          currentWorkspace: 'default'\r\n        }, null, 2)\r\n      }\r\n    }\r\n  });\r\n  \r\n  return createResponse.data.id!;\r\n}\r\n\r\n// 与gist同步\r\nasync function syncWithGist(token: string, gistId: string, localData: SyncData): Promise<void> {\r\n  const octokit = new Octokit({\r\n    auth: token,\r\n  });\r\n  \r\n  // 获取gist内容\r\n  const gistResponse = await octokit.rest.gists.get({\r\n    gist_id: gistId\r\n  });\r\n  \r\n  const gistContent = gistResponse.data.files!['mytab-config.json']?.content;\r\n  let remoteData: SyncData;\r\n  \r\n  if (gistContent) {\r\n    remoteData = JSON.parse(gistContent);\r\n  } else {\r\n    remoteData = localData;\r\n  }\r\n  \r\n  // 合并本地和远程数据\r\n  const mergedData = mergeData(localData, remoteData);\r\n  \r\n  // 更新本地存储\r\n  chrome.storage.sync.set({\r\n    bookmarks: mergedData.bookmarks,\r\n    searchEngine: mergedData.searchEngine,\r\n    theme: mergedData.theme,\r\n    workspaces: mergedData.workspaces,\r\n    currentWorkspace: mergedData.currentWorkspace,\r\n    githubSync: { \r\n      token, \r\n      enabled: true, \r\n      gistId \r\n    }\r\n  });\r\n  \r\n  // 更新gist\r\n  await octokit.rest.gists.update({\r\n    gist_id: gistId,\r\n    files: {\r\n      'mytab-config.json': {\r\n        content: JSON.stringify(mergedData, null, 2)\r\n      }\r\n    }\r\n  });\r\n  \r\n  // 重新渲染界面\r\n  renderBookmarks(mergedData.bookmarks);\r\n  updateLastSyncTime();\r\n}\r\n\r\n// 合并数据\r\nfunction mergeData(localData: SyncData, remoteData: SyncData): SyncData {\r\n  // 简单的合并策略：使用最新的时间戳\r\n  const localTime = new Date(localData.lastSync || '1970-01-01').getTime();\r\n  const remoteTime = new Date(remoteData.lastSync || '1970-01-01').getTime();\r\n  \r\n  if (localTime > remoteTime) {\r\n    return { ...localData, lastSync: new Date().toISOString() };\r\n  } else {\r\n    return { ...remoteData, lastSync: new Date().toISOString() };\r\n  }\r\n}\r\n\r\n// 更新同步状态\r\nfunction updateSyncStatus(status: SyncStatus, message: string): void {\r\n  currentSyncStatus = status;\r\n  const statusElement = getElement('sync-status-text');\r\n  statusElement.textContent = message;\r\n  \r\n  // 更新样式\r\n  statusElement.className = `sync-status-${status}`;\r\n  \r\n  // 更新按钮状态\r\n  const testButton = getElement<HTMLButtonElement>('test-connection');\r\n  const syncButton = getElement<HTMLButtonElement>('sync-now');\r\n  \r\n  if (status === 'syncing') {\r\n    testButton.disabled = true;\r\n    syncButton.disabled = true;\r\n  } else {\r\n    testButton.disabled = false;\r\n    syncButton.disabled = false;\r\n  }\r\n}\r\n\r\n// 更新最后同步时间\r\nfunction updateLastSyncTime(): void {\r\n  const lastSyncElement = getElement('last-sync-time');\r\n  const now = new Date();\r\n  lastSyncElement.textContent = `最后同步: ${now.toLocaleString('zh-CN')}`;\r\n} "],"names":["getElement","id","element","getElementBySelector","selector","loadSettings","showAddBookmarkDialog","hideAddBookmarkDialog","handleAddBookmark","saveSettings","toggleGitHubSync","testGitHubConnection","syncNow","themeButtons","button","btn","data","renderBookmarks","searchEngineInput","themeButton","defaultThemeButton","syncEnabled","syncConfig","githubToken","updateSyncStatus","bookmarks","bookmarkList","bookmark","index","bookmarkItem","bookmarkInfo","favicon","title","bookmarkActions","deleteButton","deleteBookmark","e","titleInput","urlInput","url","newBookmark","searchEngine","theme","saveButton","originalText","currentSyncStatus","loadGitHubSyncSettings","token","response","Octokit","error","localData","getCurrentSettings","gistId","getOrCreateGist","syncWithGist","resolve","octokit","existingGist","gist","gistContent","remoteData","mergedData","mergeData","updateLastSyncTime","localTime","remoteTime","status","message","statusElement","testButton","syncButton","lastSyncElement","now"],"mappings":"gDAOA,SAASA,EAAkCC,EAAe,CACxD,MAAMC,EAAU,SAAS,eAAeD,CAAE,EAC1C,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,oBAAoBD,CAAE,aAAa,EAErD,OAAOC,CACT,CAEA,SAASC,EAA4CC,EAAqB,CACxE,MAAMF,EAAU,SAAS,cAAcE,CAAQ,EAC/C,GAAI,CAACF,EACH,MAAM,IAAI,MAAM,0BAA0BE,CAAQ,aAAa,EAEjE,OAAOF,CACT,CAEA,SAAS,iBAAiB,mBAAoB,IAAY,CAExDG,EAAA,EAGAL,EAAW,cAAc,EAAE,iBAAiB,QAASM,CAAqB,EAC1EN,EAAW,qBAAqB,EAAE,iBAAiB,QAASO,CAAqB,EACjFP,EAA4B,mBAAmB,EAAE,iBAAiB,SAAUQ,CAAiB,EAC7FR,EAAW,eAAe,EAAE,iBAAiB,QAASS,CAAY,EAGlET,EAA6B,qBAAqB,EAAE,iBAAiB,SAAUU,CAAgB,EAC/FV,EAAW,iBAAiB,EAAE,iBAAiB,QAASW,CAAoB,EAC5EX,EAAW,UAAU,EAAE,iBAAiB,QAASY,CAAO,EAGxD,MAAMC,EAAe,SAAS,iBAA8B,eAAe,EAC3EA,EAAa,QAASC,GAA8B,CAClDA,EAAO,iBAAiB,QAAS,IAAY,CAC3CD,EAAa,QAASE,GAA2BA,EAAI,UAAU,OAAO,QAAQ,CAAC,EAC/ED,EAAO,UAAU,IAAI,QAAQ,CAC/B,CAAC,CACH,CAAC,CACH,CAAC,EAGD,SAAST,GAAqB,CAC5B,OAAO,QAAQ,KAAK,IAAI,CAAC,YAAa,eAAgB,QAAS,YAAY,EAAIW,GAA4B,CAOzG,GALIA,EAAK,WACPC,EAAgBD,EAAK,SAAS,EAI5BA,EAAK,aAAc,CACrB,MAAME,EAAoB,SAAS,cAAgC,sCAAsCF,EAAK,YAAY,IAAI,EAC1HE,IACFA,EAAkB,QAAU,GAEhC,CAGA,GAAIF,EAAK,MAAO,CACd,MAAMG,EAAc,SAAS,cAA2B,6BAA6BH,EAAK,KAAK,IAAI,EAC/FG,IACF,SAAS,iBAA8B,eAAe,EAAE,QAASJ,GAA2BA,EAAI,UAAU,OAAO,QAAQ,CAAC,EAC1HI,EAAY,UAAU,IAAI,QAAQ,EAEtC,KAAO,CAEL,MAAMC,EAAqB,SAAS,cAA2B,mCAAmC,EAC9FA,GACFA,EAAmB,UAAU,IAAI,QAAQ,CAE7C,CAGA,GAAIJ,EAAK,WAAY,CACnB,MAAMK,EAAcrB,EAA6B,qBAAqB,EAChEsB,EAAatB,EAAW,oBAAoB,EAC5CuB,EAAcvB,EAA6B,cAAc,EAE/DqB,EAAY,QAAUL,EAAK,WAAW,QACtCO,EAAY,MAAQP,EAAK,WAAW,OAAS,GAEzCA,EAAK,WAAW,SAClBM,EAAW,MAAM,QAAU,QAC3BE,EAAiB,OAAQ,aAAa,GAEtCF,EAAW,MAAM,QAAU,MAE/B,CACF,CAAC,CACH,CAGA,SAASL,EAAgBQ,EAA6B,CACpD,MAAMC,EAAe1B,EAAW,eAAe,EAC/C0B,EAAa,UAAY,GAEzBD,EAAU,QAAQ,CAACE,EAAoBC,IAAwB,CAC7D,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAY,gBAEzB,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAY,gBAEzB,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,gBACpBA,EAAQ,IAAMJ,EAAS,MAAQ,6CAA6CA,EAAS,GAAG,GACxFI,EAAQ,IAAM,GAEd,MAAMC,EAAQ,SAAS,cAAc,MAAM,EAC3CA,EAAM,UAAY,iBAClBA,EAAM,YAAcL,EAAS,MAE7BG,EAAa,YAAYC,CAAO,EAChCD,EAAa,YAAYE,CAAK,EAE9B,MAAMC,EAAkB,SAAS,cAAc,KAAK,EACpDA,EAAgB,UAAY,mBAE5B,MAAMC,EAAe,SAAS,cAAc,QAAQ,EACpDA,EAAa,UAAY,kBACzBA,EAAa,YAAc,KAC3BA,EAAa,iBAAiB,QAAS,IAAYC,EAAeP,CAAK,CAAC,EAExEK,EAAgB,YAAYC,CAAY,EAExCL,EAAa,YAAYC,CAAY,EACrCD,EAAa,YAAYI,CAAe,EAExCP,EAAa,YAAYG,CAAY,CACvC,CAAC,CACH,CAGA,SAASvB,GAA8B,CACtBN,EAAW,qBAAqB,EACxC,UAAU,IAAI,QAAQ,CAC/B,CAGA,SAASO,GAA8B,CACtBP,EAAW,qBAAqB,EACxC,UAAU,OAAO,QAAQ,EAChCA,EAA4B,mBAAmB,EAAE,MAAA,CACnD,CAGA,SAASQ,EAAkB4B,EAAgB,CACzCA,EAAE,eAAA,EAEF,MAAMC,EAAarC,EAA6B,gBAAgB,EAC1DsC,EAAWtC,EAA6B,cAAc,EAEtDgC,EAAQK,EAAW,MAAM,KAAA,EAC/B,IAAIE,EAAMD,EAAS,MAAM,KAAA,EAGrB,CAACC,EAAI,WAAW,SAAS,GAAK,CAACA,EAAI,WAAW,UAAU,IAC1DA,EAAM,WAAaA,GAGrB,OAAO,QAAQ,KAAK,IAAI,YAAcvB,GAA4B,CAChE,MAAMS,EAAwBT,EAAK,WAAa,CAAA,EAG1CwB,EAAwB,CAC5B,MAAAR,EACA,IAAAO,EACA,KAAM,6CAA6CA,CAAG,EAAA,EAGxDd,EAAU,KAAKe,CAAW,EAG1B,OAAO,QAAQ,KAAK,IAAI,CAAE,UAAAf,CAAA,EAAa,IAAY,CACjDR,EAAgBQ,CAAS,EACzBlB,EAAA,CACF,CAAC,CACH,CAAC,CACH,CAGA,SAAS4B,EAAeP,EAAqB,CAC3C,OAAO,QAAQ,KAAK,IAAI,YAAcZ,GAA4B,CAChE,MAAMS,EAAwBT,EAAK,WAAa,CAAA,EAGhDS,EAAU,OAAOG,EAAO,CAAC,EAGzB,OAAO,QAAQ,KAAK,IAAI,CAAE,UAAAH,CAAA,EAAa,IAAY,CACjDR,EAAgBQ,CAAS,CAC3B,CAAC,CACH,CAAC,CACH,CAGA,SAAShB,GAAqB,CAG5B,MAAMgC,EADoBtC,EAAuC,qCAAqC,EAC/D,MAIjCuC,EADevC,EAAkC,sBAAsB,EAClD,QAAQ,MAGnC,OAAO,QAAQ,KAAK,IAAI,CAAE,aAAAsC,EAAc,MAAAC,CAAA,EAAS,IAAY,CAE3D,MAAMC,EAAa3C,EAA8B,eAAe,EAC1D4C,EAAeD,EAAW,aAAe,OAC/CA,EAAW,YAAc,MACzBA,EAAW,SAAW,GAEtB,WAAW,IAAY,CACrBA,EAAW,YAAcC,EACzBD,EAAW,SAAW,EACxB,EAAG,IAAI,CACT,CAAC,CACH,CAGA,IAAIE,EAAgC,OAGpC,SAASnC,GAAyB,CAChC,MAAMW,EAAcrB,EAA6B,qBAAqB,EAAE,QAClEsB,EAAatB,EAAW,oBAAoB,EAE9CqB,GACFC,EAAW,MAAM,QAAU,QAC3BwB,EAAA,IAEAxB,EAAW,MAAM,QAAU,OAE3B,OAAO,QAAQ,KAAK,IAAI,CACtB,WAAY,CAAE,QAAS,EAAA,CAAM,CAC9B,EAEL,CAGA,SAASwB,GAA+B,CACtC,OAAO,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAI9B,GAA4B,CACnE,MAAMM,EAAaN,EAAK,WACpBM,IACFtB,EAA6B,qBAAqB,EAAE,QAAUsB,EAAW,QACzEtB,EAA6B,cAAc,EAAE,MAAQsB,EAAW,OAAS,GAErEA,EAAW,UACbtB,EAAW,oBAAoB,EAAE,MAAM,QAAU,SAGvD,CAAC,CACH,CAGA,eAAeW,GAAsC,CAEnD,MAAMoC,EADa/C,EAA6B,cAAc,EACrC,MAAM,KAAA,EAE/B,GAAI,CAAC+C,EAAO,CACVvB,EAAiB,QAAS,iBAAiB,EAC3C,MACF,CAEA,GAAI,CACFA,EAAiB,UAAW,WAAW,EAQvC,MAAMwB,EAAW,MALD,IAAIC,EAAQ,CAC1B,KAAMF,CAAA,CACP,EAG8B,KAAK,MAAM,iBAAA,EAC1CvB,EAAiB,UAAW,YAAYwB,EAAS,KAAK,KAAK,EAAE,EAG7D,OAAO,QAAQ,KAAK,IAAI,CACtB,WAAY,CAAE,MAAAD,EAAO,QAAS,EAAA,CAAK,CACpC,CAEH,OAASG,EAAY,CACnB1B,EAAiB,QAAS,SAAS0B,EAAM,OAAO,EAAE,CACpD,CACF,CAGA,eAAetC,GAAyB,CACtC,MAAMmC,EAAQ/C,EAA6B,cAAc,EAAE,MAAM,KAAA,EAEjE,GAAI,CAAC+C,EAAO,CACVvB,EAAiB,QAAS,kBAAkB,EAC5C,MACF,CAEA,GAAI,CACFA,EAAiB,UAAW,SAAS,EAGrC,MAAM2B,EAAY,MAAMC,EAAA,EAGlBC,EAAS,MAAMC,EAAgBP,CAAK,EAG1C,MAAMQ,EAAaR,EAAOM,EAAQF,CAAS,EAE3C3B,EAAiB,UAAW,MAAM,CAEpC,OAAS0B,EAAY,CACnB1B,EAAiB,QAAS,SAAS0B,EAAM,OAAO,EAAE,CACpD,CACF,CAGA,SAASE,GAAwC,CAC/C,OAAO,IAAI,QAASI,GAAY,CAC9B,OAAO,QAAQ,KAAK,IAAI,CAAC,YAAa,eAAgB,QAAS,aAAc,kBAAkB,EAAIxC,GAAsB,CACvHwC,EAAQ,CACN,UAAWxC,EAAK,WAAa,CAAA,EAC7B,aAAcA,EAAK,cAAgB,QACnC,MAAOA,EAAK,OAAS,QACrB,WAAYA,EAAK,YAAc,CAAA,EAC/B,iBAAkBA,EAAK,kBAAoB,UAC3C,SAAU,IAAI,KAAA,EAAO,YAAA,CAAY,CAClC,CACH,CAAC,CACH,CAAC,CACH,CAGA,eAAesC,EAAgBP,EAAgC,CAC7D,MAAMU,EAAU,IAAIR,EAAQ,CAC1B,KAAMF,CAAA,CACP,EAOKW,GAJW,MAAMD,EAAQ,KAAK,MAAM,KAAA,GACnB,KAGI,KAAME,GAC/BA,EAAK,OAAS,sBAAuBA,EAAK,KAAA,EAG5C,OAAID,EACKA,EAAa,IAIC,MAAMD,EAAQ,KAAK,MAAM,OAAO,CACrD,YAAa,gCACb,OAAQ,GACR,MAAO,CACL,oBAAqB,CACnB,QAAS,KAAK,UAAU,CACtB,UAAW,CAAA,EACX,aAAc,QACd,MAAO,QACP,WAAY,CAAA,EACZ,iBAAkB,SAAA,EACjB,KAAM,CAAC,CAAA,CACZ,CACF,CACD,GAEqB,KAAK,EAC7B,CAGA,eAAeF,EAAaR,EAAeM,EAAgBF,EAAoC,CAC7F,MAAMM,EAAU,IAAIR,EAAQ,CAC1B,KAAMF,CAAA,CACP,EAOKa,GAJe,MAAMH,EAAQ,KAAK,MAAM,IAAI,CAChD,QAASJ,CAAA,CACV,GAEgC,KAAK,MAAO,mBAAmB,GAAG,QACnE,IAAIQ,EAEAD,EACFC,EAAa,KAAK,MAAMD,CAAW,EAEnCC,EAAaV,EAIf,MAAMW,EAAaC,EAAUZ,EAAWU,CAAU,EAGlD,OAAO,QAAQ,KAAK,IAAI,CACtB,UAAWC,EAAW,UACtB,aAAcA,EAAW,aACzB,MAAOA,EAAW,MAClB,WAAYA,EAAW,WACvB,iBAAkBA,EAAW,iBAC7B,WAAY,CACV,MAAAf,EACA,QAAS,GACT,OAAAM,CAAA,CACF,CACD,EAGD,MAAMI,EAAQ,KAAK,MAAM,OAAO,CAC9B,QAASJ,EACT,MAAO,CACL,oBAAqB,CACnB,QAAS,KAAK,UAAUS,EAAY,KAAM,CAAC,CAAA,CAC7C,CACF,CACD,EAGD7C,EAAgB6C,EAAW,SAAS,EACpCE,EAAA,CACF,CAGA,SAASD,EAAUZ,EAAqBU,EAAgC,CAEtE,MAAMI,EAAY,IAAI,KAAKd,EAAU,UAAY,YAAY,EAAE,QAAA,EACzDe,EAAa,IAAI,KAAKL,EAAW,UAAY,YAAY,EAAE,QAAA,EAEjE,OAAII,EAAYC,EACP,CAAE,GAAGf,EAAW,aAAc,KAAA,EAAO,aAAY,EAEjD,CAAE,GAAGU,EAAY,aAAc,KAAA,EAAO,aAAY,CAE7D,CAGA,SAASrC,EAAiB2C,EAAoBC,EAAuB,CACnEvB,EAAoBsB,EACpB,MAAME,EAAgBrE,EAAW,kBAAkB,EACnDqE,EAAc,YAAcD,EAG5BC,EAAc,UAAY,eAAeF,CAAM,GAG/C,MAAMG,EAAatE,EAA8B,iBAAiB,EAC5DuE,EAAavE,EAA8B,UAAU,EAEvDmE,IAAW,WACbG,EAAW,SAAW,GACtBC,EAAW,SAAW,KAEtBD,EAAW,SAAW,GACtBC,EAAW,SAAW,GAE1B,CAGA,SAASP,GAA2B,CAClC,MAAMQ,EAAkBxE,EAAW,gBAAgB,EAC7CyE,MAAU,KAChBD,EAAgB,YAAc,SAASC,EAAI,eAAe,OAAO,CAAC,EACpE"}